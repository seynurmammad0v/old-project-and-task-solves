{"version":3,"sources":["./src/app/Core/models/FAQ.ts","./src/app/Admin/courier-service/courier-service.component.ts","./src/app/Admin/courier-service/courier-service.component.html","./src/app/Admin/dialogs/parcel-info/parcel-info.component.ts","./src/app/Admin/dialogs/parcel-info/parcel-info.component.html","./src/app/Admin/dialogs/shop/shop-link-create-dialog/shop-link-create-dialog.component.ts","./src/app/Admin/dialogs/shop/shop-link-create-dialog/shop-link-create-dialog.component.html","./src/app/Core/services/Admin/userOrder/user-order.service.ts","./src/app/Admin/order-in-process/order-in-process.component.ts","./src/app/Admin/order-in-process/order-in-process.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/Core/services/status/status.service.ts","./src/app/Core/services/Admin/countries/countries.service.ts","./src/app/Core/services/order/order.service.ts","./src/app/Admin/cities/cities.component.ts","./src/app/Admin/cities/cities.component.html","./src/app/Core/services/Admin/users/users.service.ts","./src/app/Core/services/Admin/courier/courier.service.ts","./src/app/Admin/dialogs/product/create-ptoduct/create-ptoduct.component.ts","./src/app/Admin/dialogs/product/create-ptoduct/create-ptoduct.component.html","./src/app/Core/services/Admin/city/city.service.ts","./src/app/Admin/dialogs/city/update-city/update-city.component.ts","./src/app/Admin/dialogs/city/update-city/update-city.component.html","./src/app/Admin/statemets-admin/statemets-admin.component.ts","./src/app/Admin/statemets-admin/statemets-admin.component.html","./src/app/news/news.component.ts","./src/app/news/news.component.html","./src/app/Admin/dialogs/courier/courier-update/courier-update.component.ts","./src/app/Admin/dialogs/courier/courier-update/courier-update.component.html","./src/app/Admin/dialogs/country/country-info-edit/country-info-edit.component.ts","./src/app/Admin/dialogs/country/country-info-edit/country-info-edit.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/myprofile/dialogs/statement-update/statement-update.component.ts","./src/app/myprofile/dialogs/statement-update/statement-update.component.html","./src/app/Core/models/MessageUser.ts","./src/app/Core/services/Admin/countries/country-info.service.ts","./src/app/restore-password/restore-password.component.ts","./src/app/restore-password/restore-password.component.html","./src/app/Admin/offices/offices.component.ts","./src/app/Admin/offices/offices.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/Admin/dialogs/country/country-create-dialog/country-create-dialog.component.ts","./src/app/Admin/dialogs/country/country-create-dialog/country-create-dialog.component.html","./src/app/Admin/dialogs/country/price-update/price-update.component.ts","./src/app/Admin/dialogs/country/price-update/price-update.component.html","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/Admin/dialogs/news/create-news/create-news.component.ts","./src/app/Admin/dialogs/news/create-news/create-news.component.html","./src/app/Admin/products/products.component.ts","./src/app/Admin/products/products.component.html","./src/app/mobile-navbar/mobile-navbar.component.ts","./src/app/mobile-navbar/mobile-navbar.component.html","./src/app/Core/services/lang/languages.service.ts","./src/app/Admin/shops/shop-link/shop-link.component.ts","./src/app/Admin/shops/shop-link/shop-link.component.html","./src/app/Admin/dialogs/auth/role-dialog/role-dialog.component.ts","./src/app/Admin/dialogs/auth/role-dialog/role-dialog.component.html","./src/app/Admin/dialogs/flight/update-flight/update-flight.component.ts","./src/app/Admin/dialogs/flight/update-flight/update-flight.component.html","./src/app/Core/guards/auth-out.guard.ts","./src/app/myprofile/ended/ended.component.ts","./src/app/myprofile/ended/ended.component.html","./src/app/myprofile/in-anbar/in-anbar.component.ts","./src/app/myprofile/in-anbar/in-anbar.component.html","./src/app/Admin/order-processed/order-processed.component.ts","./src/app/Admin/order-processed/order-processed.component.html","./src/app/Admin/bio/bio.component.ts","./src/app/Admin/bio/bio.component.html","./src/Animations/animation.ts","./src/app/Admin/dialogs/courier/courier-create/courier-create.component.ts","./src/app/Admin/dialogs/courier/courier-create/courier-create.component.html","./src/app/Core/services/cargo/cargo.service.ts","./src/app/Core/services/global/global.service.ts","./src/app/Core/services/Admin/service/service.service.ts","./src/app/Admin/flight/flight.component.ts","./src/app/Admin/flight/flight.component.html","./src/app/Admin/dialogs/office/create-office/create-office.component.ts","./src/app/Admin/dialogs/office/create-office/create-office.component.html","./src/app/Core/services/login/login.service.ts","./src/app/Core/services/orderAdmin/order-admin.service.ts","./src/app/Core/services/Admin/shop/shop-link.service.ts","./src/app/Admin/dialogs/shop/shop-link-update-dialog/shop-link-update-dialog.component.ts","./src/app/Admin/dialogs/shop/shop-link-update-dialog/shop-link-update-dialog.component.html","./src/app/Core/services/balance/balance.service.ts","./src/app/tariffs/tariffs.component.ts","./src/app/tariffs/tariffs.component.html","./src/app/myprofile/orders/orders.component.ts","./src/app/myprofile/orders/orders.component.html","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/app/courier/courier.component.ts","./src/app/courier/courier.component.html","./src/app/service/service.component.ts","./src/app/service/service.component.html","./src/app/banner/banner.component.ts","./src/app/banner/banner.component.html","./src/app/Admin/dialogs/product/update-product/update-product.component.ts","./src/app/Admin/dialogs/product/update-product/update-product.component.html","./src/app/Core/services/Admin/shop/shop.service.ts","./src/app/Core/services/Admin/countries/tariff/tariff.service.ts","./src/app/Admin/about-us/about-us.component.ts","./src/app/Admin/about-us/about-us.component.html","./src/app/Core/services/Admin/office/office.service.ts","./src/app/Admin/dialogs/faq/faq-create/faq-create.component.ts","./src/app/Admin/dialogs/faq/faq-create/faq-create.component.html","./src/app/Core/services/app-initializer.ts","./src/app/Admin/countries-all/country-info/country-info.component.ts","./src/app/Admin/countries-all/country-info/country-info.component.html","./src/app/Core/services/Admin/countries/tariff/price.service.ts","./src/app/Admin/service-admin/service-admin.component.ts","./src/app/Admin/service-admin/service-admin.component.html","./src/app/Core/services/descriptions/descriptions.service.ts","./src/app/Admin/countries-all/country-tariff/country-tariff.component.ts","./src/app/Admin/countries-all/country-tariff/country-tariff.component.html","./src/app/Admin/dialogs/country/tariff-create/tariff-create.component.ts","./src/app/Admin/dialogs/country/tariff-create/tariff-create.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Core/services/user/user.service.ts","./src/app/Admin/dialogs/order/order-info/order-info.component.ts","./src/app/Admin/dialogs/order/order-info/order-info.component.html","./src/app/myprofile/countries/countries.component.ts","./src/app/myprofile/countries/countries.component.html","./src/app/myprofile/statements/statements.component.ts","./src/app/myprofile/statements/statements.component.html","./src/app/Admin/dialogs/news/update-news/update-news.component.ts","./src/app/Admin/dialogs/news/update-news/update-news.component.html","./src/app/Admin/dialogs/auth/info-business-dialog/info-business-dialog.component.ts","./src/app/Admin/dialogs/auth/info-business-dialog/info-business-dialog.component.html","./src/app/Core/services/Admin/faq/faq.service.ts","./src/app/Core/models/Shop.ts","./src/app/Admin/dialogs/shop/shop-create-dialog/shop-create-dialog.component.ts","./src/app/Admin/dialogs/shop/shop-create-dialog/shop-create-dialog.component.html","./src/app/myprofile/waiting-invoice/waiting-invoice.component.ts","./src/app/myprofile/waiting-invoice/waiting-invoice.component.html","./src/app/Admin/dialogs/faq/faq-update/faq-update.component.ts","./src/app/Admin/dialogs/faq/faq-update/faq-update.component.html","./src/app/news-details/news-details.component.ts","./src/app/news-details/news-details.component.html","./src/app/myprofile/dialogs/statement-dialog/statement-dialog.component.ts","./src/app/myprofile/dialogs/statement-dialog/statement-dialog.component.html","./src/app/Admin/dialogs/flight/create-flight/create-flight.component.ts","./src/app/Admin/dialogs/flight/create-flight/create-flight.component.html","./src/app/app.module.ts","./src/app/Admin/countries-all/countries-all.component.ts","./src/app/Admin/countries-all/countries-all.component.html","./src/app/Admin/dialogs/status-change/status-change.component.ts","./src/app/Admin/dialogs/status-change/status-change.component.html","./src/app/Core/core.module.ts","./src/app/Admin/dialogs/answer-user/answer-user.component.ts","./src/app/Admin/dialogs/answer-user/answer-user.component.html","./src/app/Admin/contact-notice/contact-notice.component.ts","./src/app/Admin/contact-notice/contact-notice.component.html","./src/app/Core/services/message/message.service.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/Core/models/Flight.ts","./src/app/Admin/countries-all/country-tariff/tariff-prices/tariff-prices.component.ts","./src/app/Admin/countries-all/country-tariff/tariff-prices/tariff-prices.component.html","./src/app/Core/services/statement/statement.service.ts","./src/app/Core/services/navigation/navigation.service.ts","./src/app/Core/guards/admin-panel.guard.ts","./src/app/Admin/dialogs/auth/reset-dialog/reset-dialog.component.ts","./src/app/Admin/dialogs/auth/reset-dialog/reset-dialog.component.html","./src/app/Admin/dialogs/cargo/add-to-anbar/add-to-anbar.component.ts","./src/app/Admin/dialogs/cargo/add-to-anbar/add-to-anbar.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/faq/faq.component.ts","./src/app/faq/faq.component.html","./src/app/myprofile/control-panel/control-panel.component.ts","./src/app/myprofile/control-panel/control-panel.component.html","./src/app/Core/services/Admin/flight/flight.service.ts","./src/app/myprofile/user-settings/user-settings.component.ts","./src/app/myprofile/user-settings/user-settings.component.html","./src/app/Admin/dialogs/country/country-info-create/country-info-create.component.ts","./src/app/Admin/dialogs/country/country-info-create/country-info-create.component.html","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/Admin/parcels/parcels.component.ts","./src/app/Admin/parcels/parcels.component.html","./src/app/Admin/shops/shops.component.ts","./src/app/Admin/shops/shops.component.html","./src/app/Admin/dialogs/country/tariff-update/tariff-update.component.ts","./src/app/Admin/dialogs/country/tariff-update/tariff-update.component.html","./src/app/myprofile/dialogs/waiting-invoice-dialog/waiting-invoice-dialog.component.ts","./src/app/myprofile/dialogs/waiting-invoice-dialog/waiting-invoice-dialog.component.html","./src/app/Admin/dialogs/add-to-anbar-new-parcel/add-to-anbar-new-parcel.component.ts","./src/app/Admin/dialogs/add-to-anbar-new-parcel/add-to-anbar-new-parcel.component.html","./src/app/Admin/dialogs/office/update-office/update-office.component.ts","./src/app/Admin/dialogs/office/update-office/update-office.component.html","./src/app/Core/interceptors/jwt.interceptor.ts","./src/app/Admin/layout/layout.component.ts","./src/app/Admin/layout/layout.component.html","./src/app/title/title.component.ts","./src/app/title/title.component.html","./src/app/Core/services/Admin/news/news.service.ts","./src/app/Admin/dialogs/country/country-edit-dialog/country-edit-dialog.component.ts","./src/app/Admin/dialogs/country/country-edit-dialog/country-edit-dialog.component.html","./src/app/Core/interceptors/unauthorized.interceptor.ts","./src/app/myprofile/dialogs/order-dialog/order-dialog.component.ts","./src/app/myprofile/dialogs/order-dialog/order-dialog.component.html","./src/app/Admin/title-admin/title-admin.component.ts","./src/app/Admin/title-admin/title-admin.component.html","./src/app/Admin/dashboard/dashboard.component.ts","./src/app/Admin/dashboard/dashboard.component.html","./src/app/Admin/dialogs/shop/shop-update-dialog/shop-update-dialog.component.ts","./src/app/Admin/dialogs/shop/shop-update-dialog/shop-update-dialog.component.html","./src/app/Core/models/Service.ts","./src/app/Core/models/News.ts","./src/app/Core/models/CourierLocation.ts","./src/app/Admin/dialogs/auth/info-dialog/info-dialog.component.ts","./src/app/Admin/dialogs/auth/info-dialog/info-dialog.component.html","./src/app/Core/guards/auth.guard.ts","./src/app/Admin/faqadmin/faqadmin.component.ts","./src/app/Admin/faqadmin/faqadmin.component.html","./src/app/shoping/shoping.component.ts","./src/app/shoping/shoping.component.html","./src/app/Admin/dialogs/service/service-update/service-update.component.ts","./src/app/Admin/dialogs/service/service-update/service-update.component.html","./src/app/Admin/dialogs/city/create-city/create-city.component.ts","./src/app/Admin/dialogs/city/create-city/create-city.component.html","./src/app/Admin/dialogs/add-statement-to-anbar/add-statement-to-anbar.component.ts","./src/app/Admin/dialogs/add-statement-to-anbar/add-statement-to-anbar.component.html","./src/app/Admin/users/user-orders/user-orders.component.ts","./src/app/Admin/users/user-orders/user-orders.component.html","./src/app/restore/restore.component.ts","./src/app/restore/restore.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/Core/services/Admin/product/product.service.ts","./src/app/myprofile/dialogs/balance-dialog/balance-dialog.component.ts","./src/app/myprofile/dialogs/balance-dialog/balance-dialog.component.html","./src/app/Admin/dialogs/country/price-create/price-create.component.ts","./src/app/Admin/dialogs/country/price-create/price-create.component.html","./src/app/register/Registration/registration.service.ts","./src/app/Admin/users/users.component.ts","./src/app/Admin/users/users.component.html","./src/app/Admin/news-admin/news-admin.component.ts","./src/app/Admin/news-admin/news-admin.component.html","./src/app/Admin/dialogs/service/service-create/service-create.component.ts","./src/app/Admin/dialogs/service/service-create/service-create.component.html","./src/app/Admin/messages/messages.component.ts","./src/app/Admin/messages/messages.component.html","./src/app/myprofile/myprofile.component.ts","./src/app/myprofile/myprofile.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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QAUD,2DAAsC;QAAtC,uGAAsC;QAMtC,0DAAoC;QAApC,qGAAoC;QAKjC,0DAAwB;QAAxB,8EAAwB;QACP,0DAAc;QAAd,oEAAc;QAElC,0DAA6C;QAA7C,8GAA6C;QAeO,0DAA8B;QAA9B,2FAA8B;;6FDhClG,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;ajB;AACM;AACgC;AACzB;AACG;AACN;AACS;AACH;AACG;AACW;AACN;AACG;AACY;AACvB;AACE;AACJ;AACS;AACP;AACF;AACF;AACU;AACV;AACQ;AACK;AACN;AACP;AACO;AACA;AACG;AACA;AACS;AACT;AACT;AACF;AACD;AACY;AACC;AACD;AACN;AACS;AACL;AACJ;AACM;AACO;AACnB;AACkB;AACN;AACR;AACF;AACI;AACF;AACc;AACsC;AACjB;AACX;AACG;AACZ;AACyB;AACtB;AACT;AACD;AACiB;AACa;AACG;AACH;AAC0B;AACjC;AACiC;AACM;AAC5B;AACsB;AACN;AAC5C;AACX;AACP;AACL;AAC0B;AACJ;AACiC;AACA;AACnC;AAC2B;AACA;AACrB;AACiC;AACA;AACE;AACN;AAChD;AACiC;AACK;AACK;AACA;AAC4B;AACjD;AACmB;AACF;AACA;AAC2B;AAClD;AACyB;AAC3B;AACsD;AACjC;AACzB;AACiB;AACiC;AACA;AACc;AACA;AACxB;AACY;AACb;AACA;AACH;AACA;AACP;AACa;AACA;AACjC;AACc;AACG;AACA;AACgB;AACA;AAC5C;AACW;AACgB;AACtB;AAC2B;AACA;AACQ;AACA;AAC1B;AACE;AACa;AAC1B;AACyB;AAChC;AACc;AACkB;;;;AACzF,MAAM,MAAM,GAAS;IACnB,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAE,EAAE,SAAS,EAAC,MAAM,EAAC;IAChD,EAAE,IAAI,EAAC,EAAE,EAAG,SAAS,EAAC,kEAAa,EAAE;IACrC,EAAE,IAAI,EAAC,OAAO,EAAG,SAAS,E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","file":"main.js","sourcesContent":["import {FAQTranslate} from './FAQTranslate';\r\n\r\nexport class FAQ {\r\n  id: number;\r\n  translates: string;\r\n  isActived: boolean;\r\n  isDeleted: boolean;\r\n  faqTranslates: FAQTranslate[];\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CountryData} from '../countries-all/CountryData';\nimport {CourierLocation} from '../../Core/models/CourierLocation';\nimport {CourierService} from '../../Core/services/Admin/courier/courier.service';\nimport {CourierUpdateComponent} from '../dialogs/courier/courier-update/courier-update.component';\nimport {CourierCreateComponent} from '../dialogs/courier/courier-create/courier-create.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-courier-service',\n  templateUrl: './courier-service.component.html',\n  styleUrls: ['./courier-service.component.scss'],\n  encapsulation:ViewEncapsulation.None})\nexport class CourierServiceComponent implements OnInit {\n\n  dataSource: MatTableDataSource<CourierLocation>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  courierLocations:CourierLocation[];\n  displayedColumns: string[] = ['name','price' ,'isActived','actions'];\n  constructor(public service:CourierService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n     this.courierLocations=res;\n      this.dataSource = new MatTableDataSource( this.courierLocations);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n\n  openDialogEdit(row:CountryData): void {\n\n    const dialogRefEdit = this.dialog.open(CourierUpdateComponent, {\n      width: '450px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CourierCreateComponent, {\n      width: '450px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'Kuryer servisi'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Kuryer servisi</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Rayonların adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.courierTranslates[2].name}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"price\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Qiymət </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.price}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../Core/models/Product';\nimport {CountryData} from '../../countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {CargoService} from '../../../Core/services/cargo/cargo.service';\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\nimport {Cargo} from '../../../Core/models/Cargo';\n\n@Component({\n  selector: 'app-parcel-info',\n  templateUrl: './parcel-info.component.html',\n  styleUrls: ['./parcel-info.component.scss']\n})\nexport class ParcelInfoComponent implements OnInit {\n  statementForm:FormGroup\n  products:Product[];\n  wallet:CountryData[];\n  parcelData:Cargo;\n  constructor( public dialogRef: MatDialogRef<ParcelInfoComponent>,\n               private languageService:LanguagesService,\n               private service:CargoService,\n               private proService:ProductService,\n               private cntService:CountriesService,\n               @Inject(MAT_DIALOG_DATA) public data:any) {\n\n  }\n\n  ngOnInit(): void {\n    this.getProduct();\n  }\n  getProduct(){\n\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        res.forEach(p=>{\n          p.productTranslates.forEach(pt=>{\n            if(pt.languageId==this.languageService.select.id){\n              p.productTranslates[0]=pt\n              this.products=res;\n            }\n          })\n        })\n      }\n    )\n    this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n    this.service.getWithParcelId(this.data.id).subscribe(\n      (res)=>{\n        this.parcelData=res;\n        console.log(res)\n        this.statementForm= new FormGroup({\n          Track: new FormControl(this.parcelData.track, [\n          ]),\n          Name: new FormControl(\n            this.parcelData.name, [\n            ]\n          ),\n          Product: new FormControl(this.parcelData.productId, [\n          ]),\n          Price: new FormControl(this.parcelData.price, [\n          ]),\n          Count: new FormControl(this.parcelData.count, [\n          ]),\n          Wallet: new FormControl(this.parcelData.countryId, [\n          ]),\n          TextArea: new FormControl(this.parcelData.notice, [\n          ]),\n          CamexID: new FormControl(this.parcelData.camexId, [\n          ]),\n          CargoPrice: new FormControl(this.parcelData.camexPrice, [\n          ]),\n          Weight: new FormControl(this.parcelData.weight, [\n          ]),\n          TrackCamex: new FormControl(this.parcelData.trackCamex, [\n          ]),\n\n        })\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/statements/${serverPath}`;\n  }\n\n}\n","<h2 mat-dialog-title>İnformasiya</h2>\n<form [formGroup]=\"statementForm\" novalidate  *ngIf=\"statementForm\">\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >İzləmə kodu</mat-label>\n          <input type=\"text\" matInput readonly placeholder=\"05228964284282P\" formControlName=\"Track\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Camex İzləmə kodu</mat-label>\n          <input type=\"text\" matInput placeholder=\"052SA64284282P \" formControlName=\"TrackCamex\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Saytın / Maqazinin adı</mat-label>\n          <input type=\"text\" matInput  placeholder=\"Trendyoll\" formControlName=\"Name\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-4 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Məhsul</mat-label>\n          <mat-select  formControlName=\"Product\">\n            <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n              {{item.productTranslates[2].name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12 \">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Valyuta</mat-label>\n          <mat-select  formControlName=\"Wallet\">\n            <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\n              {{item.wallet}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-4 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">CamexID</mat-label>\n          <input type=\"number\" matInput placeholder=\"234612\" formControlName=\"CamexID\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Ümumi məbləğ</mat-label>\n          <input type=\"number\" matInput placeholder=\"100 \" formControlName=\"Price\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Sayı</mat-label>\n          <input type=\"number\" matInput placeholder=\"5\" formControlName=\"Count\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Daşınma haqqı</mat-label>\n          <input type=\"number\" matInput placeholder=\"100\" formControlName=\"CargoPrice\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Çəkisi</mat-label>\n          <input type=\"number\" matInput placeholder=\"123123 \" formControlName=\"Weight\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Qeyd</mat-label>\n          <textarea type=\"text\" matInput  placeholder=\"some text example\" rows=\"7\"  formControlName=\"TextArea\">\n          </textarea>\n        </mat-form-field>\n        <a target=\"_blank\" [href]=\"createImgPath(this.parcelData.image)\"> Şəkil</a>\n      </div>\n\n\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n    <button mat-button mat-dialog-close>OK</button>\n  </mat-dialog-actions>\n</form>\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ShopLinkService} from '../../../../Core/services/Admin/shop/shop-link.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-shop-link-create-dialog',\n  templateUrl: './shop-link-create-dialog.component.html',\n  styleUrls: ['./shop-link-create-dialog.component.scss']\n})\nexport class ShopLinkCreateDialogComponent implements OnInit {\n\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ShopLinkCreateDialogComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:number,\n    private service:ShopLinkService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Link: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Link\",this.createForm.controls[\"Link\"].value.trim())\n    body.append(\"ShopID\",this.data.toString())\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Link Yarad</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Link</mat-label>\n                <input type=\"text\" matInput formControlName=\"Link\">\n                <mat-error  *ngIf=\"errorHandling('Link','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CountryData} from '../../../../Admin/countries-all/CountryData';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {AppUser} from '../../../../Admin/Models/AppUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserOrderService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get(id):Observable<AppUser>{\n    return this.http.get<AppUser>(`${this.global.path}UserOrders/${id}`);\n  }\n  refuse(body){\n    return this.http.put(`${this.global.path}UserOrders/${body.get(\"id\")}`,body);\n  }\n  refuseOrder(body){\n    return this.http.put(`${this.global.path}UserOrders/refuse/${body.get(\"id\")}`,\"\");\n  }\n  changeStatus(body){\n    return this.http.put(`${this.global.path}UserOrders/changeStatus/${body.get(\"id\")}`,\"\");\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Order} from '../../Core/models/Order';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {UserOrderService} from '../../Core/services/Admin/userOrder/user-order.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {OrderInfoComponent} from '../dialogs/order/order-info/order-info.component';\nimport {AddToAnbarComponent} from '../dialogs/cargo/add-to-anbar/add-to-anbar.component';\nimport {OrderAdminService} from '../../Core/services/orderAdmin/order-admin.service';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-order-in-process',\n  templateUrl: './order-in-process.component.html',\n  styleUrls: ['./order-in-process.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class OrderInProcessComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Order>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Order[];\n  displayedColumns: string[] = ['name','url','total','isActived','actions'];\n  constructor(public service:OrderAdminService,\n              public dialog: MatDialog,\n              private languageService:LanguagesService,\n              private serviceOrder:UserOrderService) {\n\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  get(){\n    this.service.get(\"InProcess\").subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n        }\n      )\n\n    })\n  }\n  openDialogInfo(row): void {\n    this.dialog.open(OrderInfoComponent, {\n      width: '1050px',\n      data: {row:row}\n    });\n  }\n  checkStatus(name){\n    if (name == 'Processed'){\n      return true\n    }\n    return false;\n  }\n\n  refuse(id,receiptId,orderId){\n    const body = new FormData();\n    body.append(\"id\",id)\n    body.append(\"receiptId\",receiptId)\n\n    const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",orderId)\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Rəd Et!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Rəd edildi!',\n          '',\n          'success'\n        )\n        this.serviceOrder.refuse(body).subscribe(\n          ()=> {\n            this.serviceOrder.refuseOrder(bodyOrder).subscribe(\n            ()=> {\n              this.get();\n            },\n            error => {\n              error.error.messages.forEach(e=>{\n                if(e.lang_id==this.languageService.select.id){\n                  alertify.error(e.messageLang);\n                }\n              })\n            })\n        },\n        error => {\n          error.error.messages.forEach(e=>{\n            if(e.lang_id==this.languageService.select.id){\n              alertify.error(e.messageLang);\n            }\n          })\n        })\n      }\n    })\n  }\n  changeStatus(orderId){\n\n    const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",orderId)\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Qəbul Et!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Qəbul Edildi!',\n          '',\n          'success'\n        )\n        this.serviceOrder.changeStatus(bodyOrder).subscribe(\n          ()=> {\n            this.get();\n          },\n          error => {\n            error.error.messages.forEach(e=>{\n              if(e.lang_id==this.languageService.select.id){\n                alertify.error(e.messageLang);\n              }\n            })\n          })\n      }\n    })\n\n\n  }\n  openDialogAdd(row){\n    const dialogRefCreate = this.dialog.open(AddToAnbarComponent, {\n      width: '500px',\n      data: row\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout>\n  <div *ngIf=\"loaded else elseblock\" id=\"orders\">\n    <app-title-admin [title]=\"'İstifadəçinin Prosesdə olan Sifarişləri'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">İstifadəçinin Prosesdə olan Sifarişləri</span>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular \">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div>\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Saytın \\ Maqazanın adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"url\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Url </th>\n                <td mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\" target=\"_blank\">Məhsulun linki</a></td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Ümumi məbləğ</th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.receipt.value}} {{row.country.wallet}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.status.name == 'Processed'; else elseblock\" class=\"badge badge-success\">İşlənildi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Prosesdə</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-raised-button color=\"primary\" class=\"mr-2\"  (click)=\"openDialogAdd(row)\">Anbara əlavə et</button>\n                    <button mat-raised-button color=\"accent\" class=\"mr-2\" [disabled]=\"checkStatus(row.status.name)\"  (click)=\"changeStatus(row.id)\">Qəbul et</button>\n                    <button mat-raised-button color=\"warn\" class=\"mr-2\"  (click)=\"refuse(row.userId,row.receiptId, row.id)\">Rəd et</button>\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogInfo(row)\" > <mat-icon style=\"font-size: 26px \">info</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock></ng-template>\n</app-layout>\n\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {City} from \"../Core/models/City\";\r\nimport {Office} from \"../Core/models/Office\";\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {RegistrationService} from './Registration/registration.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\r\nimport {Router} from '@angular/router';\r\ndeclare let alertify:any;\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  currentCities:City[]=[];\r\n  offices:Office[]=[];\r\n  user_agreementArr:any[]=[{\r\n    val:\"az\",\r\n    path:  \"../../assets/userAgreement/user_agreement_az.pdf\"\r\n  },\r\n    {\r\n      val:\"ru\",\r\n      path:  \"../../assets/userAgreement/user_agreement_ru.pdf\"\r\n    },\r\n    {\r\n      val:\"en\",\r\n      path:  \"../../assets/userAgreement/user_agreement_en.pdf\"\r\n    },\r\n  ]\r\n  user_agreement:string;\r\n  privateForm:FormGroup\r\n  businessForm:FormGroup\r\n\r\n  constructor(\r\n    private registerService:RegistrationService,\r\n    private languageService:LanguagesService,\r\n    private translate: TranslateService,\r\n    private router: Router){\r\n    this.getData()\r\n    this.user_agreement=this.user_agreementArr.find(u=>u.val==languageService.selected).path\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.getData()\r\n      this.user_agreement=this.user_agreementArr.find(u=>u.val==this.languageService.select.value).path\r\n    });\r\n    this.privateForm= new FormGroup({\r\n      Email : new FormControl('', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      PassportNumber: new FormControl(\r\n        '', [\r\n          Validators.required,\r\n          Validators.min(1),\r\n          Validators.max(99999999),\r\n          Validators.pattern(/^\\d*\\.?\\d*$/)\r\n        ]\r\n      ),\r\n      Name: new FormControl(\r\n        '', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      Surname: new FormControl(\r\n        '', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      Lastname: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      Birthday: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      CitizenshipId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      FINCode: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      IsMan: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      Password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\r\n      ]),\r\n      CheckPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\r\n        RxwebValidators.compare({fieldName:'Password'})\r\n      ]),\r\n      CityId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Address: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      PhoneNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9),\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      OfficeId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      IsTermsAccepted: new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    })\r\n    this.businessForm= new FormGroup({\r\n      Email : new FormControl('', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      CompanyName: new FormControl('', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      CompanyRegistrationNumber: new FormControl('', [\r\n          Validators.required,\r\n          Validators.min(1),\r\n          Validators.max(999999999),\r\n          Validators.pattern(/^\\d*\\.?\\d*$/)\r\n        ]\r\n      ),\r\n      Password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\r\n      ]),\r\n      CheckPassword: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\r\n        RxwebValidators.compare({fieldName:'Password'})\r\n      ]),\r\n      CityId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Address: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      PhoneNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9),\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      OfficeId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      IsTermsAccepted: new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    })\r\n  }\r\n\r\n  passportImgSrc:string=\"../../assets/image/passport/passport_id_az.jpg\"\r\n  changeImg(val:number){\r\n    if(val==1){\r\n      this.passportImgSrc=\"../../assets/image/passport/passport_id_non_az.jpg\"\r\n    }\r\n    else{\r\n      this.passportImgSrc=\"../../assets/image/passport/passport_id_az.jpg\"\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    const body = {\r\n      \"Address\": this.privateForm.controls['Address'].value,\r\n      \"Birthday\": JSON.stringify(this.privateForm.controls['Birthday'].value).split('\"').join(''),\r\n      \"CheckPassword\": this.privateForm.controls['CheckPassword'].value.split(' ').join(''),\r\n      \"CityId\": this.privateForm.controls['CityId'].value,\r\n      \"Email\": this.privateForm.controls['Email'].value.split(' ').join(''),\r\n      \"FINCode\": this.privateForm.controls['FINCode'].value.split(' ').join(''),\r\n      \"IsMan\": this.privateForm.controls['IsMan'].value,\r\n      \"IsTermsAccepted\": this.privateForm.controls['IsTermsAccepted'].value,\r\n      \"PassportNumber\": this.privateForm.controls['PassportNumber'].value,\r\n      \"Password\": this.privateForm.controls['Password'].value.split(' ').join(''),\r\n      \"PhoneNumber\": this.privateForm.controls['PhoneNumber'].value.split(' ').join(''),\r\n      \"Surname\": this.privateForm.controls['Surname'].value.split(' ').join(''),\r\n      \"CitizenshipId\": this.privateForm.controls['CitizenshipId'].value,\r\n      \"Lastname\": this.privateForm.controls['Lastname'].value.split(' ').join(''),\r\n      \"Name\": this.privateForm.controls['Name'].value.split(' ').join(''),\r\n      \"OfficeId\": this.privateForm.controls['OfficeId'].value\r\n    }\r\n    this.registerService.PostRegisterPrivate(body).subscribe(\r\n    ()=> {\r\n        this.router.navigate(['login'])\r\n    },\r\n    error => {\r\n        error.error.messages.forEach(e=>{\r\n          if(e.lang_id==this.languageService.select.id){\r\n            alertify.error(e.messageLang);\r\n          }\r\n      })\r\n    })\r\n  }\r\n  submitBusiness(){\r\n    const body={\r\n      \"CheckPassword\": this.businessForm.controls['CheckPassword'].value.split(' ').join(''),\r\n      \"CityId\": this.businessForm.controls['CityId'].value,\r\n      \"Email\": this.businessForm.controls['Email'].value.split(' ').join(''),\r\n      \"IsTermsAccepted\": this.businessForm.controls['IsTermsAccepted'].value,\r\n      \"CompanyRegistrationNumber\": this.businessForm.controls['CompanyRegistrationNumber'].value,\r\n      \"Password\": this.businessForm.controls['Password'].value.split(' ').join(''),\r\n      \"PhoneNumber\": this.businessForm.controls['PhoneNumber'].value.split(' ').join(''),\r\n      \"Address\": this.businessForm.controls['Address'].value,\r\n      \"CompanyName\": this.businessForm.controls['CompanyName'].value,\r\n      \"OfficeId\": this.businessForm.controls['OfficeId'].value\r\n    }\r\n    this.registerService.PostRegisterBusiness(body).subscribe(()=> {\r\n        this.router.navigate(['login'])\r\n      },\r\n      error => {\r\n        error.error.messages.forEach(e=>{\r\n          if(e.lang_id==this.languageService.select.id){\r\n            alertify.error(e.messageLang);\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.privateForm.controls[control].hasError(error);\r\n  }\r\n  public errorHandlingBusiness = (control: string, error: string) => {\r\n    return this.businessForm.controls[control].hasError(error);\r\n  }\r\n  getData(){\r\n    this.registerService.getRegister().subscribe(res => {\r\n      res.cities.forEach(c=>{\r\n        c.cityNameTranslates.forEach(ct=>{\r\n          if(ct.languageId==this.languageService.select.id){\r\n            c.cityNameTranslates[0]=ct\r\n            this.currentCities=res.cities;\r\n          }\r\n        })\r\n\r\n      })\r\n      res.offices.forEach(o=>{\r\n        o.officeNameTranlates.forEach(of=>{\r\n          if(of.languageId==this.languageService.select.id){\r\n            o.officeNameTranlates[0]=of;\r\n            this.offices=res.offices;\r\n          }\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  get PhoneNumber() {\r\n    return this.privateForm.get('PhoneNumber');\r\n  }\r\n  get Password() {\r\n    return this.privateForm.get('Password');\r\n  }\r\n  get PhoneNumberBusiness() {\r\n    return this.businessForm.get('PhoneNumber');\r\n  }\r\n  get PasswordBusiness() {\r\n    return this.businessForm.get('Password');\r\n  }\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<section id=\"register\">\r\n  <app-title [title]=\"'register' | translate \" ></app-title>\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 pb-5\">\r\n    <div class=\"bg-color w-100\">\r\n      <mat-tab-group  mat-stretch-tabs mat-align-tabs=\"center\" >\r\n        <mat-tab>\r\n          <ng-template mat-tab-label><p class=\"label-head m-0 text-uppercase\">{{'PrivatePerson' | translate }}</p></ng-template>\r\n          <form [formGroup]=\"privateForm\" novalidate (ngSubmit)=\"submit()\">\r\n            <div class=\"d-flex flex-wrap\">\r\n              <div class=\"pt-4 pb-4 pl-xl-5 pr-xl-5 pl-lg-4 pr-lg-4 pl-md-2 pr-md-2 pr-sm-2 pl-sm-2 pl-1 pr-1 w-100\">\r\n                <div class=\"pr-4 pl-4 w-100\">\r\n                  <h4 class=\" pl-3 pt-4 pb-2 w-100 text-uppercase\"><b>{{'PersonalInfo' | translate }} </b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\r\n                       <input type=\"email\" matInput formControlName=\"Email\" placeholder=\"camex.example@example.com\">\r\n                       <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\r\n                         {{'EmailInCorrect' | translate }}\r\n                       </mat-error>\r\n                       <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'IDCardNumber' | translate }}</mat-label>\r\n                       <input type=\"number\" formControlName=\"PassportNumber\" matInput  placeholder=\"12345678\">\r\n                       <mat-error  *ngIf=\"errorHandling('PassportNumber','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                       <mat-error  *ngIf=\"errorHandling('PassportNumber','min') ||errorHandling('PassportNumber','max') \" >\r\n                         {{'MinMaxPassNumber' | translate }}\r\n                       </mat-error>\r\n                       <mat-error  *ngIf=\"errorHandling('PassportNumber','pattern') \" >\r\n                         {{'NumberPattern' | translate }}\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'registrationName' | translate }}</mat-label>\r\n                       <input type=\"text\" matInput  placeholder=\"Seynur\" formControlName=\"Name\">\r\n                       <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'registrationSurname' | translate }}</mat-label>\r\n                       <input type=\"text\" matInput  placeholder=\"Məmmədov\" formControlName=\"Surname\">\r\n                       <mat-error  *ngIf=\"errorHandling('Surname','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'registrationLastname' | translate }}</mat-label>\r\n                       <input type=\"text\" matInput  placeholder=\"Seymur\" formControlName=\"Lastname\">\r\n                       <mat-error  *ngIf=\"errorHandling('Lastname','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'BirthDate' | translate }}</mat-label>\r\n                       <input matInput [matDatepicker]=\"picker\" formControlName=\"Birthday\" >\r\n                       <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                       <mat-datepicker #picker></mat-datepicker>\r\n                       <mat-error  *ngIf=\"errorHandling('Birthday','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12\">\r\n                     <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'Citizenship' | translate }}</mat-label>\r\n                       <mat-select (selectionChange)=\"changeImg(selectField.value)\" #selectField formControlName=\"CitizenshipId\">\r\n                         <mat-option value=\"1\" class=\"text-capitalize\">\r\n                           {{'CitizenNonAz' | translate }}\r\n                         </mat-option>\r\n                         <mat-option value=\"2\" class=\"text-capitalize\">\r\n                           {{'CitizenAz' | translate }}\r\n                         </mat-option>\r\n                       </mat-select>\r\n                       <mat-error  *ngIf=\"errorHandling('CitizenshipId','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                       <mat-error  *ngIf=\"errorHandling('CitizenshipId','pattern') \" >\r\n                         {{'NumberPattern' | translate }}\r\n                       </mat-error>\r\n                     </mat-form-field>\r\n                   </div>\r\n                   <div class=\"col-lg-6 col-md-6 col-12 d-flex flex-wrap\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12 p-0\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\"> {{'PassIIN' | translate }}</mat-label>\r\n                        <input type=\"text\" matInput  placeholder=\"4FRKPVD\" formControlName=\"FINCode\">\r\n                        <mat-error  *ngIf=\"errorHandling('FINCode','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                     <div class=\"col-lg-6 col-md-6 col-12 p-0 pl-lg-1 pl-md-1 d-flex align-items-center justify-content-between\">\r\n                       <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                       <mat-label class=\"text-capitalize\" >{{'Gender' | translate }}</mat-label>\r\n                       <mat-select  formControlName=\"IsMan\">\r\n                         <mat-option value=\"true\" class=\"text-capitalize\">\r\n                           {{'Male' | translate }}\r\n                         </mat-option>\r\n                         <mat-option value=\"false\" class=\"text-capitalize\">\r\n                           {{'Female' | translate }}\r\n                         </mat-option>\r\n                       </mat-select>\r\n                       <mat-error  *ngIf=\"errorHandling('IsMan','required')\" [innerHTML]=\"'Required' | translate \">\r\n                       </mat-error>\r\n                       </mat-form-field>\r\n                     </div>\r\n                   </div>\r\n                   <div class=\"col-12 d-flex justify-content-center mt-2 flex-column align-items-center\">\r\n                     <div class=\"col-lg-6 col-md-6\">\r\n                       <div class=\"text-center mb-3 text-capitalize passport m-auto\">{{'IINPlace' | translate }}</div>\r\n                     </div>\r\n                     <div class=\"col-lg-5 col-md-6\">\r\n                       <img [src]=\"passportImgSrc\" width=\"100%\" class=\"mt-3\"  alt=\"\">\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Password' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\r\n                        <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\r\n                        <mat-error  *ngIf=\"errorHandling('Password','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"Password.errors?.minlength \" >\r\n                          {{'minLengthPass' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandling('Password','pattern')\" >\r\n                          {{'patternPass' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\r\n                        <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\r\n                        <mat-error  *ngIf=\"errorHandling('CheckPassword','compare')\" >\r\n                          {{'comparePass' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\" >\r\n                        <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\r\n                        <mat-select formControlName=\"CityId\">\r\n                          <mat-option *ngFor=\"let city of currentCities\" [value]=\"city.id\" class=\"text-capitalize\">\r\n                            {{city.cityNameTranslates[0].name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error  *ngIf=\"errorHandling('CityId','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandling('CityId','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \" formControlName=\"Address\">\r\n                        <mat-error  *ngIf=\"errorHandling('Address','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n                        <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"559294860\" formControlName=\"PhoneNumber\">\r\n                        <mat-error  *ngIf=\"errorHandling('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\" PhoneNumber.errors?.minlength ||PhoneNumber.errors?.maxlength \" >\r\n                          {{'PhoneNumberLength' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandling('PhoneNumber','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\r\n                        <mat-select formControlName=\"OfficeId\">\r\n                          <mat-option *ngFor=\"let office of offices;index as i\" [value]=\"office.id\" class=\"text-capitalize\">\r\n                            {{office.officeNameTranlates[0].name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error  *ngIf=\"errorHandling('OfficeId','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandling('OfficeId','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                        <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" required  formControlName=\"IsTermsAccepted\">\r\n                          {{'Terms1' | translate }}  <a [href]=\"user_agreement\" target=\"_blank\">{{'Terms2' | translate }} </a>{{'Terms3' | translate }}\r\n                        </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"w-100 d-flex justify-content-end mt-4\">\r\n                    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!privateForm.valid\">{{'register' | translate }}  </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <ng-template mat-tab-label><p class=\"label-head m-0 text-uppercase\">{{'BusinessPerson' | translate }}</p></ng-template>\r\n          <form [formGroup]=\"businessForm\" novalidate (ngSubmit)=\"submitBusiness()\">\r\n            <div class=\"d-flex flex-wrap\">\r\n              <div class=\"pt-4 pb-4 pl-xl-5 pr-xl-5 pl-lg-4 pr-lg-4 pl-md-2 pr-md-2 pr-sm-2 pl-sm-2 pl-1 pr-1 w-100\">\r\n                <div class=\"pr-4 pl-4 w-100\">\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'BusinessInfo' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\r\n                        <input type=\"email\" matInput formControlName=\"Email\"  placeholder=\"camex.example@example.com\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('Email','email') && !errorHandlingBusiness('Email','required')\">\r\n                          {{'EmailInCorrect' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('Email','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\"  appearance=\"fill\">\r\n                        <mat-label  class=\"text-capitalize\"> {{'CompanyNumber' | translate }} </mat-label>\r\n                        <input type=\"number\" formControlName=\"CompanyRegistrationNumber\" matInput  placeholder=\"123456789\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','min') ||errorHandlingBusiness('CompanyRegistrationNumber','max') \" >\r\n                          {{'MinMaxPassNumber' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\"> {{'CompanyName' | translate }} </mat-label>\r\n                        <input type=\"text\" matInput  formControlName=\"CompanyName\" placeholder=\"Camex MMC\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CompanyName','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Password' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\r\n                        <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('Password','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"PasswordBusiness.errors?.minlength \" >\r\n                          {{'minLengthPass' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('Password','pattern')\" >\r\n                          {{'patternPass' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\r\n                        <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CheckPassword','compare')\" >\r\n                          {{'comparePass' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\" >\r\n                        <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\r\n                        <mat-select formControlName=\"CityId\">\r\n                          <mat-option *ngFor=\"let city of currentCities\" [value]=\"city.id\" class=\"text-capitalize\">\r\n                            {{city.cityNameTranslates[0].name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CityId','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('CityId','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \" formControlName=\"Address\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('Address','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field appearance=\"fill\" class=\"w-100\">\r\n                        <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\r\n                        <input type=\"text\" matInput placeholder=\"559294860\" formControlName=\"PhoneNumber\">\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\" PhoneNumberBusiness.errors?.minlength ||PhoneNumberBusiness.errors?.maxlength \" >\r\n                          {{'PhoneNumberLength' | translate }}\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('PhoneNumber','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\r\n                  <div class=\"d-flex flex-wrap w-100\">\r\n                    <div class=\"col-lg-6 col-md-6 col-12\">\r\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n                        <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\r\n                        <mat-select formControlName=\"OfficeId\">\r\n                          <mat-option *ngFor=\"let office of offices\" [value]=\"office.id\" class=\"text-capitalize\">\r\n                            {{office.officeNameTranlates[0].name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('OfficeId','required')\" [innerHTML]=\"'Required' | translate \">\r\n                        </mat-error>\r\n                        <mat-error  *ngIf=\"errorHandlingBusiness('OfficeId','pattern') \" >\r\n                          {{'NumberPattern' | translate }}\r\n                        </mat-error>\r\n                      </mat-form-field>\r\n                      <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" required  formControlName=\"IsTermsAccepted\">\r\n                        {{'Terms1' | translate }}  <a [href]=\"user_agreement\" target=\"_blank\">{{'Terms2' | translate }} </a>{{'Terms3' | translate }}\r\n                      </mat-checkbox>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"w-100 d-flex justify-content-end mt-4\">\r\n                    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!businessForm.valid\">{{'register' | translate }}  </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Status} from '../../models/Status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<Status[]>{\n    return this.http.get<Status[]>(`${this.global.path}Status`);\n  }\n  update(body){\n    return this.http.put(`${this.global.path}Status/${body.get(\"id\")}`,body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CountryData} from '../../../../Admin/countries-all/CountryData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  getCountries():Observable<CountryData[]>{\n    return this.http.get<CountryData[]>(`${this.global.path}Country`);\n  }\n  getCountriesActive():Observable<CountryData[]>{\n    return this.http.get<CountryData[]>(`${this.global.path}Country/active`);\n  }\n  getWithTariffs():Observable<CountryData[]>{\n    return this.http.get<CountryData[]>(`${this.global.path}Country/active/tariff`);\n  }\n  createCountry(body:FormData){\n    return this.http.post(`${this.global.path}Country`,body );\n  }\n  updateCountry(body:FormData){\n    return this.http.put(`${this.global.path}Country/${body.get(\"id\")}`,body);\n  }\n  deleteCountry(id){\n    return this.http.delete(`${this.global.path}Country/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Order} from '../../models/Order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<Order[]>{\n    return this.http.get<Order[]>(`${this.global.path}Order`);\n  }\n  create(body){\n    return this.http.post(`${this.global.path}Order`,body);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Office} from '../../Core/models/Office';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CityService} from '../../Core/services/Admin/city/city.service';\nimport {City} from '../../Core/models/City';\nimport {CreateCityComponent} from '../dialogs/city/create-city/create-city.component';\nimport {UpdateCityComponent} from '../dialogs/city/update-city/update-city.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-cities',\n  templateUrl: './cities.component.html',\n  styleUrls: ['./cities.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class CitiesComponent implements OnInit {\n\n  dataSource: MatTableDataSource<City>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  cityData:City[];\n  displayedColumns: string[] = ['name','isActived','actions'];\n  constructor(public service:CityService,public dialog: MatDialog,private languageService:LanguagesService,) {\n    this.getCities()\n  }\n  getCities(){\n    this.service.getCities().subscribe(res=>{\n      this.cityData=res;\n      this.dataSource = new MatTableDataSource(this.cityData);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CreateCityComponent, {\n      width: '450px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getCities()\n    });\n  }\n  openDialogEditOffice(row:Office): void {\n    const dialogRefEdit = this.dialog.open(UpdateCityComponent, {\n      width: '450px',\n      data: {row:row}\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.getCities()\n    });\n  }\n  deleteCity(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.deleteCity(id).subscribe(\n          ()=> {\n            this.getCities()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n}\n","<app-layout>\n  <div id=\"cities\">\n    <app-title-admin [title]=\"'Şəhərlər'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Şəhərlər</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.cityNameTranslates[2].name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Actividi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEditOffice(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"deleteCity(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {UserData} from '../../../../Admin/users/UserData';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {FullPrivateUser} from '../../../../Admin/Models/FullPrivateUser';\nimport {FullBusinessUser} from '../../../../Admin/Models/FullBusinessUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  getUsers():Observable<UserData[]>{\n    return this.http.get<UserData[]>(`${this.global.path}Users/get`);\n  }\n  search(body):Observable<UserData[]>{\n    return this.http.get<UserData[]>(`${this.global.path}Users/search/${body.id}`);\n  }\n  ChangeRole(str){\n    return this.http.post(`${this.global.path}Users/status`,str);\n  }\n  getRoles():Observable<string[]>{\n    return this.http.get<string[]>(`${this.global.path}Users/get-roles`);\n  }\n  AddRoles(body){\n    return this.http.post(`${this.global.path}Users/change-roles`,body);\n  }\n  ResetPassword(body){\n    return this.http.post(`${this.global.path}Users/reset-password`,body);\n  }\n  getUserPrivate(id):Observable<FullPrivateUser>{\n    const params = new HttpParams()\n      .set('id', id)\n    return this.http.get<FullPrivateUser>(`${this.global.path}Users/get-private`, { params:params });\n  }\n  getUserBusiness(id):Observable<FullBusinessUser>{\n    const params = new HttpParams()\n      .set('id', id)\n    return this.http.get<FullBusinessUser>(`${this.global.path}Users/get-business`, { params:params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Shop} from '../../../models/Shop';\nimport {CourierLocation} from '../../../models/CourierLocation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourierService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<CourierLocation[]>{\n    return this.http.get<CourierLocation[]>(`${this.global.path}Courier`);\n  }\n  getActive():Observable<CourierLocation[]>{\n    return this.http.get<CourierLocation[]>(`${this.global.path}Courier/active`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}Courier`,body);\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}Courier/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Courier/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CityService} from '../../../../Core/services/Admin/city/city.service';\nimport {ProductService} from '../../../../Core/services/Admin/product/product.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-create-ptoduct',\n  templateUrl: './create-ptoduct.component.html',\n  styleUrls: ['./create-ptoduct.component.scss']\n})\nexport class CreatePtoductComponent implements OnInit {\n\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CreatePtoductComponent>,\n    private languageService:LanguagesService,\n    private service:ProductService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(false ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      IsActived:this.createForm.controls[\"IsActived\"].value,\n      ProductTranslates: [\n        {\n          name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n          languageId:1\n        },\n        {\n          name:this.createForm.controls[\"NameRussia\"].value.trim(),\n          languageId:2\n        },\n        {\n          name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n          languageId:3\n        }\n      ],\n    }\n    this.service.createProduct(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Məhsul yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {City} from '../../../models/City';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  getCities():Observable<City[]>{\n    return this.http.get<City[]>(`${this.global.path}City`);\n  }\n  createCity(body){\n    return this.http.post(`${this.global.path}City`,body);\n  }\n  updateCity(body){\n    return this.http.put(`${this.global.path}City/${body.id}`,body);\n  }\n  deleteCity(id){\n    return this.http.delete(`${this.global.path}City/${id}`);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CityService} from '../../../../Core/services/Admin/city/city.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-update-city',\n  templateUrl: './update-city.component.html',\n  styleUrls: ['./update-city.component.scss']\n})\nexport class UpdateCityComponent implements OnInit {\n\n  UpdateForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<UpdateCityComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:CityService\n  ) { }\n\n  ngOnInit(): void {\n    this.UpdateForm= new FormGroup({\n\n      NameEnglish: new FormControl(this.data.row.cityNameTranslates[0].name, [\n        Validators.required,\n      ]),\n      NameRussia: new FormControl(this.data.row.cityNameTranslates[1].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.row.cityNameTranslates[2].name, [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(this.data.row.isActived ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.UpdateForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      id:this.data.row.id,\n      IsActived:this.UpdateForm.controls[\"IsActived\"].value,\n      CityNameTranslates: [\n        {\n          id:this.data.row.cityNameTranslates[0].id,\n          name:this.UpdateForm.controls[\"NameEnglish\"].value.trim(),\n          languageId:1\n        },\n        {\n          id:this.data.row.cityNameTranslates[1].id,\n          name:this.UpdateForm.controls[\"NameRussia\"].value.trim(),\n          languageId:2\n        },\n        {\n          id:this.data.row.cityNameTranslates[2].id,\n          name:this.UpdateForm.controls[\"NameAzerbaijan\"].value.trim(),\n          languageId:3\n        }\n      ],\n    }\n    this.service.updateCity(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Şəhər yarad</b>\n</h1>\n\n<form [formGroup]=\"UpdateForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Englis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv etmək</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!UpdateForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {OrderInfoComponent} from '../dialogs/order/order-info/order-info.component';\nimport {Cargo} from '../../Core/models/Cargo';\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\nimport {AddStatementToAnbarComponent} from '../dialogs/add-statement-to-anbar/add-statement-to-anbar.component';\nimport {ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-statemets-admin',\n  templateUrl: './statemets-admin.component.html',\n  styleUrls: ['./statemets-admin.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class StatemetsAdminComponent implements OnInit {\n\n\n  dataSource: MatTableDataSource<Cargo>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Cargo[];\n\n  userId:number=0;\n  displayedColumns: string[] = ['track','name','product','actions'];\n  constructor(public service:CargoService,\n              public dialog: MatDialog,\n              private languageService:LanguagesService,\n              private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.userId=param.id\n    })\n    this.get()\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  get(){if(this.userId==undefined){\n    this.service.get(\"Statement\").subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() => {\n          this.dataSource.paginator = this.paginator\n          this.dataSource.sort = this.sort;\n        }\n      )\n\n    })\n  }\n  else{\n    this.service.getWithId(this.userId).subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() => {\n          this.dataSource.paginator = this.paginator\n          this.dataSource.sort = this.sort;\n        }\n      )\n\n    })\n  }\n  }\n  openDialogInfo(row): void {\n    this.dialog.open(OrderInfoComponent, {\n      width: '1050px',\n      data: {row:row}\n    });\n  }\n\n  openDialogAdd(row){\n    const dialogRefCreate = this.dialog.open(AddStatementToAnbarComponent, {\n      width: '1050',\n      data: row\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n\n}\n","<app-layout>\n  <div *ngIf=\"loaded else elseblock\" id=\"statements\">\n    <app-title-admin [title]=\"'Bəyanatlar'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Bəyanatlar</span>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular \">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div>\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"track\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> İzləmə kodu </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Saytın / Mağazanın adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"product\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Məhsul </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.product.productTranslates[2].name}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-raised-button color=\"primary\" class=\"mr-2\"  (click)=\"openDialogAdd(row)\">Anbara əlavə et</button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock></ng-template>\n</app-layout>\n\n\n","import {AfterViewInit, Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\nimport {News} from '../Core/models/News';\r\nimport {Flight} from '../Core/models/Flight';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {FlightService} from '../Core/services/Admin/flight/flight.service';\r\nimport {NewsService} from '../Core/services/Admin/news/news.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewsComponent implements OnInit,AfterViewInit {\r\n  constructor(public service:NewsService,public serviceFlight:FlightService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.newsTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.newsTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.newsArr=res;\r\n    })\r\n    this.serviceFlight.getActive().subscribe(res=>{\r\n      this.flights=res\r\n    })\r\n  }\r\n  ngAfterViewInit(){\r\n    $('.owl-nav').removeClass('disabled');\r\n  }\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: true,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    autoHeight: false,\r\n    nav: true,\r\n    navText: [ '<i class=\"fas fa-arrow-left\"></i>','<i class=\"fas fa-arrow-right\"></i>'],\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      440: {\r\n        items: 2\r\n      },\r\n      740: {\r\n        items: 3\r\n      },\r\n      940: {\r\n        items: 4\r\n      }\r\n    },\r\n  }\r\n\r\n  newsArr:News[]=[];\r\n  flights:Flight[]=[];\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/news/${serverPath}`;\r\n  }\r\n  bannerSrc:string=\"../../assets/image/banners/news-banner.png\";\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'news'|translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"news-page\" class=\"pt-5\">\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 bg-color\">\r\n    <div class=\"w-100 pt-4\"></div>\r\n    <owl-carousel-o [options]=\"customOptions\" class=\"news\">\r\n      <ng-template carouselSlide *ngFor=\"let news of newsArr\">\r\n          <div class=\"pr-2 h-100 pl-2 \">\r\n            <a routerLink=\"/news/{{news.id}}\">\r\n            <div class=\"card col-12 h-100 mb-3 p-0 bg-color rounded\" >\r\n              <div class=\"news-image rounded\" [ngStyle]=\"{'background-image': 'url('+ createImgPath(news.image)+')'}\">\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title font-weight-bolder\" *ngIf=\"news.newsTranslates[0].title.length>25 else elseblock\">{{news.newsTranslates[0].title.substr(0,25)+'...'}}</h3>\r\n                <ng-template #elseblock>\r\n                  <h3 class=\"card-title font-weight-bolder\" >{{news.newsTranslates[0].title}}</h3>\r\n                </ng-template>\r\n                <p class=\"card-text\" [innerHTML]=\"news.newsTranslates[0].description.substr(0,105)+'...'\"></p>\r\n              </div>\r\n            </div>\r\n            </a>\r\n          </div>\r\n      </ng-template>\r\n    </owl-carousel-o>\r\n    <div class=\"w-100 pt-5\"></div>\r\n    <owl-carousel-o [options]=\"customOptions\">\r\n      <div class=\"w-100 pt-3\"></div>\r\n      <ng-template carouselSlide *ngFor=\"let flight of flights\">\r\n        <div class=\"d-flex bg-color m-2 mb-3 pt-4 pb-4 rounded\">\r\n          <div class=\"col-2 ml-2 p-0  d-flex justify-content-center align-items-center\"><i class=\"fal fa-plane fa-2x ml-4 mb-3\" style=\"transform: rotate(315deg);color: #9D9FA1\"></i></div>\r\n          <div class=\"col-9 pr-0\">\r\n            <p class=\"text-uppercase \"><b>{{flight.from}} - {{flight.to}}</b></p>\r\n            <p>{{'LandingTime'|translate}} : {{flight.landingDate|date:'yyyy-MM-dd'}}</p>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </owl-carousel-o>\r\n    <div class=\"w-100 pt-5\"></div>\r\n    <div class=\"w-100 pt-5\"></div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CourierService} from '../../../../Core/services/Admin/courier/courier.service';\nimport {CourierLocation} from '../../../../Core/models/CourierLocation';\ndeclare let alertify:any\n@Component({\n  selector: 'app-courier-update',\n  templateUrl: './courier-update.component.html',\n  styleUrls: ['./courier-update.component.scss']\n})\nexport class CourierUpdateComponent implements OnInit {\n\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CourierUpdateComponent>,\n    private languageService:LanguagesService,\n    private service:CourierService,\n    @Inject(MAT_DIALOG_DATA) public data:CourierLocation\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Price: new FormControl(this.data.price, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      IsActived: new FormControl(this.data.isActived ),\n      NameRussia: new FormControl(this.data.courierTranslates[1].name, [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl(this.data.courierTranslates[0].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.courierTranslates[2].name, [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    body.append(\"Price\",this.createForm.controls[\"Price\"].value)\n    body.append(\"id\",this.data.id.toString())\n\n    const CourierTranslates= [\n      {\n        Id:this.data.courierTranslates[1].id,\n        Name:this.createForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.courierTranslates[0].id,\n        Name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.courierTranslates[2].id,\n        Name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Kuryer servisi Yenilə</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Qiymət</mat-label>\n                <input type=\"number\" matInput formControlName=\"Price\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\" >\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\" >\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CountryInfoService} from '../../../../Core/services/Admin/countries/country-info.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-country-info-edit',\n  templateUrl: './country-info-edit.component.html',\n  styleUrls: ['./country-info-edit.component.scss']\n})\nexport class CountryInfoEditComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CountryInfoEditComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:CountryInfoService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Title: new FormControl(this.data.row.title, [\n        Validators.required,\n      ]),\n      Description: new FormControl(this.data.row.description, [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Title\",this.createForm.controls[\"Title\"].value.trim())\n    body.append(\"Description\",this.createForm.controls[\"Description\"].value.trim())\n    body.append(\"CountryId\",this.data.countryId.toString())\n    body.append(\"id\",this.data.row.id.toString())\n    this.service.updateCountryInfo(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Ölkənin detalın yenilə</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"Title\">\n                <mat-error  *ngIf=\"errorHandling('Title','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <p>İstifadəcinin adı görünməsi üçün <b> @name@ </b> yazın</p>\n              <p>İstifadəcinin soyadı görünməsi üçün <b>@surname@</b> yazın</p>\n              <p>İstifadəcinin CamexID görünməsi üçün <b>@id@</b> yazın</p>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"Description\" >\n                <mat-error  *ngIf=\"errorHandling('Description','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {DescriptionsService} from '../Core/services/descriptions/descriptions.service';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor(private languagesService:LanguagesService,\r\n              private translate: TranslateService,\r\n              private service:DescriptionsService,) {\r\n    this.get()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  data:any\r\n  desc:string\r\n  get(){\r\n    this.service.getAbout().subscribe((res)=>{\r\n      this.data=res[0]\r\n      if(this.languagesService.select.id==1){\r\n        this.desc=this.data.descEng\r\n      }\r\n      if(this.languagesService.select.id==2){\r\n        this.desc=this.data.descRus\r\n      }\r\n      if(this.languagesService.select.id==3){\r\n        this.desc=this.data.descAz\r\n      }\r\n    })\r\n  }\r\n  bannerSrc:string=\"../../assets/image/banners/about-banner.jpg\";\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'about'|translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"about\" class=\"pt-5 pb-5\">\r\n  <div class=\"container-fluid bg-color pl-pr-10 pt-5 pb-5\">\r\n    <div class=\"text col-lg-12 col-xs-12 xs-p-0\" [innerHTML]=\"this.desc\">\r\n\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../Core/models/Product';\nimport {CountryData} from '../../../Admin/countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {StatementService} from '../../../Core/services/statement/statement.service';\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\nimport {TranslateService} from '@ngx-translate/core';\ndeclare let alertify:any\n@Component({\n  selector: 'app-statement-update',\n  templateUrl: './statement-update.component.html',\n  styleUrls: ['./statement-update.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class StatementUpdateComponent implements OnInit {\n\n  statementForm:FormGroup\n  fileAttr = this.translate.instant(\"ChooseFile\");\n  fileToUpload:File;\n  products:Product[];\n  wallet:CountryData[];\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  constructor( public dialogRef: MatDialogRef<StatementUpdateComponent>,\n               private languageService:LanguagesService,\n               private service:StatementService,\n               private proService:ProductService,\n               private translate:TranslateService,\n               private cntService:CountriesService,\n               @Inject(MAT_DIALOG_DATA) public data:any,) {\n    this.getProduct();\n  }\n\n  ngOnInit(): void {\n    this.statementForm= new FormGroup({\n\n      Track: new FormControl(this.data.row.track, [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n      Name: new FormControl(\n        this.data.row.name, [\n          Validators.required\n        ]\n      ),\n      Product: new FormControl(this.data.row.product.id, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Price: new FormControl(this.data.row.price, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Count: new FormControl(this.data.row.count, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Wallet: new FormControl(this.data.row.countryId, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      TextArea: new FormControl(this.data.row.notice, [\n      ]),\n      FileInput: new FormControl('', [\n      ]),\n    })\n  }\n  getProduct(){\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        res.forEach(p=>{\n          p.productTranslates.forEach(pt=>{\n            if(pt.languageId==this.languageService.select.id){\n              p.productTranslates[0]=pt\n              this.products=res;\n            }\n          })\n        })\n      }\n    )\n    this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Track\",this.statementForm.controls[\"Track\"].value.trim())\n    body.append(\"Name\",this.statementForm.controls[\"Name\"].value.trim())\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\n    body.append(\"id\",this.data.row.id.toString())\n    body.append(\"Price\",this.statementForm.controls[\"Price\"].value)\n    body.append(\"CountryId\",this.statementForm.controls[\"Wallet\"].value)\n    body.append(\"Count\",this.statementForm.controls[\"Count\"].value)\n    body.append(\"Notice\",this.statementForm.controls[\"TextArea\"].value.trim())\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/statements/${serverPath}`;\n  }\n}\n","<div id=\"dialog\">\n  <h2 mat-dialog-title>{{'CreateStatement'|translate}}</h2>\n  <form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\n    <mat-dialog-content class=\"mat-typography\">\n      <div class=\"d-flex flex-wrap w-100 mt-4\">\n        <div class=\"col-lg-6 col-md-6 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Track'|translate}}</mat-label>\n            <input type=\"text\" matInput  placeholder=\"17017X300339206441\" formControlName=\"Track\">\n            <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"Track.errors?.minlength \" >\n              {{'ErrorMin5'|translate}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-6 col-md-6 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'SiteNMag'|translate}}</mat-label>\n            <input type=\"text\" matInput  placeholder=\"Pull And Bear\" formControlName=\"Name\">\n            <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Product'|translate}}</mat-label>\n            <mat-select  formControlName=\"Product\">\n              <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n                {{item.productTranslates[0].name}}\n              </mat-option>\n\n            </mat-select>\n            <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\">{{'Price'|translate}}</mat-label>\n            <input type=\"number\" matInput placeholder=\"1000 \" formControlName=\"Price\">\n            <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12 \">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Wallet'|translate}}</mat-label>\n            <mat-select  formControlName=\"Wallet\">\n              <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\n                {{item.wallet}}\n              </mat-option>\n            </mat-select>\n            <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\">{{'Count'|translate}}</mat-label>\n            <input type=\"number\" matInput placeholder=\"5 \" formControlName=\"Count\">\n            <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Notice'|translate}}</mat-label>\n            <textarea type=\"text\" matInput  placeholder=\"Lorem inpus some text example\" rows=\"7\"  formControlName=\"TextArea\">\n          </textarea>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12 \" id=\"fileInput\">\n          <mat-form-field>\n            <div class=\"d-flex justify-content-between\">\n              <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n              <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                {{'Browse'|translate}}\n              </button>\n              <input type=\"file\" hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\" multiple=\"multiple\"\n                     accept=\"image/*\" />\n            </div>\n            <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n      <button mat-button mat-dialog-close>{{'Cancel'|translate}}</button>\n      <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">{{'Save'|translate}}</button>\n    </mat-dialog-actions>\n  </form>\n\n</div>\n\n\n\n\n","export class MessageUser {\r\n  id: number;\r\n  fullname: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  camexId: string;\r\n  message: string;\r\n  isDeleted: boolean;\r\n  isAnswered: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CountryData} from '../../../../Admin/countries-all/CountryData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryInfoService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  getCountry(id):Observable<CountryData>{\n    return this.http.get<CountryData>(`${this.global.path}Country/${id}`);\n  }\n  createCountryInfo(body:FormData){\n    return this.http.post(`${this.global.path}CountryInfo`,body);\n  }\n  updateCountryInfo(body:FormData){\n    return this.http.put(`${this.global.path}CountryInfo/${body.get(\"id\")}`,body);\n  }\n  deleteCountryInfo(id){\n    return this.http.delete(`${this.global.path}CountryInfo/${id}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserService} from '../Core/services/user/user.service';\nimport {LanguagesService} from '../Core/services/lang/languages.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\ndeclare let alertify:any\n@Component({\n  selector: 'app-restore-password',\n  templateUrl: './restore-password.component.html',\n  styleUrls: ['./restore-password.component.scss']\n})\n\nexport class RestorePasswordComponent implements OnInit {\n  id:number\n\n  Form:FormGroup\n  constructor(private activatedRoute:ActivatedRoute,\n              private route:Router,\n              private service:UserService,\n              private languageService:LanguagesService,\n              private translate: TranslateService,) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.id=param.id\n    })\n    this.Form= new FormGroup({\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n      ]),\n      CheckPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\n        RxwebValidators.compare({fieldName:'Password'})\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.Form.controls[control].hasError(error);\n  }\n  ngOnInit(): void {\n\n  }\n\n  sendPass(){\n    const body = new FormData();\n    body.append(\"id\",this.id.toString())\n    body.append(\"NewPassword\",this.Form.controls[\"Password\"].value)\n      this.service.restore(body).subscribe(()=> {\n      alertify.success(this.translate.instant(\"Restored\"));\n      setTimeout(()=>{\n          this.route.navigate(['login'])\n        },\n        2500)\n    },\n    error => {\n      error.error.messages.forEach(e => {\n        if (e.lang_id == this.languageService.select.id) {\n          alertify.error(e.messageLang);\n        }\n      })\n    })\n  }\n  get Password() {\n    return this.Form.get('Password');\n  }\n}\n","<app-navbar>\n</app-navbar>\n<app-mobile-navbar>\n</app-mobile-navbar>\n<section id=\"restore\">\n  <app-title [title]=\"'restorePass'|translate\" ></app-title>\n  <div class=\"container-fluid  pl-pr-10 pt-5 pb-5 d-flex justify-content-center\">\n    <div class=\"bg-color col-xl-6 xol-lg-6 col-md-9 col-sm-12 col-12 p-sm-0\">\n      <div class=\"p-lg-5 p-md-5 p-sm-3 pb-sm-4 p-2 pb-4\">\n        <form [formGroup]=\"Form\" novalidate (ngSubmit)=\"sendPass()\">\n        <div class=\"pr-lg-2 pl-lg-2  p-0 pt-2\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\n                <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\n                <mat-error  *ngIf=\"errorHandling('Password','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"Password.errors?.minlength \" >\n                  {{'minLengthPass' | translate }}\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Password','pattern')\" >\n                  {{'patternPass' | translate }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\n                <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\n                <mat-error  *ngIf=\"errorHandling('CheckPassword','compare')\" >\n                  {{'comparePass' | translate }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"w-100 d-flex  mt-4\">\n            <button mat-raised-button class=\"text-uppercase restore-button  w-100\"[disabled]=\"!Form.valid\" >{{'restore'|translate}}</button>\n          </div>\n        </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n<app-footer></app-footer>\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {OfficeService} from '../../Core/services/Admin/office/office.service';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {Office} from '../../Core/models/Office';\nimport {CreateOfficeComponent} from '../dialogs/office/create-office/create-office.component';\nimport {UpdateOfficeComponent} from '../dialogs/office/update-office/update-office.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-offices',\n  templateUrl: './offices.component.html',\n  styleUrls: ['./offices.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class OfficesComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Office>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  officeData:Office[];\n  displayedColumns: string[] = ['name', 'value','isActived','actions'];\n  constructor(public service:OfficeService,public dialog: MatDialog,private languageService:LanguagesService,) {\n    this.getOffices()\n  }\n\n  getOffices(){\n    this.service.getOffices().subscribe(res=>{\n      this.officeData=res;\n      this.dataSource = new MatTableDataSource(this.officeData);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CreateOfficeComponent, {\n      width: '1050px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getOffices()\n    });\n  }\n  openDialogEditOffice(row:Office): void {\n    const dialogRefEdit = this.dialog.open(UpdateOfficeComponent, {\n      width: '1050px',\n      data: {row:row}\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.getOffices()\n    });\n  }\n  deleteOffice(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.deleteOffice(id).subscribe(\n          ()=> {\n            this.getOffices()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n}\n","<app-layout>\n  <div id=\"offices\">\n    <app-title-admin [title]=\"'Ofislər'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Ofislər</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Create</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.officeNameTranlates[2].name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"value\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Dəyəri </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.priceValue}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEditOffice(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"deleteOffice(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                 </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import { ElementRef, ViewEncapsulation} from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as Parallax from 'parallax-js';\r\nimport {Office} from '../Core/models/Office';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {CountriesService} from '../Core/services/Admin/countries/countries.service';\r\nimport {OfficeService} from '../Core/services/Admin/office/office.service';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {CountryData} from '../Admin/countries-all/CountryData';\r\nimport {NewsService} from '../Core/services/Admin/news/news.service';\r\nimport {News} from '../Core/models/News';\r\nimport {DescriptionsService} from '../Core/services/descriptions/descriptions.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  host: {\r\n    '(window:resize)': 'onResize()'\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  countries:CountryData[]\r\n  offices:Office[]\r\n  total=0;\r\n  newsArr:News[]=[];\r\n  Form:FormGroup\r\n  border:string;\r\n  constructor(private elementRef: ElementRef,private serviceCountry:CountriesService,private serviceOffice:OfficeService,\r\n              private languageService:LanguagesService,\r\n              public serviceNews:NewsService,\r\n              private service:DescriptionsService,\r\n              private translate: TranslateService,) {\r\n    this.border= window.innerWidth / 2 + 160 + 'px solid transparent'\r\n    this.Form= new FormGroup({\r\n      Country: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Office: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      LenghtUnit: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      WeightUnit: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      Height: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Width: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Weight: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Lenght: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    var scene = this.elementRef.nativeElement.querySelectorAll(\".parallax\").forEach(layer=>{\r\n      var parallax = new Parallax(layer)\r\n    })\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n    this.get()\r\n  }\r\n  loaded:boolean=false\r\n  data:any\r\n  title:string\r\n  get(){\r\n    this.serviceCountry.getWithTariffs().subscribe((res)=>{\r\n      this.countries=res;\r\n    })\r\n    this.serviceOffice.getOffices().subscribe((res)=>{\r\n      res.forEach(o=>{\r\n        o.officeNameTranlates.forEach(of=>{\r\n          if(of.languageId==this.languageService.select.id){\r\n            o.officeNameTranlates[0]=of;\r\n            this.offices=res;\r\n          }\r\n        })\r\n      })\r\n      this.offices=res;\r\n    })\r\n    this.serviceNews.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.newsTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.newsTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.newsArr=res;\r\n      this.loaded=true\r\n    })\r\n    this.newsArr.reverse();\r\n    this.service.getBio().subscribe((res)=>{\r\n      this.data=res[0]\r\n      if(this.languageService.select.id==1){\r\n        this.title=this.data.sliderTitleEng\r\n      }\r\n      if(this.languageService.select.id==2){\r\n        this.title=this.data.sliderTitleRus\r\n      }\r\n      if(this.languageService.select.id==3){\r\n        this.title=this.data.sliderTitleAz\r\n      }\r\n    })\r\n  }\r\n\r\n  onResize(){\r\n    this.border = window.innerWidth / 2 + 160 + 'px solid transparent'\r\n  }\r\n  calc(){\r\n    let cm = 100;\r\n    let price=0;\r\n    let offVal= this.offices.find(o=>o.id==this.Form.controls[\"Office\"].value).priceValue\r\n    let prices = this.countries.find(c=>c.id==this.Form.controls[\"Country\"].value).tariff.find(t=>t.to==\"Baku\").priceLists\r\n    let length = this.Form.controls[\"Lenght\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n    let width  = this.Form.controls[\"Width\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n    let height  = this.Form.controls[\"Height\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n    let weight = this.Form.controls[\"Weight\"].value*this.Form.controls[\"WeightUnit\"].value;\r\n    let weightResult = (length > cm || width > cm || height > cm) ? this.dimensionalWeight(width, length, height, weight) : weight;\r\n    if(weightResult !=0){\r\n      for (let i=0; i<prices.length;i++)\r\n      {\r\n        if(prices[i].max==100){\r\n          price=prices[i].price\r\n          price+=offVal\r\n          this.total = parseFloat((price* weightResult).toFixed(2));\r\n          break\r\n        }\r\n        if( prices[i].max>weightResult ){\r\n          price=prices[i].price\r\n          price+=offVal\r\n          this.total=parseFloat(price.toFixed(2))\r\n          break\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      this.total = parseFloat(price.toFixed(2));\r\n    }\r\n  }\r\n  dimensionalWeight(width, length, height, weight) {\r\n    let dimensionalWeight = ((width * length * height) / 6000).toFixed(2);\r\n    if (parseFloat(dimensionalWeight) > parseFloat(weight)) {\r\n      return dimensionalWeight;\r\n    } else {\r\n      return weight;\r\n    }\r\n  }\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/news/${serverPath}`;\r\n  }\r\n\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<section id=\"home-banner\"  >\r\n  <div class=\"home-banner \" >\r\n    <div class=\"slider \"  >\r\n      <div class=\"img-box active text-center parallax\" data-depth=\"0.005\">\r\n        <div class=\"images parallax \" data-depth=\"0.01\">\r\n          <div class=\"img-bg parallax\" data-depth=\"0.1\" >\r\n            <div class=\"text layer \" data-depth=\"0.12\" >\r\n              <span class=\"\" >Camex</span>\r\n              <h2  lang=\"ka\">{{this.title}}</h2>\r\n            </div>\r\n          </div>\r\n          <div class=\"img-top\"  data-depth=\"0.09\"></div>\r\n          <div class=\"img-bottom\" data-depth=\"0.09\"></div>\r\n          <div class=\"cloud img-left visible layer\" data-depth=\"0.25\"></div>\r\n          <div class=\"cloud img-right visible layer\" data-depth=\"0.25\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span class=\"tringle left\" [ngStyle]=\"{'border-right':border}\"></span>\r\n    <span class=\"tringle right\" [ngStyle]=\"{'border-left':border}\"></span>\r\n    <span class=\"tringle left-bottom\" [ngStyle]=\"{'border-right':border}\"></span>\r\n    <span class=\"tringle right-bottom\" [ngStyle]=\"{'border-left':border}\"></span>\r\n  </div>\r\n</section >\r\n<section id=\"serviceNcalc\" >\r\n  <div class=\"container-fluid pl-pr-10 \">\r\n    <div class=\"row  p-0\">\r\n      <div class=\"col-lg-8 col-md-12 col-sm-12 p-0\">\r\n        <div class=\"services\">\r\n          <span>{{'services'|translate}}</span>\r\n          <h2 class=\"mb-5\">{{'WeOffer'|translate}}</h2>\r\n          <div class=\"row items p-0 m-0\">\r\n            <a routerLink=\"/services\" class=\"col-lg-3 col-md-4 col-xs-4 col-12 item \" >\r\n              <div class=\"text-middle mt-icon\"><div class=\"icon m-auto\"></div></div>\r\n              <div class=\"title\">{{'TransportingParsels'|translate}}</div>\r\n              <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n            </a>\r\n            <a routerLink=\"/services\" class=\"col-lg-3 col-md-4 col-xs-4 col-12 item \">\r\n              <div class=\"text-middle  mt-icon\"><div class=\"icon m-auto\"></div></div>\r\n              <div class=\"title\">{{'CoopService'|translate}}</div>\r\n              <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n            </a>\r\n            <a routerLink=\"/services\" class=\"col-lg-3 col-md-4 col-xs-4 col-12 item\">\r\n              <div class=\"text-middle mt-icon\"><div class=\"icon m-auto\"></div></div>\r\n              <div class=\"title\">{{'InsideCityDelivery'|translate}}</div>\r\n              <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-4 col-md-12 col-sm-12 p-0\">\r\n        <div class=\"calc\">\r\n          <div class=\"head d-flex align-items-center text-middle\">\r\n           <div class=\"icon-main\">\r\n             <div class=\"icon\"></div>\r\n           </div>\r\n            <div class=\"title\">{{'calculator'|translate}}</div>\r\n          </div>\r\n          <form [formGroup]=\"Form\" novalidate>\r\n            <div class=\"box\">\r\n              <div class=\"row p-0 m-0\">\r\n                <mat-form-field appearance=\"fill\"  class=\"country\">\r\n                  <mat-label>{{'country'|translate}}</mat-label>\r\n                  <mat-select formControlName=\"Country\">\r\n                    <mat-option *ngFor=\"let country of countries\" [value]=\"country.id\"  class=\"text-capitalize\">\r\n                      {{country.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\"  class=\"country\">\r\n                  <mat-label>{{'issOffice'|translate}}</mat-label>\r\n                  <mat-select formControlName=\"Office\">\r\n                    <mat-option *ngFor=\"let office of offices\" [value]=\"office.id\"  class=\"text-capitalize\">\r\n                      {{office.officeNameTranlates[0].name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <div class=\"col-lg-6 d-flex p-0 pr-lg-1 \">\r\n                  <div class=\"col-12 p-0\">\r\n                    <mat-form-field appearance=\"fill\"  class=\"lenght\">\r\n                      <mat-label>{{'lengthUnit'|translate}}</mat-label>\r\n                      <mat-select formControlName=\"LenghtUnit\">\r\n                        <mat-option  value=\"1\"  class=\"text-capitalize\">\r\n                          {{'cmUnit'|translate}}\r\n                        </mat-option>\r\n                        <mat-option  value=\"2.54\"  class=\"text-capitalize\">\r\n                          {{'inUnit'|translate}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-lg-6 p-0 d-flex pl-lg-1\">\r\n                  <div class=\"col-12 p-0 \">\r\n                    <mat-form-field appearance=\"fill\"  class=\"weight float-right\">\r\n                      <mat-label>{{'weightUnit'|translate}}</mat-label>\r\n                      <mat-select formControlName=\"WeightUnit\">\r\n                        <mat-option  value=\"1\"  class=\"text-capitalize\">\r\n                          {{'kgUnit'|translate}}\r\n                        </mat-option>\r\n                        <mat-option  value=\"0.453592\"  class=\"text-capitalize\">\r\n                          {{'lbUnit'|translate}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"items d-flex\">\r\n                <div class=\"col-3 p-0\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label>{{'Weight'|translate}}</mat-label>\r\n                    <input formControlName=\"Weight\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-3 p-0\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label>{{'Length'|translate}}</mat-label>\r\n                    <input formControlName=\"Lenght\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-3 p-0\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label>{{'Width'|translate}}</mat-label>\r\n                    <input formControlName=\"Width\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-3 p-0\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                    <mat-label>{{'Height'|translate}}</mat-label>\r\n                    <input formControlName=\"Height\" type=\"number\" min=\"0\" value=\"0\" matInput>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"bottom\">\r\n                <div class=\"row p-0\">\r\n                  <div class=\"col-lg-5 col-sm-6 col-6 text-sm-right text-xs-left\">\r\n                    <span class=\"cost-title\">{{'Approximate'|translate}}</span>\r\n                    <h4 class=\"cost\">{{total}}$</h4>\r\n                  </div>\r\n                  <div class=\"col-lg-7 col-sm-6 col-6\">\r\n                    <button mat-raised-button [disabled]=\"!Form.valid\" (click)=\"calc()\">{{'calcBtn'|translate}}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <span class=\"tringle left\" [ngStyle]=\"{'border-right':border}\"></span>\r\n  <span class=\"tringle right\" [ngStyle]=\"{'border-left':border}\"></span>\r\n</section>\r\n<section id=\"news\" class=\"mt-5 mb-5\"  *ngIf=\"loaded\">\r\n  <div class=\"container-fluid pl-pr-10 h-100\">\r\n    <div class=\"row p-2  h-100 \">\r\n      <div class=\"col-lg-4 col-12 p-0 dark item\">\r\n        <a routerLink=\"/news/{{this.newsArr[0].id}}\">\r\n          <div class=\"w-100 h-100 d-flex flex-wrap\">\r\n            <div class=\"img col-lg-12 col-md-6 col-sm-6 col-6 p-0\"  [ngStyle]=\"{'background-image': 'url('+createImgPath(this.newsArr[0].image)+')'}\">\r\n            </div>\r\n            <div class=\"col-lg-12 col-md-6 col-sm-6 col-6 p-lg-4 p-xl-4 p-md-3 p-sm-2 p-2 d-flex align-items-center\">\r\n              <div class=\"title col-12 pl-0 pr-0\">\r\n                <h1>{{this.newsArr[0].newsTranslates[0].title}}</h1>\r\n                <p [innerHTML]=\"this.newsArr[0].newsTranslates[0].description.substr(0,95)+'...'\"></p>\r\n                <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-lg-4 col-6 p-0 h-100 item mob-flex\">\r\n        <a  routerLink=\"/news/{{this.newsArr[1].id}}\" class=\"col-lg-12 col-md-12 col-12 p-0 mob-pad\">\r\n          <div class=\"blue-dark\">\r\n            <div class=\"p-lg-4 p-xl-4 p-md-3 p-sm-2 p-2 h-100 d-flex align-items-center\">\r\n              <div class=\"title col-12 pl-0 pr-0\">\r\n                <h1>{{this.newsArr[1].newsTranslates[0].title}}</h1>\r\n                <p [innerHTML]=\"this.newsArr[1].newsTranslates[0].description.substr(0,135)+'...'\"></p>\r\n                <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n        <a  routerLink=\"/news/{{this.newsArr[2].id}}\" class=\"col-lg-12 col-md-12 col-12 p-0 mob-pad\">\r\n          <div class=\"blue\">\r\n            <div class=\"p-lg-4 p-xl-4 p-md-3 p-sm-2 p-2 h-100 d-flex align-items-center\">\r\n              <div class=\"title col-12 pl-0 pr-0\">\r\n                <h1>{{this.newsArr[2].newsTranslates[0].title}}</h1>\r\n                <p [innerHTML]=\"this.newsArr[2].newsTranslates[0].description.substr(0,135)+'...'\"></p>\r\n                <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class=\"col-lg-4 col-12 p-0 gray item\">\r\n        <a  routerLink=\"/news/{{this.newsArr[3].id}}\" >\r\n          <div class=\"w-100 h-100 d-flex flex-wrap\">\r\n            <div class=\"img col-lg-12 col-md-6 col-sm-6 col-6 p-0\"  [ngStyle]=\"{'background-image': 'url('+createImgPath(this.newsArr[3].image)+')'}\">\r\n            </div>\r\n            <div class=\"col-lg-12 col-md-6 col-sm-6 col-6 p-lg-4 p-xl-4 p-md-3 p-sm-2 p-2 d-flex align-items-center\">\r\n              <div class=\"title col-12 pl-0 pr-0\">\r\n                <h1>{{this.newsArr[3].newsTranslates[0].title}}</h1>\r\n                <p [innerHTML]=\"this.newsArr[3].newsTranslates[0].description.substr(0,95)+'...'\"></p>\r\n                <div class=\"arrow\"><i class=\"fas fa-arrow-right\"></i></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n<app-loader></app-loader>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CountriesService} from '../../../../Core/services/Admin/countries/countries.service';\ndeclare let alertify:any;\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-country-create-dialog',\n  templateUrl: './country-create-dialog.component.html',\n  styleUrls: ['./country-create-dialog.component.scss']\n})\nexport class CountryCreateDialogComponent implements OnInit {\n  createForm:FormGroup\n  fileAttr = 'Şəkil seç';\n  fileAttr2 = 'Şəkil seç';\n  fileToUpload:File\n  fileToUpload2:File\n  public Editor = ClassicEditor;\n  @ViewChild('fileInput') fileInput: ElementRef;\n  @ViewChild('fileInput2') fileInput2: ElementRef;\n  constructor(\n    public dialogRef: MatDialogRef<CountryCreateDialogComponent>,\n    private languageService:LanguagesService,\n    private service:CountriesService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      Name: new FormControl('', [\n        Validators.required,\n      ]),\n      Wallet: new FormControl('', [\n        Validators.required,\n      ]),\n      Value: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(false ),\n      FileInput: new FormControl('', [\n        Validators.required,\n      ]),\n      FileInput2: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  uploadFileEvt2(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr2 = '';\n      this.fileAttr2 = imgFile.target.files[0].name\n\n      this.fileToUpload2= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput2.nativeElement.value = \"\";\n    } else {\n      this.fileAttr2 = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    body.append(\"FlagPhoto\",this.fileToUpload2,this.fileToUpload2.name)\n    body.append(\"Name\",this.createForm.controls[\"Name\"].value.trim())\n    body.append(\"Value\",this.createForm.controls[\"Value\"].value)\n    body.append(\"Wallet\",this.createForm.controls[\"Wallet\"].value.trim())\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    body.append(\"NoticeTranslate\",null)\n   const NoticeTranlates= [\n      {\n        Name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Name:this.createForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Notices\",JSON.stringify(NoticeTranlates))\n\n    this.service.createCountry(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","  <h1 class=\"mb-2\" mat-dialog-title>\n    <b>Ölkə yarad</b>\n  </h1>\n\n  <form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ölkənin adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"Name\"  placeholder=\"USA\">\n                <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Dəyəri</mat-label>\n                <input type=\"number\" matInput formControlName=\"Value\"  placeholder=\"1\">\n                <mat-error  *ngIf=\"errorHandling('Value','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Value','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Valyuta</mat-label>\n                <input type=\"text\" matInput formControlName=\"Wallet\"  placeholder=\"USD\">\n                <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Bayraq</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Arxa şəkil</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr2\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput2.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput2 formControlName=\"FileInput2\"  (change)=\"uploadFileEvt2($event)\" name=\"uploadFile2\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput2','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n                <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                  Activasiya\n                </mat-checkbox>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n    <div mat-dialog-actions class=\"w-100 justify-content-end\">\n      <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n      <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n    </div>\n\n  </form>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {PriceService} from '../../../../Core/services/Admin/countries/tariff/price.service';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\ndeclare let alertify:any\n@Component({\n  selector: 'app-price-update',\n  templateUrl: './price-update.component.html',\n  styleUrls: ['./price-update.component.scss']\n})\nexport class PriceUpdateComponent implements OnInit {\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<PriceUpdateComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:PriceService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Min: new FormControl(this.data.row.min, [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Max: new FormControl(this.data.row.max, [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/),\n        RxwebValidators.greaterThan({fieldName:'Min'})\n      ]),\n      Price: new FormControl(this.data.row.price, [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Min\",this.createForm.controls[\"Min\"].value)\n    body.append(\"Max\",this.createForm.controls[\"Max\"].value)\n    body.append(\"Price\",this.createForm.controls[\"Price\"].value)\n    body.append(\"TariffId\",this.data.tariffId.toString())\n    body.append(\"id\",this.data.row.id.toString())\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Tarif yenilə</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Minimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Min\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Min','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Min','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <p>Maksimum dəyərə 100 yazsanız səyfədə \"yuxarı\" kimi görünəcək</p>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Maksimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Max\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Max','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','greaterThan')\" >\n                  Maksimum çəki minimum çəkidən cox olmalıdır\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Qiymət</mat-label>\n                <input type=\"number\" matInput formControlName=\"Price\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport gsap from 'gsap';\r\nimport { ElementRef } from '@angular/core';\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss'],\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor(private elRef: ElementRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //gsap animation\r\n    gsap.set(\"svg\", { visibility: \"visible\" });\r\n    gsap.to(\"#headStripe\", {\r\n      y: 0.5,\r\n      rotation: 1,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: \"sine.inOut\",\r\n      duration: 1\r\n    });\r\n    gsap.to(\"#spaceman\", {\r\n      y: 0.5,\r\n      rotation: 1,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: \"sine.inOut\",\r\n      duration: 1\r\n    });\r\n    gsap.to(\"#craterSmall\", {\r\n      x: -3,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      duration: 1,\r\n      ease: \"sine.inOut\"\r\n    });\r\n    gsap.to(\"#craterBig\", {\r\n      x: 3,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      duration: 1,\r\n      ease: \"sine.inOut\"\r\n    });\r\n    gsap.to(\"#planet\", {\r\n      rotation: -2,\r\n      yoyo: true,\r\n      repeat: -1,\r\n      duration: 1,\r\n      ease: \"sine.inOut\",\r\n      transformOrigin: \"50% 50%\"\r\n    });\r\n    gsap.to(\"#starsBig g\", {\r\n      rotation: \"random(-30,30)\",\r\n      transformOrigin: \"50% 50%\",\r\n      yoyo: true,\r\n      repeat: -1,\r\n      ease: \"sine.inOut\"\r\n    });\r\n    gsap.fromTo(\"#starsSmall g\",{\r\n      scale: 0, transformOrigin: \"50% 50%\" },\r\n      {\r\n        scale: 1, transformOrigin: \"50% 50%\", yoyo: true, repeat: -1, stagger: 0.1 });\r\n    gsap.to(\"#circlesSmall circle\", {\r\n      y: -4,\r\n      yoyo: true,\r\n      duration: 1,\r\n      ease: \"sine.inOut\",\r\n      repeat: -1\r\n    });\r\n    gsap.to(\"#circlesBig circle\", {\r\n      y: -2,\r\n      yoyo: true,\r\n      duration: 1,\r\n      ease: \"sine.inOut\",\r\n      repeat: -1\r\n    });\r\n    gsap.set(\"#glassShine\", { x: -68 });\r\n    gsap.to(\"#glassShine\", {\r\n      x: 80,\r\n      duration: 2,\r\n      rotation: -30,\r\n      ease: \"expo.inOut\",\r\n      transformOrigin: \"50% 50%\",\r\n      repeat: -1,\r\n      repeatDelay: 8,\r\n      delay: 2\r\n    });\r\n  }\r\n  loader:boolean=false;\r\n\r\n}\r\n\r\n","<div class=\"body\">\r\n  <main>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\" col-lg-6 col-md-6 d-md-block d-sm-none d-none  align-self-center\">\r\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n               viewBox=\"0 0 800 600\">\r\n            <g>\r\n              <defs>\r\n                <clipPath id=\"GlassClip\">\r\n                  <path\r\n                    d=\"M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5\r\n                s-28.485-16.599-34.877-24.192c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13\r\n                c6.755-0.61,20.546-0.608,41.785,5.087s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\" />\r\n                </clipPath>\r\n                <clipPath id=\"cordClip\">\r\n                  <rect width=\"800\" height=\"600\" />\r\n                </clipPath>\r\n              </defs>\r\n\r\n              <g id=\"planet\">\r\n                <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-miterlimit=\"10\" cx=\"572.859\" cy=\"108.803\"\r\n                        r=\"90.788\" />\r\n\r\n                <circle id=\"craterBig\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-miterlimit=\"10\" cx=\"548.891\"\r\n                        cy=\"62.319\" r=\"13.074\" />\r\n\r\n                <circle id=\"craterSmall\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-miterlimit=\"10\" cx=\"591.743\"\r\n                        cy=\"158.918\" r=\"7.989\" />\r\n                <path id=\"ring\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                      stroke-miterlimit=\"10\" d=\"\r\n\t\t\tM476.562,101.461c-30.404,2.164-49.691,4.221-49.691,8.007c0,6.853,63.166,12.408,141.085,12.408s141.085-5.555,141.085-12.408\r\n\t\t\tc0-3.378-15.347-4.988-40.243-7.225\" />\r\n\r\n                <path id=\"ringShadow\" opacity=\"0.5\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                      stroke-miterlimit=\"10\" d=\"\r\n\t\t\tM483.985,127.43c23.462,1.531,52.515,2.436,83.972,2.436c36.069,0,68.978-1.19,93.922-3.149\" />\r\n              </g>\r\n              <g id=\"stars\">\r\n                <g id=\"starsBig\">\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"518.07\" y1=\"245.375\" x2=\"518.07\" y2=\"266.581\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"508.129\" y1=\"255.978\" x2=\"528.01\" y2=\"255.978\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"154.55\" y1=\"231.391\" x2=\"154.55\" y2=\"252.598\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"144.609\" y1=\"241.995\" x2=\"164.49\" y2=\"241.995\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"320.135\" y1=\"132.746\" x2=\"320.135\" y2=\"153.952\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"310.194\" y1=\"143.349\" x2=\"330.075\" y2=\"143.349\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"200.67\" y1=\"483.11\" x2=\"200.67\" y2=\"504.316\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"210.611\" y1=\"493.713\" x2=\"190.73\" y2=\"493.713\" />\r\n                  </g>\r\n                </g>\r\n                <g id=\"starsSmall\">\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"432.173\" y1=\"380.52\" x2=\"432.173\" y2=\"391.83\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"426.871\" y1=\"386.175\" x2=\"437.474\" y2=\"386.175\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"489.555\" y1=\"299.765\" x2=\"489.555\" y2=\"308.124\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"485.636\" y1=\"303.945\" x2=\"493.473\" y2=\"303.945\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"231.468\" y1=\"291.009\" x2=\"231.468\" y2=\"299.369\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"227.55\" y1=\"295.189\" x2=\"235.387\" y2=\"295.189\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"244.032\" y1=\"547.539\" x2=\"244.032\" y2=\"555.898\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"247.95\" y1=\"551.719\" x2=\"240.113\" y2=\"551.719\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"186.359\" y1=\"406.967\" x2=\"186.359\" y2=\"415.326\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"190.277\" y1=\"411.146\" x2=\"182.44\" y2=\"411.146\" />\r\n                  </g>\r\n                  <g>\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"480.296\" y1=\"406.967\" x2=\"480.296\" y2=\"415.326\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          x1=\"484.215\" y1=\"411.146\" x2=\"476.378\" y2=\"411.146\" />\r\n                  </g>\r\n                </g>\r\n                <g id=\"circlesBig\">\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"588.977\" cy=\"255.978\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"450.066\" cy=\"320.259\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"168.303\" cy=\"353.753\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"429.522\" cy=\"201.185\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"200.67\" cy=\"176.313\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"133.343\" cy=\"477.014\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"283.521\" cy=\"568.033\" r=\"7.952\" />\r\n\r\n                  <circle fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"\r\n                          cx=\"413.618\" cy=\"482.387\" r=\"7.952\" />\r\n                </g>\r\n                <g id=\"circlesSmall\">\r\n                  <circle fill=\"#0E0620\" cx=\"549.879\" cy=\"296.402\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"253.29\" cy=\"229.24\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"434.824\" cy=\"263.931\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"183.708\" cy=\"544.176\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"382.515\" cy=\"530.923\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"130.693\" cy=\"305.608\" r=\"2.651\" />\r\n                  <circle fill=\"#0E0620\" cx=\"480.296\" cy=\"477.014\" r=\"2.651\" />\r\n                </g>\r\n              </g>\r\n              <g id=\"spaceman\" clip-path=\"url(cordClip)\">\r\n                <path id=\"cord\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\" stroke-miterlimit=\"10\"\r\n                      d=\"\r\n\t\t\tM273.813,410.969c0,0-54.527,39.501-115.34,38.218c-2.28-0.048-4.926-0.241-7.841-0.548\r\n\t\t\tc-68.038-7.178-134.288-43.963-167.33-103.87c-0.908-1.646-1.793-3.3-2.654-4.964c-18.395-35.511-37.259-83.385-32.075-118.817\" />\r\n\r\n                <path id=\"backpack\" fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"\r\n\t\t\tM338.164,454.689l-64.726-17.353c-11.086-2.972-17.664-14.369-14.692-25.455l15.694-58.537\r\n\t\t\tc3.889-14.504,18.799-23.11,33.303-19.221l52.349,14.035c14.504,3.889,23.11,18.799,19.221,33.303l-15.694,58.537\r\n\t\t\tC360.647,451.083,349.251,457.661,338.164,454.689z\" />\r\n                <g id=\"antenna\">\r\n                  <line fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" x1=\"323.396\" y1=\"236.625\" x2=\"295.285\" y2=\"353.753\" />\r\n                  <circle fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-miterlimit=\"10\" cx=\"323.666\" cy=\"235.617\" r=\"6.375\" />\r\n                </g>\r\n                <g id=\"armR\">\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM360.633,363.039c1.352,1.061,4.91,5.056,5.824,6.634l27.874,47.634c3.855,6.649,1.59,15.164-5.059,19.02l0,0\r\n\t\t\t\tc-6.649,3.855-15.164,1.59-19.02-5.059l-5.603-9.663\" />\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM388.762,434.677c5.234-3.039,7.731-8.966,6.678-14.594c2.344,1.343,4.383,3.289,5.837,5.793\r\n\t\t\t\tc4.411,7.596,1.829,17.33-5.767,21.741c-7.596,4.411-17.33,1.829-21.741-5.767c-1.754-3.021-2.817-5.818-2.484-9.046\r\n\t\t\t\tC375.625,437.355,383.087,437.973,388.762,434.677z\" />\r\n                </g>\r\n                <g id=\"armL\">\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM301.301,347.66c-1.702,0.242-5.91,1.627-7.492,2.536l-47.965,27.301c-6.664,3.829-8.963,12.335-5.134,18.999h0\r\n\t\t\t\tc3.829,6.664,12.335,8.963,18.999,5.134l9.685-5.564\" />\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM241.978,395.324c-3.012-5.25-2.209-11.631,1.518-15.977c-2.701-0.009-5.44,0.656-7.952,2.096\r\n\t\t\t\tc-7.619,4.371-10.253,14.09-5.883,21.71c4.371,7.619,14.09,10.253,21.709,5.883c3.03-1.738,5.35-3.628,6.676-6.59\r\n\t\t\t\tC252.013,404.214,245.243,401.017,241.978,395.324z\" />\r\n                </g>\r\n                <g id=\"body\">\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM353.351,365.387c-7.948,1.263-16.249,0.929-24.48-1.278c-8.232-2.207-15.586-6.07-21.836-11.14\r\n\t\t\t\tc-17.004,4.207-31.269,17.289-36.128,35.411l-1.374,5.123c-7.112,26.525,8.617,53.791,35.13,60.899l0,0\r\n\t\t\t\tc26.513,7.108,53.771-8.632,60.883-35.158l1.374-5.123C371.778,395.999,365.971,377.536,353.351,365.387z\" />\r\n                  <path fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM269.678,394.912L269.678,394.912c26.3,20.643,59.654,29.585,93.106,25.724l2.419-0.114\" />\r\n                </g>\r\n                <g id=\"legs\">\r\n                  <g id=\"legR\">\r\n\r\n                    <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\t\tM312.957,456.734l-14.315,53.395c-1.896,7.07,2.299,14.338,9.37,16.234l0,0c7.07,1.896,14.338-2.299,16.234-9.37l17.838-66.534\r\n\t\t\t\t\tC333.451,455.886,323.526,457.387,312.957,456.734z\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-miterlimit=\"10\" x1=\"304.883\" y1=\"486.849\" x2=\"330.487\" y2=\"493.713\" />\r\n                  </g>\r\n                  <g id=\"legL\">\r\n\r\n                    <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\t\tM296.315,452.273L282,505.667c-1.896,7.07-9.164,11.265-16.234,9.37l0,0c-7.07-1.896-11.265-9.164-9.37-16.234l17.838-66.534\r\n\t\t\t\t\tC278.993,441.286,286.836,447.55,296.315,452.273z\" />\r\n\r\n                    <line fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                          stroke-miterlimit=\"10\" x1=\"262.638\" y1=\"475.522\" x2=\"288.241\" y2=\"482.387\" />\r\n                  </g>\r\n                </g>\r\n                <g id=\"head\">\r\n\r\n                  <ellipse transform=\"matrix(0.259 -0.9659 0.9659 0.259 -51.5445 563.2371)\" fill=\"#FFFFFF\"\r\n                           stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                           stroke-miterlimit=\"10\" cx=\"341.295\" cy=\"315.211\" rx=\"61.961\" ry=\"60.305\" />\r\n                  <path id=\"headStripe\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM330.868,261.338c-7.929,1.72-15.381,5.246-21.799,10.246\" />\r\n\r\n                  <path fill=\"#FFFFFF\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                        stroke-miterlimit=\"10\" d=\"\r\n\t\t\t\tM380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5s-28.485-16.599-34.877-24.192\r\n\t\t\t\tc-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13c6.755-0.61,20.546-0.608,41.785,5.087\r\n\t\t\t\ts33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\" />\r\n                  <g clip-path=\"url(#GlassClip)\">\r\n                    <polygon id=\"glassShine\" fill=\"none\" stroke=\"#0E0620\" stroke-width=\"3\" stroke-miterlimit=\"10\" points=\"\r\n\t\t\t\t\t278.436,375.599 383.003,264.076 364.393,251.618 264.807,364.928 \t\t\t\t\" />\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div class=\"col-lg-6 col-md-6 col-sm-12 col-12 align-self-center\">\r\n          <h2>404</h2>\r\n          <h3>UH OH! You're lost.</h3>\r\n          <p>The page you are looking for does not exist.\r\n            How you got here is a mystery. But you can click the button below\r\n            to go back to the homepage.\r\n          </p>\r\n          <button mat-button class=\"btn green\" routerLink=\"/home\">GO TO HOME</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n\r\n</div>\r\n\r\n\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {ServiceService} from '../../../../Core/services/Admin/service/service.service';\nimport {NewsService} from '../../../../Core/services/Admin/news/news.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-create-news',\n  templateUrl: './create-news.component.html',\n  styleUrls: ['./create-news.component.scss']\n})\nexport class CreateNewsComponent implements OnInit {\n  fileAttr = 'Şəkil seçin';\n  fileToUpload:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CreateNewsComponent>,\n    private languageService:LanguagesService,\n    private service:NewsService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(false ),\n      TitleRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      FileInput: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const Translates= [\n      {\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(Translates))\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Xəbər yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Təsvir Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Təsvir İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Təsvir Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Şəkil</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activatsiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {Office} from '../../Core/models/Office';\nimport {UpdateProductComponent} from '../dialogs/product/update-product/update-product.component';\nimport {CreatePtoductComponent} from '../dialogs/product/create-ptoduct/create-ptoduct.component';\nimport {ProductService} from '../../Core/services/Admin/product/product.service';\nimport {Product} from '../../Core/models/Product';\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class ProductsComponent implements OnInit {\n\n\n  dataSource: MatTableDataSource<Product>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  productData:Product[];\n  displayedColumns: string[] = ['name','isActived','actions'];\n  constructor(public service:ProductService,public dialog: MatDialog,private languageService:LanguagesService,) {\n    this.getProducts()\n  }\n  getProducts(){\n    this.service.getProducts().subscribe(res=>{\n      this.productData=res;\n      this.dataSource = new MatTableDataSource(this.productData);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CreatePtoductComponent, {\n      width: '450px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getProducts()\n    });\n  }\n  openDialogEditOffice(row:Office): void {\n    const dialogRefEdit = this.dialog.open(UpdateProductComponent, {\n      width: '450px',\n      data: {row:row}\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.getProducts()\n    });\n  }\n  deleteProduct(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.deleteProduct(id).subscribe(\n          ()=> {\n            this.getProducts()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n}\n","<app-layout>\n  <div id=\"product\">\n    <app-title-admin [title]=\"'Məhsullar'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Məhsullar</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.productTranslates[2].name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEditOffice(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"deleteProduct(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, OnInit} from '@angular/core';\r\nimport {Languages} from '../navbar/models/languages';\r\ndeclare let $:any\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {LoginService} from '../Core/services/login/login.service';\r\nimport {NavigationService} from '../Core/services/navigation/navigation.service';\r\nimport {UserNavVM} from '../navbar/models/UserNavVM';\r\n\r\n@Component({\r\n  selector: 'app-mobile-navbar',\r\n  templateUrl: './mobile-navbar.component.html',\r\n  styleUrls: ['./mobile-navbar.component.scss']\r\n})\r\nexport class MobileNavbarComponent implements OnInit {\r\n  constructor(private languagesService:LanguagesService,public authService:LoginService,private navigation:NavigationService) {\r\n    this.languagesService.getLang().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.flagSrc='../../assets/image/navbar/'+r.flagSrc\r\n      })\r\n      this.languages=res;\r\n      this.select=this.languagesService.select;\r\n    });\r\n    this.getUser()\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  languages: Languages[]=this.languagesService.languages;\r\n  select:Languages;\r\n\r\n  SetLanguage(lang){\r\n    this.languagesService.SetLanguage(lang);\r\n    this.select=this.languagesService.select;\r\n  }\r\n  loaded:boolean=false\r\n  userNav:UserNavVM;\r\n  getUser(){\r\n    this.authService.user$.subscribe(user=> {\r\n      if (user != null && this.authService.end) {\r\n        this.navigation.getUser().subscribe(res=>{\r\n          this.userNav=res;\r\n          this.loaded=true\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  hideScroll(){\r\n    $('body').css('overflow','hidden')\r\n  }\r\n  showScroll(){\r\n    $('body').css('overflow','visible')\r\n  }\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n","<mat-sidenav-container autosize >\r\n  <mat-sidenav #sidenav >\r\n    <div class=\"mobile-navbar-slider d-flex justify-content-between align-items-center\">\r\n      <a routerLink=\"\" class=\"logo white-logo\"></a>\r\n      <i class=\"fal fa-times close nav-btn\" (click)=\"sidenav.toggle()\" (click)=\" showScroll()\"></i>\r\n    </div>\r\n    <div class=\"nav-item-list\">\r\n      <ul class=\"mainUL\" >\r\n          <ng-template [ngIf]=\"loaded\" [ngIfElse]=\"elseBlock\">\r\n            <li   *ngIf=\"authService.user$ | async as user  else elseBlock\">\r\n              <a  (click)=\" showScroll()\" *ngIf=\"userNav.companyName else privateuser\" class=\"username text-capitalize\" routerLink=\"/myprofile\" >\r\n                <ng-template *ngIf=\"userNav.companyName.length>15 else elseBlock2\"> {{userNav.companyName.substr(0,15)}}...</ng-template>\r\n                <ng-template #elseBlock2>\r\n                  {{userNav.companyName}}\r\n                </ng-template>\r\n              </a>\r\n              <br>\r\n              <br>\r\n              <a (click)=\" showScroll()\" (click)=\"logout()\" class=\"mt-3\" role=\"button\">{{'LogOut'|translate}}</a>\r\n              <ng-template #privateuser>\r\n                <a (click)=\" showScroll()\"  class=\"username text-capitalize\" routerLink=\"/myprofile\" >{{userNav.name.substr(0,8)+\" \"+userNav.surname.substr(0,8)}}</a>\r\n              </ng-template>\r\n            </li>\r\n          </ng-template>\r\n\r\n\r\n        <ng-template #elseBlock>\r\n          <li (click)=\" showScroll()\">\r\n            <a routerLink=\"/login\" (click)=\" showScroll()\">{{'login'|translate}}</a>\r\n          </li>\r\n        </ng-template>\r\n        <li><a routerLink=\"\" (click)=\" showScroll()\">{{'HomePage'|translate}}</a></li>\r\n        <li><a routerLink=\"/shopping\" (click)=\" showScroll()\">{{'shopping'|translate}}</a></li>\r\n        <li><a routerLink=\"/tariffs\" (click)=\" showScroll()\">{{'tariffs'|translate}}</a></li>\r\n        <li><a routerLink=\"/news\" (click)=\" showScroll()\">{{'news'|translate}}</a></li>\r\n        <li><a routerLink=\"/faq\" (click)=\" showScroll()\">{{'FAQ'|translate}}</a></li>\r\n        <li><a routerLink=\"/about\" (click)=\" showScroll()\">{{'about'|translate}}</a></li>\r\n        <li><a routerLink=\"/contact\" (click)=\" showScroll()\">{{'contact'|translate}}</a></li>\r\n      </ul>\r\n      <ul class=\"d-flex flagUl flex-wrap\"  >\r\n        <li *ngFor=\"let lang of languages\" >\r\n          <a role=\"button\" class=\"lang-mobile\" (click)=\"SetLanguage(lang.value)\">\r\n            <div class=\"flag-mobile\">\r\n              <img width=\"100%\" [src]=\"lang.flagSrc\"  >\r\n            </div>\r\n            <span> {{lang.name}}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content >\r\n   <div class=\" justify-content-between align-items-center mobile-navbar-head\">\r\n     <a routerLink=\"\" class=\"logo\"></a>\r\n     <i class=\"fal fa-bars open nav-btn\" (click)=\"sidenav.toggle()\" (click)=\"hideScroll()\"></i>\r\n   </div>\r\n    <ng-content>\r\n    </ng-content>\r\n  </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>\r\n\r\n","import {Languages} from '../../../navbar/models/languages';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {GlobalService} from '../global/global.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguagesService   {\r\n  path:string;\r\n  languages: Languages[]=[];\r\n  selected:string=localStorage.getItem(\"language\");\r\n  select:Languages;\r\n  constructor( public translate: TranslateService, private http:HttpClient, private  global:GlobalService) {\r\n  this.path=global.path+\"Language\"\r\n    this.getLang().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.flagSrc='../../assets/image/navbar/'+r.flagSrc\r\n      })\r\n      this.languages=res;\r\n\r\n      this.select=this.languages.find(l=>l.value==this.selected)\r\n\r\n      translate.addLangs(['az','ru','en']);\r\n\r\n      if(this.selected==null || this.selected==\"\" ||this.languages.find(x=>x.value==this.selected)==undefined){\r\n        this.selected='az';\r\n        this.SetLanguage('az');\r\n        translate.setDefaultLang(this.selected);\r\n      }\r\n\r\n      else{\r\n        translate.setDefaultLang(this.selected);\r\n      }\r\n    });\r\n  }\r\n\r\n  SetLanguage(lang):void{\r\n    localStorage.setItem(\"language\",lang);\r\n    this.select=this.languages.find(x=>x.value==lang);\r\n    this.translate.use(lang);\r\n  }\r\n\r\n  getLang():Observable<Languages[]>{\r\n   return this.http.get<Languages[]>(this.path)\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {ShopLink} from '../../../Core/models/ShopLink';\nimport {ShopLinkService} from '../../../Core/services/Admin/shop/shop-link.service';\nimport {Shop} from '../../../Core/models/Shop';\nimport {ShopLinkCreateDialogComponent} from '../../dialogs/shop/shop-link-create-dialog/shop-link-create-dialog.component';\nimport {ShopLinkUpdateDialogComponent} from '../../dialogs/shop/shop-link-update-dialog/shop-link-update-dialog.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-shop-link',\n  templateUrl: './shop-link.component.html',\n  styleUrls: ['./shop-link.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class ShopLinkComponent implements OnInit {\n\n  dataSource: MatTableDataSource<ShopLink>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Shop;\n  shopId:number;\n  displayedColumns: string[] = ['link','actions'];\n  constructor(public service:ShopLinkService,public dialog: MatDialog,private languageService:LanguagesService, private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.shopId=param.id\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.get()\n  }\n  loaded:boolean=false\n  get(){\n    this.service.get(this.shopId).subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data.shopLinks);\n      this.loaded=true\n      setTimeout(() =>\n      {\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator\n      })\n\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(ShopLinkCreateDialogComponent, {\n      width: '450px',\n      data: this.shopId\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogEdit(row): void {\n    const dialogRefCreate = this.dialog.open(ShopLinkUpdateDialogComponent, {\n      width: '450px',\n      data: {row:row,shopId:this.shopId}\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  delete(id:number) {\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          () => {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n  }\n}\n","<app-layout>\n  <div id=\"shopLink\" *ngIf=\"loaded else elseblock\">\n    <app-title-admin [title]=\"this.data.shopTranslates[2].name\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n          <span class=\"m-0 pl-3  title\">\n            {{this.data.shopTranslates[2].name}}\n          </span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"link\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Link </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.link}} </td>\n              </ng-container>\n\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock>\n    <div class=\"p-5\">\n      <h1><b><i>Loading...</i></b></h1>\n    </div>\n  </ng-template>\n</app-layout>\n\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {map, startWith} from 'rxjs/operators';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {UsersService} from '../../../../Core/services/Admin/users/users.service';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\ndeclare let alertify:any;\n\nexport interface Data {\n  str: string[];\n  id:string;\n}\n@Component({\n  selector: 'app-role-dialog',\n  templateUrl: './role-dialog.component.html',\n  styleUrls: ['./role-dialog.component.scss']\n})\nexport class RoleDialogComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  rolesCtrl = new FormControl();\n  filteredRoles: Observable<string[]>;\n  myuserRoles: string[]= [];\n  allRoles: string[]\n\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(\n    public dialogRef: MatDialogRef<RoleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:Data,\n    private service:UsersService,\n    private languageService:LanguagesService) {\n    this.getRoles();\n    data.str.forEach(v=>{\n     if(v!=\"PrivateCustomer\"&& v!=\"BusinessCustomer\" &&v!=\"MainAdmin\"){\n       this.myuserRoles.push(v)\n     }\n    })\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n\n      this.myuserRoles.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    this.rolesCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.myuserRoles.indexOf(fruit);\n\n    if (index >= 0) {\n      this.myuserRoles.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    if(!this.myuserRoles.find(val=>val==event.option.viewValue)){\n      this.myuserRoles.push(event.option.viewValue);\n      this.fruitInput.nativeElement.value = '';\n      this.rolesCtrl.setValue(null);\n    }\n  }\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.allRoles.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  }\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  getRoles(){\n    this.service.getRoles().subscribe(res=>{\n      this.allRoles=res;\n      this.filteredRoles = this.rolesCtrl.valueChanges.pipe(\n        startWith(null),\n        map((role: string | null) => role ? this._filter(role) : this.allRoles.slice()));\n    })\n  }\n  addRole(){\n    if(this.myuserRoles.length==0 && this.data.str.length==1){\n      alertify.error(\"Rol seçin!\")\n      return\n    }\n    const body = {\n      \"Id\":this.data.id,\n      \"Roles\":this.myuserRoles\n    }\n    this.service.AddRoles(body).subscribe(\n      ()=> {\n        alertify.success(\"Dəyişildi!\");\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e=>{\n          if(e.lang_id==this.languageService.select.id){\n            alertify.error(e.messageLang);\n          }\n        })\n      })\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Rolu Dəyiş</b>\n</h1>\n<h4 class=\"mb-1\">İstifadəçinin Rolları:\n</h4>\n<p><i>{{data.str.concat()}}</i></p>\n\n<div mat-dialog-content>\n  <mat-form-field class=\"w-100\">\n    <mat-label>Rol seç</mat-label>\n    <mat-chip-list #chipList aria-label=\"Fruit selection\">\n      <mat-chip\n        *ngFor=\"let roles of myuserRoles\"\n        [selectable]=\"selectable\"\n        [removable]=\"removable\"\n        (removed)=\"remove(roles)\">\n        {{roles}}\n        <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n      </mat-chip>\n      <input\n        placeholder=\"Rol əlavə et\"\n        #fruitInput\n        [formControl]=\"rolesCtrl\"\n        [matAutocomplete]=\"auto\"\n        [matChipInputFor]=\"chipList\"\n        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n        (matChipInputTokenEnd)=\"add($event)\">\n    </mat-chip-list>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n      <mat-option *ngFor=\"let role of filteredRoles | async\" [value]=\"role\">\n        {{role}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions class=\"w-100 justify-content-end\">\n  <button mat-button (click)=\"onNoClick()\" color=\"warn\">Ləğv Et</button>\n  <button mat-button (click)=\"addRole()\" color=\"primary\" cdkFocusInitial>Dəyiş</button>\n</div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FlightService} from '../../../../Core/services/Admin/flight/flight.service';\nimport {News} from '../../../../Core/models/News';\nimport {Flight} from '../../../../Core/models/Flight';\ndeclare let alertify:any\n@Component({\n  selector: 'app-update-flight',\n  templateUrl: './update-flight.component.html',\n  styleUrls: ['./update-flight.component.scss']\n})\nexport class UpdateFlightComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<UpdateFlightComponent>,\n    private languageService:LanguagesService,\n    private service:FlightService,\n    @Inject(MAT_DIALOG_DATA) public data:Flight\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(this.data.isActived ),\n      From: new FormControl(this.data.from , [\n        Validators.required,\n      ]),\n      To: new FormControl(this.data.to , [\n        Validators.required,\n      ]),\n      LandingDate: new FormControl(this.data.landingDate , [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    body.append(\"From\",this.createForm.controls[\"From\"].value)\n    body.append(\"To\",this.createForm.controls[\"To\"].value)\n    body.append(\"LandingDate\", JSON.stringify(this.createForm.controls[\"LandingDate\"].value).split('\"').join(''))\n    body.append(\"id\",this.data.id.toString())\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Reys Yenilə</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hardan</mat-label>\n                <input type=\"text\" matInput formControlName=\"From\" >\n                <mat-error  *ngIf=\"errorHandling('From','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hara</mat-label>\n                <input type=\"text\" matInput formControlName=\"To\">\n                <mat-error  *ngIf=\"errorHandling('To','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\"  appearance=\"fill\">\n                <mat-label>Tarix seç</mat-label>\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"LandingDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-error  *ngIf=\"errorHandling('LandingDate','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {LoginService} from '../services/login/login.service';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthOutGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: LoginService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return this.authService.user$.pipe(\r\n      map((user) => {\r\n        if (!user) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['home'], {\r\n            queryParams: { returnUrl: state.url },\r\n          });\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import {Component,  OnInit,  ViewChild} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Cargo} from '../../Core/models/Cargo';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\nimport {TranslateService} from '@ngx-translate/core';\n@Component({\n  selector: 'app-ended',\n  templateUrl: './ended.component.html',\n  styleUrls: ['./ended.component.scss']\n})\nexport class EndedComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Cargo>\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  Data:Cargo[];\n  displayedColumns: string[] = ['track','name','weight','price','office'];\n  constructor(\n    public languageService:LanguagesService,\n    public service:CargoService,\n    private translate: TranslateService) {\n    this.get()\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n    this.translate.onLangChange.subscribe(() => {\n      this.get()\n    });\n  }\n  loaded:boolean=false\n  get(){\n    this.service.getEnded().subscribe(res=>{\n      res.forEach(p=>{\n        p.office.officeNameTranlates.forEach(pt=>{\n          if(pt.languageId==this.languageService.select.id){\n            p.office.officeNameTranlates[0]=pt\n          }\n        })\n      })\n      this.Data=res;\n      this.dataSource = new MatTableDataSource(this.Data);\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      });\n\n      this.loaded=true\n    })\n  }\n\n\n\n\n\n}\n","<div *ngIf=\"loaded\" class=\"w-100 d-flex flex-wrap\">\n  <div class=\"col-12\" id=\"in-anbar\">\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\n      <span class=\"m-0 pl-3 title\">{{'Parcels'|translate}}</span>\n    </div>\n    <div class=\"style content-panel mt-4\">\n      <div class=\"table-angular \">\n        <mat-form-field>\n          <mat-label class=\"filter\">{{'Filter'|translate}}</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n        <div class=\"scroll\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"track\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Track'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'SiteNMag'|translate}}</th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"weight\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Weight'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.weight}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CamexPrice'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.camexPrice}} USD</td>\n            </ng-container>\n            <ng-container matColumnDef=\"office\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Destination'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.office.officeNameTranlates[0].name}} </td>\n            </ng-container>\n\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\"  colspan=\"12\"> {{'DataNotFound'|translate}}</td>\n            </tr>\n          </table>\n        </div>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {Component, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Cargo} from '../../Core/models/Cargo';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {WaitingInvoiceDialogComponent} from '../dialogs/waiting-invoice-dialog/waiting-invoice-dialog.component';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BalanceService} from '../../Core/services/balance/balance.service';\ndeclare let Swal:any\ndeclare let alertify:any\n@Component({\n  selector: 'app-in-anbar',\n  templateUrl: './in-anbar.component.html',\n  styleUrls: ['./in-anbar.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class InAnbarComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Cargo>\n  selection = new SelectionModel<Cargo>(true, []);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  Data:Cargo[];\n  @Output() event = new EventEmitter();\n  callParent(): void {\n    this.event.next();\n  }\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Cargo): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.track + 1}`;\n\n  }\n\n  displayedColumns: string[] = ['select','track','name','weight','price','status','office','actions'];\n  constructor(\n    private balanceService:BalanceService,\n    public languageService:LanguagesService,\n    public service:CargoService,\n    public dialog: MatDialog,\n    private translate: TranslateService) {\n    this.get()\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n    this.translate.onLangChange.subscribe(() => {\n      this.get()\n    });\n  }\n  loaded:boolean=false\n  get(){\n    this.service.getAll().subscribe(res=>{\n      res.forEach(p=>{\n        p.office.officeNameTranlates.forEach(pt=>{\n          if(pt.languageId==this.languageService.select.id){\n            p.office.officeNameTranlates[0]=pt\n          }\n        })\n      })\n      this.Data=res;\n      this.dataSource = new MatTableDataSource(this.Data);\n      setTimeout(() => {\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      });\n\n      this.loaded=true\n    })\n  }\n\n  openDialogEdit(row): void {\n    if(row.status.name == 'InAnbar'){\n      const dialogRefEdit = this.dialog.open(WaitingInvoiceDialogComponent, {\n        width: '1000px',\n        data: {row:row}\n      });\n      dialogRefEdit.afterClosed().subscribe(() => {\n        this.get()\n      });\n    }\n  }\n  count:number=0;\n  totalPrice:number=0;\n  balanceDisplay:boolean=false\n  log(){\n\n    setTimeout(()=>  {\n      this.totalPrice=0\n      this.count=0\n      this.selection.selected.forEach(p=> {\n        if(!p.paymentStatus){\n          this.count++\n          this.totalPrice+=p.camexPrice;\n          this.balanceService.status(p.id)\n        }\n      })\n      this.balanceDisplay=true;\n        if(this.count==0){\n          this.balanceDisplay=false;\n        }\n      }\n\n    )\n\n  }\n  pay(total){\n    const bodyBalance = new FormData();\n    bodyBalance.append(\"total\",total)\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, send it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.balanceService.remove(bodyBalance).subscribe(\n          (res) => {\n            this.selection.selected.forEach(p=> {\n              if(!p.paymentStatus){\n                this.balanceService.status(p.id).subscribe(()=>{\n                  Swal.fire(\n                    'Successed!',\n                    'Your statement sent.',\n                    'success')\n                    this.get()\n                    this.callParent()\n                  this.count=0\n                  this.totalPrice=0\n                  this.selection.isSelected(null);\n                  this.balanceDisplay=false\n                  },\n                  error => {\n                    error.error.messages.forEach(e => {\n                      if (e.lang_id == this.languageService.select.id) {\n                        alertify.error(e.messageLang);\n                      }\n                    })\n               })\n              }\n            })\n\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n\n  }\n\n\n\n}\n","<div *ngIf=\"loaded\" class=\"w-100 d-flex flex-wrap\">\n  <div class=\"col-12\" id=\"in-anbar\">\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\n      <span class=\"m-0 pl-3 title\">{{'Parcels'|translate}}</span>\n    </div>\n    <div class=\"style content-panel mt-4\">\n      <div class=\"table-angular \">\n        <mat-form-field>\n          <mat-label class=\"filter\">{{'Filter'|translate}}</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n        <div class=\"scroll\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <!-- Checkbox Column -->\n            <ng-container matColumnDef=\"select\" >\n              <th mat-header-cell  *matHeaderCellDef >\n                <mat-checkbox style=\"padding-left: 21px;\"  color=\"primary\" (change)=\"$event ? masterToggle() : null\"\n                              [checked]=\"selection.hasValue() && isAllSelected()\"\n                               (change)=\"log()\"\n                              [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                              [aria-label]=\"checkboxLabel()\">\n                </mat-checkbox>\n              </th>\n              <td mat-cell style=\"padding-left: 12px;\"    *matCellDef=\"let row\">\n                <mat-checkbox *ngIf=\"!row.paymentStatus\"  color=\"primary\" (click)=\"$event.stopPropagation()\"\n                                (change)=\"$event ? selection.toggle(row) : null\"\n                                (change)=\"log()\"\n                              [checked]=\"selection.isSelected(row)\"\n                              [aria-label]=\"checkboxLabel(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"track\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Track'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'SiteNMag'|translate}}</th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"weight\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Weight'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.weight}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Status'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\">\n              <span *ngIf=\"row.status.name=='InAnbar' else else1\"> {{'InAnbar'|translate}}</span>\n                <ng-template #else1>\n                  <span *ngIf=\"row.status.name=='InСustoms' else else2\"> {{'InСustoms'|translate}}</span>\n                  <ng-template #else2>\n                    <span *ngIf=\"row.status.name=='InOffice' else else3\"> {{'InOffice'|translate}}</span>\n                    <ng-template #else3>\n                      <span > {{'InWay'|translate}}</span>\n                    </ng-template>\n                  </ng-template>\n                </ng-template>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CamexPrice'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.camexPrice}} USD</td>\n            </ng-container>\n            <ng-container matColumnDef=\"office\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Destination'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.office.officeNameTranlates[0].name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Actions'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" class=\"\">\n                <div class=\"buttons\"  *ngIf=\"row.status.name == 'InAnbar'\">\n                  <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\"  colspan=\"12\"> {{'DataNotFound'|translate}}</td>\n            </tr>\n          </table>\n        </div>\n        <div *ngIf=\"balanceDisplay\" class=\" mt-3 pr-2 pl-2 foot-price d-flex justify-content-between align-items-center\">\n            <span class=\"m-0 pl-3 \">{{\"count\"|translate}}\n              {{this.count}}\n            </span>\n          <div class=\"d-flex\">\n            <div class=\"mr-4 d-flex justify-content-between align-items-center\">\n              <i class=\"fad fa-wallet mr-2\" style=\"font-size: 20px;color: #2F6BB7\"></i>\n              {{this.totalPrice}} $\n            </div>\n            <button mat-raised-button (click)=\"pay(this.totalPrice)\">{{'BalancePay'|translate}}</button>\n          </div>\n        </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Order} from '../../Core/models/Order';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {OrderAdminService} from '../../Core/services/orderAdmin/order-admin.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {UserOrderService} from '../../Core/services/Admin/userOrder/user-order.service';\nimport {OrderInfoComponent} from '../dialogs/order/order-info/order-info.component';\nimport {AddToAnbarComponent} from '../dialogs/cargo/add-to-anbar/add-to-anbar.component';\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-order-processed',\n  templateUrl: './order-processed.component.html',\n  styleUrls: ['./order-processed.component.scss'],\n  encapsulation:ViewEncapsulation.None\n\n})\nexport class OrderProcessedComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Order>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Order[];\n  displayedColumns: string[] = ['name','url','total','isActived','actions'];\n  constructor(public service:OrderAdminService,\n              public dialog: MatDialog,\n              private languageService:LanguagesService,\n              private serviceOrder:UserOrderService) {\n\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  get(){\n    this.service.get(\"Processed\").subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() => {\n          this.dataSource.paginator = this.paginator\n          this.dataSource.sort = this.sort;\n        }\n      )\n\n    })\n  }\n  openDialogInfo(row): void {\n    this.dialog.open(OrderInfoComponent, {\n      width: '1050px',\n      data: {row:row}\n    });\n  }\n\n  refuse(id,receiptId,orderId){\n    const body = new FormData();\n    body.append(\"id\",id)\n    body.append(\"receiptId\",receiptId)\n\n    const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",orderId)\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Rəd Et!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Rəd edildi!',\n          '',\n          'success'\n        )\n        this.serviceOrder.refuse(body).subscribe(\n          ()=> {\n            this.serviceOrder.refuseOrder(bodyOrder).subscribe(\n              ()=> {\n                this.get();\n              },\n              error => {\n                error.error.messages.forEach(e=>{\n                  if(e.lang_id==this.languageService.select.id){\n                    alertify.error(e.messageLang);\n                  }\n                })\n              })\n          },\n          error => {\n            error.error.messages.forEach(e=>{\n              if(e.lang_id==this.languageService.select.id){\n                alertify.error(e.messageLang);\n              }\n            })\n          })\n      }\n    })\n  }\n  openDialogAdd(row){\n    const dialogRefCreate = this.dialog.open(AddToAnbarComponent, {\n      width: '500px',\n      data: row\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout>\n  <div *ngIf=\"loaded else elseblock\" id=\"orders\">\n    <app-title-admin [title]=\"'İstifadəçinin İşlənən Sifarişləri'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">İstifadəçinin İşlənən Sifarişləri</span>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular \">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div>\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Saytın \\ Maqazanın adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"url\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Url </th>\n                <td mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\" target=\"_blank\">Məhsulun linki</a></td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Ümumi məbləğ</th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.receipt.value}} {{row.country.wallet}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.status.name == 'Processed'; else elseblock\" class=\"badge badge-success\">İşlənildi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Prosesdə</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-raised-button color=\"primary\" class=\"mr-2\"  (click)=\"openDialogAdd(row)\">Anbara Əlavə et</button>\n                    <button mat-raised-button color=\"warn\" class=\"mr-2\"  (click)=\"refuse(row.userId,row.receiptId, row.id)\">Rəd et</button>\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogInfo(row)\" > <mat-icon style=\"font-size: 26px \">info</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock></ng-template>\n</app-layout>\n\n\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {DescriptionsService} from '../../Core/services/descriptions/descriptions.service';\ndeclare let alertify:any;\n@Component({\n  selector: 'app-bio',\n  templateUrl: './bio.component.html',\n  styleUrls: ['./bio.component.scss']\n})\nexport class BioComponent implements OnInit {\n  form:FormGroup\n  fileAttr = 'Şəkil seç';\n  fileAttr2 = 'Şəkil seç';\n  fileToUpload:File\n  fileToUpload2:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n  @ViewChild('fileInput2') fileInput2: ElementRef;\n  data:any\n  constructor(\n    private languageService:LanguagesService,\n    private service:DescriptionsService\n  ) {\n    this.get()\n  }\n\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  public errorHandling = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  get(){\n    this.service.getBio().subscribe((res)=>{\n      this.data=res[0]\n\n      this.form= new FormGroup({\n        PageTitle: new FormControl(this.data.pageTitle, [\n          Validators.required,\n        ]),\n        CallCenter: new FormControl(this.data.callCenter, [\n          Validators.required,\n        ]),\n        ShortDescEng: new FormControl(this.data.shortDescEng, [\n          Validators.required,\n        ]),\n        ShortDescRus: new FormControl(this.data.shortDescRus, [\n          Validators.required,\n        ]),\n        ShortDescAz: new FormControl(this.data.shortDescAz, [\n          Validators.required,\n        ]),\n        SliderTitleEng: new FormControl(this.data.sliderTitleEng, [\n          Validators.required,\n        ]),\n        SliderTitleRus: new FormControl(this.data.sliderTitleRus, [\n          Validators.required,\n        ]),\n        SliderTitleAz: new FormControl(this.data.sliderTitleAz, [\n          Validators.required,\n        ]),\n        FileInput: new FormControl('', [\n        ]),\n        FileInput2: new FormControl('', [\n        ]),\n      })\n      this.loaded=true\n\n    })\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  uploadFileEvt2(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr2 = '';\n      this.fileAttr2 = imgFile.target.files[0].name\n\n      this.fileToUpload2= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput2.nativeElement.value = \"\";\n    } else {\n      this.fileAttr2 = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    if(this.fileToUpload2 == undefined){\n      body.append(\"Photo2\",null)\n    }\n    else{\n      body.append(\"Photo2\",this.fileToUpload2,this.fileToUpload2.name)\n    }\n    body.append(\"PageTitle\",this.form.controls[\"PageTitle\"].value.trim())\n    body.append(\"CallCenter\",this.form.controls[\"CallCenter\"].value.trim())\n    body.append(\"ShortDescEng\",this.form.controls[\"ShortDescEng\"].value.trim())\n    body.append(\"ShortDescRus\",this.form.controls[\"ShortDescRus\"].value.trim())\n    body.append(\"ShortDescAz\",this.form.controls[\"ShortDescAz\"].value.trim())\n    body.append(\"SliderTitleEng\",this.form.controls[\"SliderTitleEng\"].value.trim())\n    body.append(\"SliderTitleRus\",this.form.controls[\"SliderTitleRus\"].value.trim())\n    body.append(\"SliderTitleAz\",this.form.controls[\"SliderTitleAz\"].value.trim())\n    body.append(\"id\",this.data.id.toString())\n    this.service.updateBio(body).subscribe(\n      ()=> {\n        alertify.success(\"Yeniləndi!\");\n        this.get()\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/bio/${serverPath}`;\n  }\n}\n","<app-layout>\n  <div id=\"countries\">\n    <app-title-admin [title]=\"'Bio'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Bio</span>\n      </div>\n    </div>\n\n    <div class=\"margin\" *ngIf=\"loaded\">\n      <div class=\"content\">\n        <form [formGroup]=\"form\"  novalidate (ngSubmit)=\"submit()\">\n          <div mat-dialog-content >\n            <div class=\"d-flex flex-wrap\">\n              <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n                <div class=\"w-100\">\n                  <div class=\"d-flex flex-wrap w-100\">\n                    <div class=\"col-12\">\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Saytın Title-lı</mat-label>\n                        <input type=\"text\" matInput formControlName=\"PageTitle\">\n                        <mat-error  *ngIf=\"errorHandling('PageTitle','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Telefon nömrəsi</mat-label>\n                        <input type=\"text\" matInput formControlName=\"CallCenter\">\n                        <mat-error  *ngIf=\"errorHandling('CallCenter','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Footer tesviri İnglis dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"ShortDescEng\" >\n                        <mat-error  *ngIf=\"errorHandling('ShortDescEng','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Footer tesviri Rus dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"ShortDescRus\" >\n                        <mat-error  *ngIf=\"errorHandling('ShortDescRus','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Footer tesviri Azərbaycan dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"ShortDescAz\" >\n                        <mat-error  *ngIf=\"errorHandling('ShortDescAz','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Slider title-lı İnglis dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"SliderTitleEng\" >\n                        <mat-error  *ngIf=\"errorHandling('SliderTitleEng','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Slider title-lı Rus dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"SliderTitleRus\" >\n                        <mat-error  *ngIf=\"errorHandling('SliderTitleRus','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n\n                      <mat-form-field class=\"w-100\" appearance=\"fill\">\n                        <mat-label class=\"text-capitalize\">Slider title-lı Azərbaycan dilində</mat-label>\n                        <input type=\"text\" matInput formControlName=\"SliderTitleAz\" >\n                        <mat-error  *ngIf=\"errorHandling('SliderTitleAz','required')\" [innerHTML]=\"'Required' | translate \">\n                        </mat-error>\n                      </mat-form-field>\n\n                      <div class=\"w-100 \" id=\"fileInput\">\n                        <div style=\"width: 200px;\" class=\"mb-3\">\n                          <img [src]=\"createImgPath(this.data.logoNavbar)\" width=\"100%\">\n                        </div>\n                        <mat-form-field>\n                          <mat-label class=\"text-capitalize\">Navbar logosu</mat-label>\n                          <div class=\"d-flex justify-content-between\">\n                            <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                            <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                              Seç\n                            </button>\n                            <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                                   accept=\"image/*\" />\n                          </div>\n                          <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                          </mat-error>\n                        </mat-form-field>\n                        <div style=\"width: 200px;\" class=\"mb-3\">\n                          <img [src]=\"createImgPath(this.data.logoFooter)\" width=\"100%\">\n                        </div>\n                        <mat-form-field>\n                          <mat-label class=\"text-capitalize\">Footer Logosu</mat-label>\n                          <div class=\"d-flex justify-content-between\">\n                            <input matInput [value]=\"fileAttr2\" readonly name=\"name\" />\n                            <button mat-raised-button type=\"button\"  (click)=\"fileInput2.click()\">\n                              Seç\n                            </button>\n                            <input type=\"file\"  hidden #fileInput2 formControlName=\"FileInput2\"  (change)=\"uploadFileEvt2($event)\" name=\"uploadFile2\"\n                                   accept=\"image/*\" />\n                          </div>\n                          <mat-error  *ngIf=\"errorHandling('FileInput2','required')\" [innerHTML]=\"'Required' | translate \">\n                          </mat-error>\n                        </mat-form-field>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div mat-dialog-actions class=\"col-12 d-flex justify-content-end\">\n            <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!form.valid\">Yenilə</button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const fader =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({ opacity: 0 }),\r\n\r\n      // animation and styles at end of transition\r\n      animate('.3s', style({ opacity: 1 })),\r\n    ])\r\n  ]);\r\n/*\r\ntrigger('fadeInAnimation', [\r\n\r\n  // route 'enter' transition\r\n  transition(':enter', [\r\n\r\n    // css styles at start of transition\r\n\r\n  ]),\r\n]);\r\n*/\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CourierService} from '../../../../Core/services/Admin/courier/courier.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-courier-create',\n  templateUrl: './courier-create.component.html',\n  styleUrls: ['./courier-create.component.scss']\n})\nexport class CourierCreateComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CourierCreateComponent>,\n    private languageService:LanguagesService,\n    private service:CourierService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Price: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      IsActived: new FormControl(false ),\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    body.append(\"Price\",this.createForm.controls[\"Price\"].value)\n    const CourierTranslates= [\n      {\n        Name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Name:this.createForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Kuryer servisi yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Qiymət</mat-label>\n                <input type=\"number\" matInput formControlName=\"Price\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\" >\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rayonların adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\" >\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Cargo} from '../../models/Cargo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CargoService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  getEnded():Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}Ended`);\n  }\n  get(str):Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}Cargo/${str}`);\n  }\n  getUserId(str,id):Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}Cargo/${str}/${id}`);\n  }\n  getWithId(id):Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}UserStatements/${id}`);\n  }\n  getWithParcelId(id):Observable<Cargo>{\n    return this.http.get<Cargo>(`${this.global.path}Cargo/info/${id}`);\n  }\n  create(body){\n    return this.http.post(`${this.global.path}Cargo`,body);\n  }\n  getInvoice():Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}WaitingInvoice`);\n  }\n  updateInvoice(body){\n    return this.http.put(`${this.global.path}WaitingInvoice/${body.get(\"id\")}`,body);\n  }\n  getAll():Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}InAnbar`);\n  }\n  updateInAnbar(body){\n    return this.http.put(`${this.global.path}Cargo/${body.get(\"id\")}`,body);\n  }\n/*\n  delete(id){\n    return this.http.delete(`${this.global.path}Cargo/${id}`);\n  }*/\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n  path:string=\"https://localhost:44387/api/\";\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CourierLocation} from '../../../models/CourierLocation';\nimport {Service} from '../../../models/Service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<Service[]>{\n    return this.http.get<Service[]>(`${this.global.path}Service`);\n  }\n  getActive():Observable<Service[]>{\n    return this.http.get<Service[]>(`${this.global.path}Service/active`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}Service`,body);\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}Service/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Service/${id}`);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {Flight} from '../../Core/models/Flight';\nimport {FlightService} from '../../Core/services/Admin/flight/flight.service';\nimport {UpdateFlightComponent} from '../dialogs/flight/update-flight/update-flight.component';\nimport {CreateFlightComponent} from '../dialogs/flight/create-flight/create-flight.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-flight',\n  templateUrl: './flight.component.html',\n  styleUrls: ['./flight.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class FlightComponent implements OnInit {\n  dataSource: MatTableDataSource<Flight>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  flights:Flight[];\n  displayedColumns: string[] = ['from','to','landingDate' ,'isActived','actions'];\n  constructor(public service:FlightService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n      this.flights=res;\n      this.dataSource = new MatTableDataSource( this.flights);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  openDialogEdit(row): void {\n\n    const dialogRefEdit = this.dialog.open(UpdateFlightComponent, {\n      width: '550px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CreateFlightComponent, {\n      width: '550px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'Reslər'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Reslər</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"from\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Hardan </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.from}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"to\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Hara </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.to}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"landingDate\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Eniş tarixi </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.landingDate | date:'yyyy-MM-dd'}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport { OfficeService } from 'src/app/Core/services/Admin/office/office.service';\ndeclare let alertify:any;\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-create-office',\n  templateUrl: './create-office.component.html',\n  styleUrls: ['./create-office.component.scss']\n})\nexport class CreateOfficeComponent implements OnInit {\n\n  createForm:FormGroup\n  public Editor = ClassicEditor\n  constructor(\n    public dialogRef: MatDialogRef<CreateOfficeComponent>,\n    private languageService:LanguagesService,\n    private service:OfficeService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      PriceValue: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      PhoneNumber: new FormControl('994', [\n        Validators.required,\n      ]),\n      Url: new FormControl('', [\n        Validators.required,\n      ]),\n      Email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      Email2: new FormControl('', [\n        Validators.email,\n      ]),\n      AddressRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      AddressEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      AddressAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      WorkTimeRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      WorkTimeEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      WorkTimeAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(false ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      PriceValue:this.createForm.controls[\"PriceValue\"].value,\n      PhoneNumber:this.createForm.controls[\"PhoneNumber\"].value,\n      Email:this.createForm.controls[\"Email\"].value,\n      Email2:this.createForm.controls[\"Email2\"].value,\n      IsActived:this.createForm.controls[\"IsActived\"].value,\n      Url:this.createForm.controls[\"Url\"].value,\n      OfficeNameTranlates: [\n        {\n          name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n          address:this.createForm.controls[\"AddressEnglish\"].value.trim(),\n          workTime:this.createForm.controls[\"WorkTimeEnglish\"].value,\n          languageId:1\n        },\n        {\n          name:this.createForm.controls[\"NameRussia\"].value.trim(),\n          address:this.createForm.controls[\"AddressRussia\"].value.trim(),\n          workTime:this.createForm.controls[\"WorkTimeRussia\"].value,\n          languageId:2\n        },\n        {\n          name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n          address:this.createForm.controls[\"AddressAzerbaijan\"].value.trim(),\n          workTime:this.createForm.controls[\"WorkTimeAzerbaijan\"].value,\n          languageId:3\n        }\n      ],\n    }\n    this.service.createOffice(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Ofis yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  >\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\" >\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Dəyəri</mat-label>\n                <input type=\"number\" matInput formControlName=\"PriceValue\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('PriceValue','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('PriceValue','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Əlagə nömrəsi</mat-label>\n                <input type=\"text\" matInput formControlName=\"PhoneNumber\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Google xəritədə location linki</mat-label>\n                <input type=\"text\" matInput formControlName=\"Url\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Url','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"Email\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\n                  {{'EmailInCorrect' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rezerv Email </mat-label>\n                <input type=\"text\" matInput formControlName=\"Email2\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Email2','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Email2','email') && !errorHandling('Email2','required')\">\n                  {{'EmailInCorrect' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('AddressRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('AddressEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('AddressAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import {Injectable, OnDestroy} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {GlobalService} from '../global/global.service';\r\nimport { delay, finalize, map, tap} from 'rxjs/operators';\r\nimport {BehaviorSubject, of, Subscription} from 'rxjs';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {Router} from '@angular/router';\r\nimport {ApplicationUser} from '../../models/ApplicationUser';\r\n\r\ninterface LoginResult {\r\n  username: string;\r\n  role: string;\r\n  originalUserName: string;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService implements OnDestroy{\r\n  private readonly path:string;\r\n  private timer: Subscription;\r\n  private _user = new BehaviorSubject<ApplicationUser>(null);\r\n  end:boolean=false\r\n  user$: Observable<ApplicationUser> = this._user.asObservable();\r\n\r\n  private storageEventListener(event: StorageEvent) {\r\n    if (event.storageArea === localStorage) {\r\n      if (event.key === 'logout-event') {\r\n        this.stopTokenTimer();\r\n        this._user.next(null);\r\n      }\r\n      if (event.key === 'login-event') {\r\n        this.stopTokenTimer();\r\n        this.http.get<LoginResult>(`${this.path}Auth/user`).subscribe((x) => {\r\n\r\n          this._user.next({\r\n            username: x.username,\r\n            role: x.role,\r\n            originalUserName: x.originalUserName,\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  constructor(private http:HttpClient,private global:GlobalService,private router: Router) {\r\n    this.path=global.path\r\n    window.addEventListener('storage', this.storageEventListener.bind(this));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    window.removeEventListener('storage', this.storageEventListener.bind(this));\r\n  }\r\n\r\n  login(body) {\r\n    return this.http\r\n      .post<LoginResult>(`${this.path}Auth/login`, body)\r\n      .pipe(\r\n        map((x) => {\r\n          this._user.next({\r\n            username: x.username,\r\n            role: x.role,\r\n            originalUserName: x.originalUserName,\r\n          });\r\n          this.setLocalStorage(x);\r\n          this.startTokenTimer();\r\n          this.end=true;\r\n          return x;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    this.http\r\n      .post<unknown>(`${this.path}Auth/logout`, {})\r\n      .pipe(\r\n        finalize(() => {\r\n          this.clearLocalStorage();\r\n          this._user.next(null);\r\n          this.stopTokenTimer();\r\n          this.end=false;\r\n          this.router.navigate(['login']);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  refreshToken() {\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    if (!refreshToken) {\r\n      this.clearLocalStorage();\r\n      return of(null);\r\n    }\r\n\r\n    return this.http\r\n      .post<LoginResult>(`${this.path}Auth/refresh-token`, { refreshToken })\r\n      .pipe(\r\n        map((x) => {\r\n          this._user.next({\r\n            username: x.username,\r\n            role: x.role,\r\n            originalUserName: x.originalUserName,\r\n          });\r\n          this.end=true;\r\n          this.setLocalStorage(x);\r\n          this.startTokenTimer();\r\n          return x;\r\n        })\r\n      );\r\n  }\r\n\r\n  setLocalStorage(x: LoginResult) {\r\n    localStorage.setItem('access_token', x.accessToken);\r\n    localStorage.setItem('refresh_token', x.refreshToken);\r\n    localStorage.setItem('login-event', 'login' + Math.random());\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.setItem('logout-event', 'logout' + Math.random());\r\n  }\r\n\r\n  private getTokenRemainingTime() {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    if (!accessToken) {\r\n      return 0;\r\n    }\r\n    const jwtToken = JSON.parse(atob(accessToken.split('.')[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    return expires.getTime() - Date.now();\r\n  }\r\n\r\n  private startTokenTimer() {\r\n    const timeout = this.getTokenRemainingTime();\r\n    this.timer = of(true)\r\n      .pipe(\r\n        delay(timeout),\r\n        tap(() => this.refreshToken().subscribe())\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  private stopTokenTimer() {\r\n    this.timer?.unsubscribe();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Order} from '../../models/Order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderAdminService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get(str):Observable<Order[]>{\n    return this.http.get<Order[]>(`${this.global.path}OrderAdmin/${str}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Shop} from '../../../models/Shop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopLinkService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get(id):Observable<Shop>{\n    return this.http.get<Shop>(`${this.global.path}Shop/${id}`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}ShopLink`,body);\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}ShopLink/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}ShopLink/${id}`);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ShopLinkService} from '../../../../Core/services/Admin/shop/shop-link.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-shop-link-update-dialog',\n  templateUrl: './shop-link-update-dialog.component.html',\n  styleUrls: ['./shop-link-update-dialog.component.scss']\n})\nexport class ShopLinkUpdateDialogComponent implements OnInit {\n  updateForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ShopLinkUpdateDialogComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:ShopLinkService\n  ) { }\n\n  ngOnInit(): void {\n    this.updateForm= new FormGroup({\n      Link: new FormControl(this.data.row.link, [\n        Validators.required,\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.updateForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Link\",this.updateForm.controls[\"Link\"].value.trim())\n    body.append(\"ShopId\",this.data.shopId.toString())\n    body.append(\"id\",this.data.row.id.toString())\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Link Yenilə</b>\n</h1>\n\n\n<form [formGroup]=\"updateForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Link</mat-label>\n                <input type=\"text\" matInput formControlName=\"Link\">\n                <mat-error  *ngIf=\"errorHandling('Link','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!updateForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BalanceService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  add(body){\n    return this.http.put(`${this.global.path}Balance/add`,body);\n  }\n  remove(body){\n    return this.http.put(`${this.global.path}Balance/remove`,body);\n  }\n  status(id){\n    return this.http.put(`${this.global.path}Balance/status/${id}`,'');\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {CountriesService} from '../Core/services/Admin/countries/countries.service';\r\nimport {CountryData} from '../Admin/countries-all/CountryData';\r\n\r\n@Component({\r\n  selector: 'app-tariffs',\r\n  templateUrl: './tariffs.component.html',\r\n  styleUrls: ['./tariffs.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class TariffsComponent implements OnInit {\r\n  countryTariffs:CountryData[]=[]\r\n  constructor(private service:CountriesService) { }\r\n  ngOnInit(): void {\r\n    this.get()\r\n  }\r\n  get(){\r\n    this.service.getWithTariffs().subscribe(res=>{\r\n      this.countryTariffs=res;\r\n    })\r\n  }\r\n  name:string=\"tarifler\"\r\n  bannerSrc:string=\"../../assets/image/banners/price-banner.jpg\";\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/countries/${serverPath}`;\r\n  }\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'tariffs' | translate\" [bannerSrc]=\"bannerSrc\" class=\"pb-5\"></app-banner>\r\n<section id=\"tariffs\">\r\n  <div class=\"container-fluid  pl-pr-10 pt-5\">\r\n    <div *ngFor=\"let countryTariff of countryTariffs\" class=\"pb-5 bg-color rounded\">\r\n      <p class=\"h2 text-uppercase d-flex align-items-center justify-content-center\">  <img [src]=\"createImgPath(countryTariff.image)\" class=\"mr-2\"  width=\"30\" height=\"30\" > {{countryTariff.name}}</p>\r\n      <mat-tab-group  mat-align-tabs=\"center\" >\r\n        <mat-tab *ngFor=\"let tariff of countryTariff.tariff\">\r\n          <ng-template mat-tab-label >{{countryTariff.name}}-{{tariff.to}}</ng-template>\r\n          <div class=\"d-flex flex-wrap  \">\r\n            <div class=\" col-lg-2 col-md-3 col-sm-6 col-12 text-center pt-2 mt-4 d-flex flex-wrap align-content-between\" *ngFor=\"let price of tariff.priceLists\">\r\n              <p class=\"col-12 pb-4\" *ngIf=\"price.max!=100 else elseblock\"> {{'from'|translate}} {{price.min}} {{'kg'|translate}}  {{price.max}} {{'kglast'|translate}}</p>\r\n              <ng-template #elseblock>\r\n                <p class=\"col-12 pb-4\"> {{price.min}} {{'above'|translate}}</p>\r\n              </ng-template>\r\n              <p class=\"h2 col-12\">{{price.price}}$</p>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import {Component, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {OrderDialogComponent} from '../dialogs/order-dialog/order-dialog.component';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\r\nimport {Order} from '../../Core/models/Order';\r\nimport {OrderService} from '../../Core/services/order/order.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  displayedColumns: string[] = ['name','url','total','IsActived'];\r\n  dataSource: MatTableDataSource<Order>\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  Data:Order[];\r\n  user_agreement:string;\r\n  user_agreementArr:any[]=[{\r\n    val:\"az\",\r\n    path:  \"../../assets/userAgreement/user_agreement_az.pdf\"\r\n  },{\r\n    val:\"ru\",\r\n    path:  \"../../assets/userAgreement/user_agreement_ru.pdf\"\r\n  },{\r\n    val:\"en\",\r\n    path:  \"../../assets/userAgreement/user_agreement_en.pdf\"\r\n  },\r\n  ]\r\n  @Output() event = new EventEmitter();\r\n  callParent(): void {\r\n    this.event.next();\r\n  }\r\n  constructor(public languageService:LanguagesService,public service:OrderService,public dialog: MatDialog, private translate: TranslateService,) {\r\n    this.get()\r\n\r\n    this.user_agreement=this.user_agreementArr.find(u=>u.val==languageService.selected).path\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  this.get()\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.user_agreement=this.user_agreementArr.find(u=>u.val==this.languageService.select.value).path\r\n    });\r\n  }\r\n  get(){\r\n  this.service.get().subscribe(res=>{\r\n      this.Data=res;\r\n      this.dataSource = new MatTableDataSource(this.Data);\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  })\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\nopenDialogCreate(): void {\r\n    const dialogRefCreate = this.dialog.open(OrderDialogComponent, {\r\n      width: '1000px',\r\n      data: this.user_agreement\r\n    });\r\n    dialogRefCreate.afterClosed().subscribe(() => {\r\n      this.get()\r\n      this.callParent()\r\n\r\n    });\r\n  }\r\n}\r\n","<div class=\"w-100 d-flex flex-wrap\" id=\"orders\">\r\n  <div class=\"col-12\">\r\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\r\n      <span class=\"m-0 pl-3 title\">{{'Orders'|translate}}</span>\r\n      <button mat-raised-button (click)=\"openDialogCreate()\"> {{'Order'|translate}}</button>\r\n    </div>\r\n    <div class=\"style content-tab mt-4\">\r\n    <div class=\"table-angular \">\r\n      <mat-form-field class=\"filter\">\r\n        <mat-label>{{'Filter'|translate}}</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n      </mat-form-field>\r\n      <div class=\"scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'SiteNMag'|translate}}</th>\r\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"IsActived\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Status'|translate}} </th>\r\n            <td mat-cell *matCellDef=\"let row\" >\r\n              <span *ngIf=\"row.status.name == 'Processed'; else elseblock\" class=\"badge badge-success\">{{'Processed'|translate}}</span>\r\n              <ng-template #elseblock >\r\n                <span class=\"badge badge-danger\">{{'InProcess'|translate}}</span>\r\n              </ng-template>\r\n            </td>\r\n\r\n\r\n          <ng-container matColumnDef=\"total\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TotalPrice'|translate}}</th>\r\n            <td mat-cell *matCellDef=\"let row\" > {{row.receipt.value}} {{row.country.wallet}}</td>\r\n          </ng-container>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"url\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Url'|translate}} </th>\r\n            <td mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\" target=\"_blank\">Mehsulun linki</a></td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          <!-- Row shown when there is no matching data. -->\r\n          <tr class=\"mat-row\" *matNoDataRow>\r\n            <td class=\"mat-cell\" colspan=\"4\">{{'DataNotFound'|translate}}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Office} from '../Core/models/Office';\r\nimport {CountriesService} from '../Core/services/Admin/countries/countries.service';\r\nimport {OfficeService} from '../Core/services/Admin/office/office.service';\r\nimport {CountryData} from '../Admin/countries-all/CountryData';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html',\r\n  styleUrls: ['./calculator.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalculatorComponent implements OnInit {\r\n  bannerSrc:string=\"../../assets/image/banners/calculators-banner.jpg\";\r\n\r\n  countries:CountryData[]\r\n  offices:Office[]\r\n  total=0;\r\n  Form:FormGroup\r\n  constructor(private serviceCountry:CountriesService,private serviceOffice:OfficeService,\r\n              private languageService:LanguagesService,\r\n              private translate: TranslateService,) {\r\n    this.Form= new FormGroup({\r\n      Country: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Office: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      LenghtUnit: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      WeightUnit: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n      Height: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Width: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Weight: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Lenght: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n    this.get()\r\n  }\r\n  get(){\r\n    this.serviceCountry.getWithTariffs().subscribe((res)=>{\r\n      this.countries=res;\r\n    })\r\n    this.serviceOffice.getOffices().subscribe((res)=>{\r\n      res.forEach(o=>{\r\n        o.officeNameTranlates.forEach(of=>{\r\n          if(of.languageId==this.languageService.select.id){\r\n            o.officeNameTranlates[0]=of;\r\n            this.offices=res;\r\n          }\r\n        })\r\n      })\r\n      this.offices=res;\r\n    })\r\n  }\r\n\r\n    calc(){\r\n      let cm = 100;\r\n      let price=0;\r\n      let offVal= this.offices.find(o=>o.id==this.Form.controls[\"Office\"].value).priceValue\r\n      let prices = this.countries.find(c=>c.id==this.Form.controls[\"Country\"].value).tariff.find(t=>t.to==\"Baku\").priceLists\r\n      let length = this.Form.controls[\"Lenght\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n      let width  = this.Form.controls[\"Width\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n      let height  = this.Form.controls[\"Height\"].value*this.Form.controls[\"LenghtUnit\"].value;\r\n      let weight = this.Form.controls[\"Weight\"].value*this.Form.controls[\"WeightUnit\"].value;\r\n      let weightResult = (length > cm || width > cm || height > cm) ? this.dimensionalWeight(width, length, height, weight) : weight;\r\n        if(weightResult !=0){\r\n          for (let i=0; i<prices.length;i++)\r\n          {\r\n            if(prices[i].max==100){\r\n              price=prices[i].price\r\n              price+=offVal\r\n              this.total = parseFloat((price* weightResult).toFixed(2));\r\n              break\r\n            }\r\n            if( prices[i].max>weightResult ){\r\n              price=prices[i].price\r\n              price+=offVal\r\n              this.total=parseFloat(price.toFixed(2))\r\n              break\r\n            }\r\n          }\r\n        }\r\n      else {\r\n        this.total = parseFloat(price.toFixed(2));\r\n      }\r\n    }\r\n   dimensionalWeight(width, length, height, weight) {\r\n    let dimensionalWeight = ((width * length * height) / 6000).toFixed(2);\r\n    if (parseFloat(dimensionalWeight) > parseFloat(weight)) {\r\n      return dimensionalWeight;\r\n    } else {\r\n      return weight;\r\n    }\r\n  }\r\n\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'calculator'|translate\" [bannerSrc]=\"bannerSrc\" ></app-banner>\r\n<section id=\"calculator\" class=\"pt-5\">\r\n  <form [formGroup]=\"Form\" novalidate>\r\n    <div class=\"container-fluid  pl-pr-10 pt-5\">\r\n      <div class=\"d-flex flex-wrap bg-color rounded\">\r\n        <div class=\"col-lg-4 col-md-4 col-sm-12 col-12 p-0 \">\r\n          <div class=\"approximate-price d-flex flex-column justify-content-center align-items-center rounded\">\r\n            <span>{{'Approximate'|translate}}</span>\r\n              <h4 class=\"cost\">{{total}} USD</h4>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-8 col-md-8 col-sm-12 col-12 p-0\">\r\n\r\n          <div class=\"box\">\r\n            <div class=\"row p-0 m-0\">\r\n              <mat-form-field appearance=\"fill\"  class=\"country\">\r\n                <mat-label>{{'country'|translate}}</mat-label>\r\n                <mat-select formControlName=\"Country\">\r\n                  <mat-option *ngFor=\"let country of countries\" [value]=\"country.id\"  class=\"text-capitalize\">\r\n                    {{country.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"fill\"  class=\"country\">\r\n                <mat-label>{{'issOffice'|translate}}</mat-label>\r\n                <mat-select formControlName=\"Office\">\r\n                  <mat-option *ngFor=\"let office of offices\" [value]=\"office.id\"  class=\"text-capitalize\">\r\n                    {{office.officeNameTranlates[0].name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <div class=\"col-lg-6 d-flex p-0 pr-lg-1 \">\r\n                <div class=\"col-12 p-0\">\r\n                  <mat-form-field appearance=\"fill\"  class=\"lenght\">\r\n                    <mat-label>{{'lengthUnit'|translate}}</mat-label>\r\n                    <mat-select formControlName=\"LenghtUnit\">\r\n                      <mat-option  value=\"1\"  class=\"text-capitalize\">\r\n                        {{'cmUnit'|translate}}\r\n                      </mat-option>\r\n                      <mat-option  value=\"2.54\"  class=\"text-capitalize\">\r\n                        {{'inUnit'|translate}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6 p-0 d-flex pl-lg-1\">\r\n                <div class=\"col-12 p-0 \">\r\n                  <mat-form-field appearance=\"fill\"  class=\"weight float-right\">\r\n                    <mat-label>{{'weightUnit'|translate}}</mat-label>\r\n                    <mat-select formControlName=\"WeightUnit\">\r\n                      <mat-option  value=\"1\"  class=\"text-capitalize\">\r\n                        {{'kgUnit'|translate}}\r\n                      </mat-option>\r\n                      <mat-option  value=\"0.453592\"  class=\"text-capitalize\">\r\n                        {{'lbUnit'|translate}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"items d-flex\">\r\n              <div class=\"col-3 p-0\">\r\n                <mat-form-field appearance=\"fill\">\r\n                  <mat-label>{{'Weight'|translate}}</mat-label>\r\n                  <input formControlName=\"Weight\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3 p-0\">\r\n                <mat-form-field appearance=\"fill\">\r\n                  <mat-label>{{'Length'|translate}}</mat-label>\r\n                  <input formControlName=\"Lenght\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3 p-0\">\r\n                <mat-form-field appearance=\"fill\">\r\n                  <mat-label>{{'Width'|translate}}</mat-label>\r\n                  <input formControlName=\"Width\" type=\"number\" min=\"0\" value=\"0\" matInput >\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3 p-0\">\r\n                <mat-form-field appearance=\"fill\">\r\n                  <mat-label>{{'Height'|translate}}</mat-label>\r\n                  <input formControlName=\"Height\" type=\"number\" min=\"0\" value=\"0\" matInput>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"bottom\">\r\n              <div class=\"row p-0\">\r\n                <div class=\"col-12\">\r\n                  <button mat-raised-button [disabled]=\"!Form.valid\" (click)=\"calc()\">{{'calcBtn'|translate}}</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</section>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {CourierService} from '../Core/services/Admin/courier/courier.service';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {CourierLocation} from '../Core/models/CourierLocation';\r\n\r\n@Component({\r\n  selector: 'app-courier',\r\n  templateUrl: './courier.component.html',\r\n  styleUrls: ['./courier.component.scss']\r\n})\r\nexport class CourierComponent implements OnInit {\r\n  courierData:CourierLocation[]\r\n  constructor(private service:CourierService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.courierTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.courierTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.courierData=res;\r\n    })\r\n  }\r\n  bannerSrc:string=\"../../assets/image/banners/about-banner.jpg\";\r\n\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'courier'|translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"courier\">\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 \">\r\n      <div class=\"d-flex flex-wrap\">\r\n        <div class=\"col-lg-6 col-md-6 col-sm-12 col-12 mb-5 \" *ngFor=\"let zone of courierData; let i = index\">\r\n           <div class=\"bg-color  rounded p-4\">\r\n               <h1>{{'Zone'|translate}} {{i+1}}</h1>\r\n               <p class=\"text-capitalize\">{{zone.courierTranslates[0].name}}</p>\r\n               <h2 class=\"font-weight-bold price\">{{zone.price}} AZN</h2>\r\n           </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Service} from '../Core/models/Service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {Shop} from '../Core/models/Shop';\r\nimport {ServiceService} from '../Core/services/Admin/service/service.service';\r\n\r\n@Component({\r\n  selector: 'app-service',\r\n  templateUrl: './service.component.html',\r\n  styleUrls: ['./service.component.scss']\r\n})\r\nexport class ServiceComponent implements OnInit {\r\n  services:Service[]=[]\r\n\r\n  bannerSrc:string=\"../../assets/image/banners/service-banner.jpg\";\r\n  constructor(public service:ServiceService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.serviceTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.serviceTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.services=res;\r\n    })\r\n  }\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/serviceIcon/${serverPath}`;\r\n  }\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'services'|translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"service\" class=\"pt-5 pb-4\">\r\n  <div class=\"container-fluid pl-pr-10 pt-2 pb-5\">\r\n    <div class=\"d-flex flex-wrap\">\r\n      <div class=\"col-12 bg-color d-flex flex-wrap p-0 align-items-center\" *ngFor=\"let service of services\">\r\n        <div class=\"col-xl-3 col-lg-4 col-md-5 col-sm-12 col-12 p-0 h-100\">\r\n          <div class=\"img-white w-100 col-12 p-4 d-flex align-content-center flex-wrap h-100\">\r\n            <div class=\"col-12 d-flex align-items-center justify-content-center pt-3 pb-4\"><img [src]=\"createImgPath(service.image)\" width=\"65\"  alt=\"\"></div>\r\n            <div class=\"col-12 text-center\"><h3><b>{{service.serviceTranslates[0].title}}</b></h3> </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-9 col-lg-8 col-md-7 col-sm-12 col-12 p-0\">\r\n          <div class=\"col-12 pt-5 pb-5 d-flex align-items-center \">\r\n            <p class=\"description\" [innerHTML]=\"service.serviceTranslates[0].description\">\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss']\r\n})\r\nexport class BannerComponent implements OnInit {\r\n  @Input() name:string;\r\n  @Input() bannerSrc:string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section id=\"banner\"  >\r\n  <div class=\"banner\" [ngStyle]=\"{'background-image':'url(' + bannerSrc + ')'}\">\r\n    <div class=\"container-fluid pl-pr-10 \">\r\n      <div class=\"title rounded\">\r\n        <a routerLink=\"/home\"><span>{{'HomePage' | translate}}</span></a>\r\n        <i class=\"fa fa-long-arrow-right\"></i>\r\n        <span>{{name}}</span>\r\n        <h2>{{name}}</h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CityService} from '../../../../Core/services/Admin/city/city.service';\nimport {ProductService} from '../../../../Core/services/Admin/product/product.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.scss']\n})\nexport class UpdateProductComponent implements OnInit {\n\n\n  UpdateForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<UpdateProductComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:ProductService\n  ) { }\n\n  ngOnInit(): void {\n    this.UpdateForm= new FormGroup({\n\n      NameEnglish: new FormControl(this.data.row.productTranslates[0].name, [\n        Validators.required,\n      ]),\n      NameRussia: new FormControl(this.data.row.productTranslates[1].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.row.productTranslates[2].name, [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(this.data.row.isActived ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.UpdateForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      id:this.data.row.id,\n      IsActived:this.UpdateForm.controls[\"IsActived\"].value,\n      ProductTranslates: [\n        {\n          id:this.data.row.productTranslates[0].id,\n          name:this.UpdateForm.controls[\"NameEnglish\"].value.trim(),\n          languageId:1\n        },\n        {\n          id:this.data.row.productTranslates[1].id,\n          name:this.UpdateForm.controls[\"NameRussia\"].value.trim(),\n          languageId:2\n        },\n        {\n          id:this.data.row.productTranslates[2].id,\n          name:this.UpdateForm.controls[\"NameAzerbaijan\"].value.trim(),\n          languageId:3\n        }\n      ],\n    }\n    this.service.updateProduct(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Məhsul yenilə</b>\n</h1>\n\n<form [formGroup]=\"UpdateForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!UpdateForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CountryData} from '../../../../Admin/countries-all/CountryData';\nimport {Shop} from '../../../models/Shop';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  get():Observable<Shop[]>{\n    return this.http.get<Shop[]>(`${this.global.path}Shop`);\n  }\n  getActive():Observable<Shop[]>{\n    return this.http.get<Shop[]>(`${this.global.path}Shop/active`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}Shop`,body );\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}Shop/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Shop/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Tariff} from '../../../../models/Tariff';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TariffService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  get(id):Observable<Tariff[]>{\n    return this.http.get<Tariff[]>(`${this.global.path}Tariff/${id}`);\n  }\n  getWithId(id):Observable<Tariff>{\n    return this.http.get<Tariff>(`${this.global.path}Tariff/withId/${id}`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}Tariff`,body );\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}Tariff/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Tariff/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {DescriptionsService} from '../../Core/services/descriptions/descriptions.service';\ndeclare let alertify:any\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  form:FormGroup\n  data:any\n  constructor(\n    private languageService:LanguagesService,\n    private service:DescriptionsService\n  ) {\n    this.get()\n  }\n\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n\n  public Editor = ClassicEditor;\n  public errorHandling = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  get(){\n    this.service.getAbout().subscribe((res)=>{\n      this.data=res[0]\n\n      this.form= new FormGroup({\n\n        DescRus: new FormControl(this.data.descRus, [\n          Validators.required,\n        ]),\n        DescEng: new FormControl(this.data.descEng, [\n          Validators.required,\n        ]),\n        DescAz: new FormControl(this.data.descAz, [\n          Validators.required,\n        ]),\n      })\n      this.loaded=true\n\n    })\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"DescEng\",this.form.controls[\"DescEng\"].value.trim())\n    body.append(\"DescRus\",this.form.controls[\"DescRus\"].value.trim())\n    body.append(\"DescAz\",this.form.controls[\"DescAz\"].value.trim())\n    body.append(\"id\",this.data.id.toString())\n    this.service.updateAboutt(body).subscribe(\n      ()=> {\n        alertify.success(\"Yeniləndi!\");\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<app-layout>\n  <div id=\"countries\">\n    <app-title-admin [title]=\"'Haqqımızda'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Haqqımızda</span>\n      </div>\n    </div>\n\n    <div class=\"margin\" *ngIf=\"loaded\">\n      <div class=\"content\">\n        <form [formGroup]=\"form\"  novalidate (ngSubmit)=\"submit()\">\n          <div mat-dialog-content >\n            <div class=\"d-flex flex-wrap\">\n              <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n                <div class=\"w-100\">\n                  <div class=\"d-flex flex-wrap w-100\">\n                    <div class=\"col-12\">\n                      <mat-label class=\"text-capitalize\">Haqqımızda Rus dilində </mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescRus\" data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n                      <mat-label class=\"text-capitalize\">Haqqımızda İnglis dilində</mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescEng\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n                      <mat-label class=\"text-capitalize\">Haqqımızda Azərbaycan dilində</mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescAz\" data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div mat-dialog-actions class=\"col-12 d-flex justify-content-end\">\n            <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!form.valid\">Yenilə</button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Office} from '../../../models/Office';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfficeService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  getOffices():Observable<Office[]>{\n    return this.http.get<Office[]>(`${this.global.path}Office`);\n  }\n  getActive():Observable<Office[]>{\n    return this.http.get<Office[]>(`${this.global.path}Office/active`);\n  }\n  createOffice(body){\n    return this.http.post(`${this.global.path}Office`,body);\n  }\n  updateOffice(body){\n    return this.http.put(`${this.global.path}Office/${body.id}`,body);\n  }\n  deleteOffice(id){\n    return this.http.delete(`${this.global.path}Office/${id}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FaqService} from '../../../../Core/services/Admin/faq/faq.service';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-faq-create',\n  templateUrl: './faq-create.component.html',\n  styleUrls: ['./faq-create.component.scss']\n})\nexport class FaqCreateComponent implements OnInit {\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<FaqCreateComponent>,\n    private languageService:LanguagesService,\n    private service:FaqService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(false ),\n      TitleRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const CourierTranslates= [\n      {\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>FAQ yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\">\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\">\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n                <mat-label class=\"text-capitalize\">Rus dilində təsvir</mat-label>\n                <br>\n                <br>\n                <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n                <br>\n                <mat-label class=\"text-capitalize\">İnglis dilində təsvir</mat-label>\n              <br>  <br>\n                <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində təsvir</mat-label>\n              <br>  <br>\n                <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import {LoginService} from './login/login.service';\r\n\r\nexport function appInitializer(authService: LoginService) {\r\n  return () =>\r\n    new Promise((resolve) => {\r\n      console.log('refresh token on app start up')\r\n      authService.refreshToken().subscribe().add(resolve);\r\n    });\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CountryInfoData} from './CountryInfoData';\nimport {CountryData} from '../CountryData';\nimport {ActivatedRoute} from '@angular/router';\nimport {CountryInfoCreateComponent} from '../../dialogs/country/country-info-create/country-info-create.component';\nimport {CountryInfoEditComponent} from '../../dialogs/country/country-info-edit/country-info-edit.component';\nimport {CountryInfoService} from '../../../Core/services/Admin/countries/country-info.service';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\n\ndeclare let alertify:any;\ndeclare let Swal:any\n@Component({\n  selector: 'app-country-info',\n  templateUrl: './country-info.component.html',\n  styleUrls: ['./country-info.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class CountryInfoComponent implements OnInit {\n\n  dataSource: MatTableDataSource<CountryInfoData>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  countryData:CountryData;\n  countryId:number;\n  displayedColumns: string[] = ['title','description','actions'];\n  constructor(public service:CountryInfoService,public dialog: MatDialog,private languageService:LanguagesService, private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.countryId=param.id\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.getCountry()\n  }\n  loaded:boolean=false\n  getCountry(){\n    this.service.getCountry(this.countryId).subscribe(res=>{\n      this.countryData=res;\n      this.dataSource = new MatTableDataSource(this.countryData.countryAddressDescriptions);\n      this.loaded=true\n      setTimeout(() =>{\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      } )\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CountryInfoCreateComponent, {\n      width: '450px',\n      data: this.countryId\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getCountry()\n    });\n  }\n  openDialogEdit(row): void {\n    const dialogRefCreate = this.dialog.open(CountryInfoEditComponent, {\n      width: '450px',\n      data: {row:row,countryId:this.countryId}\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getCountry()\n    });\n  }\n  deleteCountryInfo(id:number) {\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.deleteCountryInfo(id).subscribe(\n          () => {\n            this.getCountry()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/countries/${serverPath}`;\n  }\n}\n","<app-layout>\n  <div id=\"countriesInfo\" *ngIf=\"loaded else elseblock\">\n    <app-title-admin [title]=\"this.countryData.name\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3  title\">\n          <img [src]=\"createImgPath(this.countryData.image)\" width=\"24px\" class=\"mr-2\" alt=\"flag\">\n          {{this.countryData.name}}\n        </span>\n\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"title\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.title}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Təsviri </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.description}} </td>\n              </ng-container>\n\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                      <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                      <button mat-icon-button  color=\"warn\" (click)=\"deleteCountryInfo(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                    </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock>\n    <div class=\"p-5\">\n      <h1><b><i>Yüklənir...</i></b></h1>\n    </div>\n  </ng-template>\n</app-layout>\n\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../../global/global.service';\nimport {PriceList} from '../../../../models/PriceList';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PriceService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  get(id):Observable<PriceList[]>{\n    return this.http.get<PriceList[]>(`${this.global.path}Price/${id}`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}Price`,body );\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}Price/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Price/${id}`);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {FaqService} from '../../Core/services/Admin/faq/faq.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CountryData} from '../countries-all/CountryData';\nimport {FaqUpdateComponent} from '../dialogs/faq/faq-update/faq-update.component';\nimport {FaqCreateComponent} from '../dialogs/faq/faq-create/faq-create.component';\nimport {Service} from '../../Core/models/Service';\nimport {ServiceService} from '../../Core/services/Admin/service/service.service';\nimport {ServiceCreateComponent} from '../dialogs/service/service-create/service-create.component';\nimport {ServiceUpdateComponent} from '../dialogs/service/service-update/service-update.component';\ndeclare let Swal:any\ndeclare let alertify:any\n@Component({\n  selector: 'app-service-admin',\n  templateUrl: './service-admin.component.html',\n  styleUrls: ['./service-admin.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class ServiceAdminComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Service>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  services:Service[];\n  displayedColumns: string[] = ['name','isActived','actions'];\n  constructor(public service:ServiceService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.get()\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n      this.services=res;\n      this.dataSource = new MatTableDataSource( this.services);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n\n  openDialogEdit(row:CountryData): void {\n\n    const dialogRefEdit = this.dialog.open(ServiceUpdateComponent, {\n      width: '1050px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(ServiceCreateComponent, {\n      width: '1050px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n\n\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'Servislər'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\"> Servislər</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.serviceTranslates[2].title}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {CountryData} from '../../../Admin/countries-all/CountryData';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DescriptionsService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  getBio():Observable<any>{\n    return this.http.get<any>(`${this.global.path}Bio`);\n  }\n  updateBio(body:FormData){\n    return this.http.put(`${this.global.path}Bio/${body.get(\"id\")}`,body);\n  }\n  getAbout():Observable<any>{\n    return this.http.get<any>(`${this.global.path}About`);\n  }\n  updateAboutt(body:FormData){\n    return this.http.put(`${this.global.path}About/${body.get(\"id\")}`,body);\n  }\n  getContactDesc():Observable<any>{\n    return this.http.get<any>(`${this.global.path}ContactNotice`);\n  }\n  updateContactDesc(body:FormData){\n    return this.http.put(`${this.global.path}ContactNotice/${body.get(\"id\")}`,body);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {CountryData} from '../CountryData';\nimport {CountryInfoService} from '../../../Core/services/Admin/countries/country-info.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Tariff} from '../../../Core/models/Tariff';\nimport {TariffService} from '../../../Core/services/Admin/countries/tariff/tariff.service';\nimport {TariffCreateComponent} from '../../dialogs/country/tariff-create/tariff-create.component';\nimport {TariffUpdateComponent} from '../../dialogs/country/tariff-update/tariff-update.component';\n\ndeclare let alertify:any;\ndeclare let Swal:any\n@Component({\n  selector: 'app-country-tariff',\n  templateUrl: './country-tariff.component.html',\n  styleUrls: ['./country-tariff.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class CountryTariffComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Tariff>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Tariff[];\n  countryId:number;\n  country:CountryData\n  displayedColumns: string[] = ['to','actions'];\n  constructor(public serviceCountry:CountryInfoService,private service:TariffService,public dialog: MatDialog,private languageService:LanguagesService, private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.countryId=param.id\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.get()\n  }\n  loaded:boolean=false\n  get(){\n    this.serviceCountry.getCountry(this.countryId).subscribe(res=>{\n      this.country=res;\n    })\n    this.service.get(this.countryId).subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() =>{\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      } )\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(TariffCreateComponent, {\n      width: '450px',\n      data: this.countryId\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogEdit(row): void {\n    const dialogRefCreate = this.dialog.open(TariffUpdateComponent, {\n      width: '450px',\n      data: {row:row,countryId:this.countryId}\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  delete(id:number) {\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          () => {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/countries/${serverPath}`;\n  }\n\n}\n","<app-layout>\n  <div id=\"countriesInfo\" *ngIf=\"loaded else elseblock\">\n    <app-title-admin [title]=\"this.country.name\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3  title\">\n          <img [src]=\"createImgPath(this.country.image)\" width=\"24px\" class=\"mr-2\" alt=\"flag\">\n          {{this.country.name}}\n        </span>\n\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"to\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Hada </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.to}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-raised-button [routerLink]=\"'prices/'+row.id\" color=\"accent\">Tariflərin Qiymati</button>\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock>\n    <div class=\"p-5\">\n      <h1><b><i>Yüklənir...</i></b></h1>\n    </div>\n  </ng-template>\n</app-layout>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\nimport {TariffService} from '../../../../Core/services/Admin/countries/tariff/tariff.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-tariff-create',\n  templateUrl: './tariff-create.component.html',\n  styleUrls: ['./tariff-create.component.scss']\n})\nexport class TariffCreateComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<TariffCreateComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:number,\n    private service:TariffService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      To: new FormControl('', [\n        Validators.required,\n      ]),\n      Min: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Max: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/),\n        RxwebValidators.greaterThan({fieldName:'Min'})\n      ]),\n      Price: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"To\",this.createForm.controls[\"To\"].value.trim())\n    const PriceLists= [\n      {\n        Min:this.createForm.controls[\"Min\"].value,\n        Max:this.createForm.controls[\"Max\"].value,\n        Price:this.createForm.controls[\"Price\"].value,\n      }\n    ]\n    body.append(\"Prices\",JSON.stringify(PriceLists))\n    body.append(\"CountryId\",this.data.toString())\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Tarif yarad</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hara</mat-label>\n                <input type=\"text\" matInput formControlName=\"To\">\n                <mat-error  *ngIf=\"errorHandling('To','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Minimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Min\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Min','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Min','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <p>Maksimum dəyərə 100 yazsanız səyfədə \"yuxarı\" kimi görünəcək</p>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Maksimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Max\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Max','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','greaterThan')\" >\n                  Maksimum çəki minimum çəkidən cox olmalıdır\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Qiymət</mat-label>\n                <input type=\"number\" matInput formControlName=\"Price\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləgv et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Component } from '@angular/core';\r\nimport {RouterOutlet} from '@angular/router';\r\nimport {fader} from '../Animations/animation';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {LanguagesService} from './Core/services/lang/languages.service';\r\nimport {DescriptionsService} from './Core/services/descriptions/descriptions.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    fader\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  data:any\r\n  constructor(private titleService: Title,\r\n              private languageService:LanguagesService,\r\n              private service:DescriptionsService) {\r\n    this.get()\r\n  }\r\n  prepareRoute(outlet: RouterOutlet) {\r\n\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  }\r\n\r\n  get(){\r\n    this.service.getBio().subscribe((res)=>{\r\n      this.data=res[0]\r\n      this.titleService.setTitle(this.data.pageTitle)\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<html  [@routeAnimations]=\"prepareRoute(outlet)\" >\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</html>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\n\nimport {UserVM} from '../../models/UserVM';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  get():Observable<UserVM>{\n    return this.http.get<UserVM>(`${this.global.path}User`);\n  }\n  send(str){\n    return this.http.get<any>(`${this.global.path}User/forgot/${str}`);\n  }\n  restore(body){\n    return this.http.put<any>(`${this.global.path}Reset/${body.get(\"id\")}`,body);\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {CountryData} from '../../../countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-order-info',\n  templateUrl: './order-info.component.html',\n  styleUrls: ['./order-info.component.scss']\n})\nexport class OrderInfoComponent implements OnInit {\n\n  orderForm:FormGroup\n  wallet:CountryData[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any,\n              public dialogRef: MatDialogRef<OrderInfoComponent>) {\n      console.log(this.data)\n    this.orderForm= new FormGroup({\n      Name: new FormControl(this.data.row.name),\n      Wallet: new FormControl(this.data.row.country.wallet ),\n      CargoPrice: new FormControl(this.data.row.cargoPrice),\n      Url: new FormControl(this.data.row.url),\n      About: new FormControl(this.data.row.noticeProduct),\n      Price: new FormControl(this.data.row.price),\n      Count: new FormControl(this.data.row.count),\n      Note: new FormControl(this.data.row.notice),\n      PriceTotal: new FormControl(this.data.row.receipt.value ),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<h2 mat-dialog-title>İnformasiya</h2>\n<form [formGroup]=\"orderForm\" novalidate >\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Saytin / Maqazanın adı</mat-label>\n          <input type=\"text\"  readonly  matInput   formControlName=\"Name\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-3 col-md-12 ol-12 \">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Valyuta</mat-label>\n\n          <input type=\"text\"  readonly  matInput   formControlName=\"Wallet\">\n\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-3 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Ölkədaxili kargo Qiymeti</mat-label>\n          <input type=\"number\" matInput   readonly  formControlName=\"CargoPrice\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-7 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Link</mat-label>\n          <input type=\"text\" matInput placeholder=\"123123\"  readonly  formControlName=\"Url\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-5 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Sayı</mat-label>\n          <input type=\"number\" matInput readonly   formControlName=\"Count\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Açıqlama: məhsulun kodu, ölçü,rəng və s.</mat-label>\n          <textarea type=\"text\" matInput  placeholder=\"somt text\" rows=\"4\"  readonly   formControlName=\"About\">\n          </textarea>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-3 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Məbləğ</mat-label>\n          <input type=\"number\" matInput readonly   formControlName=\"Price\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Qeyd</mat-label>\n          <input type=\"text\" matInput  placeholder=\"somt text\"  readonly formControlName=\"Note\">\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-3 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Ümümi məbləğ</mat-label>\n          <input type=\"number\" matInput placeholder=\"123123 \" readonly formControlName=\"PriceTotal\">\n        </mat-form-field>\n      </div>\n\n    </div>\n\n  </mat-dialog-content>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-raised-button mat-dialog-close color=\"primary\">OK</button>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {CountriesService} from '../../Core/services/Admin/countries/countries.service';\r\nimport {CountryData} from '../../Admin/countries-all/CountryData';\r\nimport {UserVM} from '../../Core/models/UserVM';\r\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.scss']\r\n})\r\nexport class CountriesComponent implements OnInit {\r\n  imgFlagUsa:string=\"../../assets/image/AddressFlags/usa.jpg\"\r\n  flagIcon:string=\"../../assets/image/AddressFlags/usa-icon.png\"\r\n  countryData:CountryData[];\r\n  @Input() fullUser:UserVM;\r\n  constructor(public service:CountriesService, public languageService:LanguagesService,    private translate: TranslateService, ) {\r\n    this.get()\r\n  }\r\n  get() {\r\n    this.service.getCountriesActive().subscribe(res=>{\r\n      res.forEach(c=>{\r\n        c.noticeTranslate.forEach(ct=>{\r\n          if(ct.languageId==this.languageService.select.id){\r\n            c.noticeTranslate[0]=ct\r\n          }\r\n        })\r\n        c.countryAddressDescriptions.forEach(ad=>{\r\n          if(this.fullUser.privateCustomer==null){\r\n            var re = /@name@/gi;\r\n            ad.description= ad.description.replace(re,this.fullUser.businessCustomer.companyName)\r\n             re = /@surname@/gi;\r\n            ad.description= ad.description.replace(re,\"\")\r\n            re = /@id@/gi;\r\n            ad.description= ad.description.replace(re,\"A\"+this.getCamexId(this.fullUser.businessCustomer.camexId))\r\n          }\r\n          else if(this.fullUser.businessCustomer==null){\r\n            var re = /@name@/gi;\r\n            ad.description= ad.description.replace(re,this.fullUser.privateCustomer.name)\r\n            re = /@surname@/gi;\r\n            ad.description= ad.description.replace(re,this.fullUser.privateCustomer.surname)\r\n            re = /@id@/gi;\r\n            ad.description= ad.description.replace(re,\"A\"+this.getCamexId(this.fullUser.privateCustomer.camexId))\r\n          }\r\n        })\r\n      })\r\n      this.countryData=res;\r\n    })\r\n  }\r\n  getCamexId(val){\r\n    return String(val).padStart(5, '0')\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/countries/${serverPath}`;\r\n  }\r\n}\r\n","<div class=\"w-100 d-flex flex-wrap\" >\r\n  <div class=\"col-12 mb-4\">\r\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\r\n      <span class=\"m-0 pl-3 title\">{{'OutsideAddress'|translate}}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-12 mb-4\" id=\"inside-tab\">\r\n    <mat-tab-group class=\"style\">\r\n\r\n      <mat-tab *ngFor=\"let country of countryData\">\r\n        <ng-template mat-tab-label><img [src]=\"createImgPath(country.image)\" alt=\"icon\" width=\"20px\" class=\"mr-2 ml-2\"><span class=\"title-panel\"> {{country.name}}</span></ng-template>\r\n        <div class=\"w-100 d-flex flex-wrap\">\r\n          <div class=\"col-12 p-0\">\r\n            <div class=\"d-flex flex-wrap\">\r\n              <div class=\"col-lg-2 col-md-2 col-sm-4  p-0 flag\" [ngStyle]=\"{'background-image':'url('+createImgPath(country.bgImage)+')'}\">\r\n              </div>\r\n              <div class=\"col-lg-10 col-md-10 col-sm-8 py-3 px-4 countryAbout d-flex flex-wrap\">\r\n                <div class=\"col-lg-3 col-md-4 col-sm-6  col-12\" *ngFor=\"let desc of country.countryAddressDescriptions\">\r\n                  <span>{{desc.title}}:</span>\r\n                  <p style=\"font-size: 13px\"><b [innerHTML]=\"desc.description\"></b></p>\r\n                </div>\r\n\r\n                <div class=\"col-12 notice mt-4\" [innerHTML]=\"country.noticeTranslate[0].name\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import {Component,  OnInit,  ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {StatementDialogComponent} from '../dialogs/statement-dialog/statement-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {CountryData} from '../../Admin/countries-all/CountryData';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {StatementUpdateComponent} from '../dialogs/statement-update/statement-update.component';\r\nimport {StatementService} from '../../Core/services/statement/statement.service';\r\nimport {Cargo} from '../../Core/models/Cargo';\r\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\r\nimport { TranslateService} from '@ngx-translate/core';\r\ndeclare let alertify:any\r\ndeclare let Swal:any\r\n@Component({\r\n  selector: 'app-statements',\r\n  templateUrl: './statements.component.html',\r\n  styleUrls: ['./statements.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class StatementsComponent implements OnInit {\r\n  dataSource: MatTableDataSource<Cargo>\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  Data:Cargo[];\r\n\r\n  displayedColumns: string[] = ['track','name','product','actions'];\r\n  constructor(public languageService:LanguagesService,public service:StatementService,public dialog: MatDialog,private translate: TranslateService) {\r\n     this.get()\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe(() => {\r\n      this.get()\r\n    });\r\n  }\r\n  get(){\r\n    this.service.get().subscribe(res=>{\r\n      res.forEach(p=>{\r\n        p.product.productTranslates.forEach(pt=>{\r\n          if(pt.languageId==this.languageService.select.id){\r\n            p.product.productTranslates[0]=pt\r\n            this.Data=res;\r\n          }\r\n        })\r\n      })\r\n      this.dataSource = new MatTableDataSource(this.Data);\r\n      setTimeout(() => this.dataSource.paginator = this.paginator);\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  delete(id:number){\r\n    Swal.fire({\r\n      title: this.translate.instant(\"AreUSure\"),\r\n      text: this.translate.instant(\"Revert\"),\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText:this.translate.instant(\"YesDelete\"),\r\n      confirmButtonText: this.translate.instant(\"Cancel\")\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\r\n          this.translate.instant(\"Deleted\"),\r\n          this.translate.instant(\"SuccDeleted\"),\r\n          'success'\r\n        )\r\n        this.service.delete(id).subscribe(\r\n          ()=> {\r\n            this.get()\r\n          },\r\n          error => {\r\n            error.error.messages.forEach(e => {\r\n              if (e.lang_id == this.languageService.select.id) {\r\n                alertify.error(e.messageLang);\r\n              }\r\n            })\r\n          }\r\n        )\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  openDialogEdit(row:CountryData): void {\r\n    const dialogRefEdit = this.dialog.open(StatementUpdateComponent, {\r\n      width: '1000px',\r\n      data: {row:row}\r\n    });\r\n    dialogRefEdit.afterClosed().subscribe(() => {\r\n      this.get()\r\n    });\r\n  }\r\n  openDialogCreate(): void {\r\n    const dialogRefCreate = this.dialog.open(StatementDialogComponent, {\r\n      width: '1000px',\r\n    });\r\n    dialogRefCreate.afterClosed().subscribe(() => {\r\n      this.get()\r\n    });\r\n  }\r\n}\r\n","<div class=\"w-100 d-flex flex-wrap\">\r\n  <div class=\"col-12\" id=\"statements\">\r\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\r\n      <span class=\"m-0 pl-3 title\">{{'Statements'|translate}}</span>\r\n      <button mat-raised-button (click)=\"openDialogCreate()\">{{'CreateStatement'|translate}}</button>\r\n    </div>\r\n    <div class=\"style content-tab mt-4\">\r\n      <div class=\"table-angular \">\r\n        <mat-form-field class=\"filter\">\r\n          <mat-label>{{'Filter'|translate}}</mat-label>\r\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n        </mat-form-field>\r\n        <div class=\"scroll\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n            <ng-container matColumnDef=\"track\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Track'|translate}} </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"name\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'SiteNMag'|translate}} </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"product\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Product'|translate}} </th>\r\n              <td mat-cell *matCellDef=\"let row\" > {{row.product.productTranslates[0].name}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actions\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Actions'|translate}} </th>\r\n              <td mat-cell *matCellDef=\"let row\" class=\"\">\r\n                <div class=\"buttons\">\r\n                  <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\r\n                  <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\"  colspan=\"12\"> {{'DataNotFound'|translate}}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ServiceService} from '../../../../Core/services/Admin/service/service.service';\nimport {Service} from '../../../../Core/models/Service';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {NewsService} from '../../../../Core/services/Admin/news/news.service';\nimport {News} from '../../../../Core/models/News';\n@Component({\n  selector: 'app-update-news',\n  templateUrl: './update-news.component.html',\n  styleUrls: ['./update-news.component.scss']\n})\nexport class UpdateNewsComponent implements OnInit {\n  fileAttr = 'Şəkil seçin';\n  fileToUpload:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<UpdateNewsComponent>,\n    private languageService:LanguagesService,\n    private service:NewsService,\n    @Inject(MAT_DIALOG_DATA) public data:News\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(this.data.isActived ),\n      TitleRussia: new FormControl(this.data.newsTranslates[1].title, [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl(this.data.newsTranslates[0].title, [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl(this.data.newsTranslates[2].title, [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl(this.data.newsTranslates[1].description, [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl(this.data.newsTranslates[0].description, [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl(this.data.newsTranslates[2].description, [\n        Validators.required,\n      ]),\n      FileInput: new FormControl('', [\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    body.append(\"id\",this.data.id.toString())\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const CourierTranslates= [\n      {\n        Id:this.data.newsTranslates[0].id,\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.newsTranslates[1].id,\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.newsTranslates[2].id,\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Xəbər Yenilə</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Başlıq Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Təsvir Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Təsvir İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Təsvir Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Şəkil</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activatsiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FullPrivateUser} from '../../../Models/FullPrivateUser';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Data} from '../role-dialog/role-dialog.component';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FullBusinessUser} from '../../../Models/FullBusinessUser';\nimport {UsersService} from '../../../../Core/services/Admin/users/users.service';\n\n@Component({\n  selector: 'app-info-business-dialog',\n  templateUrl: './info-business-dialog.component.html',\n  styleUrls: ['./info-business-dialog.component.scss']\n})\nexport class InfoBusinessDialogComponent implements OnInit {\n\n  customer:FullBusinessUser\n  constructor(\n    public dialogRef: MatDialogRef<InfoBusinessDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:Data,\n    private service:UsersService,\n    private languageService:LanguagesService\n  ) {\n    this.getUserPrivate()\n  }\n\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  selectedGender:string=''\n  selectedCity:string\n  selectedOffice:string\n  getUserPrivate(){\n    this.service.getUserBusiness(this.data.id).subscribe(res=>{\n      this.customer=res;\n      res.user.city.cityNameTranslates.forEach(e=>{\n        if(e.languageId==this.languageService.select.id){\n          this.selectedCity=e.name\n        }\n      })\n      res.user.office.officeNameTranlates.forEach(e=>{\n        if(e.languageId==this.languageService.select.id){\n          this.selectedOffice=e.name\n        }\n      })\n\n      this.loaded=true;\n    })\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div *ngIf=\"loaded else elseblock\">\n  <h1 class=\"mb-2\" mat-dialog-title>\n    <b>İnformasiya</b>\n  </h1>\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <h4 class=\" pl-3 pt-4 pb-2 w-100 text-uppercase\"><b>{{'PersonalInfo' | translate }} </b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\n                <input type=\"email\" matInput [value]=\"customer.user.email\" disabled placeholder=\"camex.example@example.com\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'CompanyRegistrationNumber' | translate }}</mat-label>\n                <input type=\"number\" matInput [value]=\"customer.businessCustomer.companyRegistrationNumber\" disabled  placeholder=\"12345678\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'CompanyName' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.businessCustomer.companyName\" disabled placeholder=\"Seynur\" >\n              </mat-form-field>\n            </div>\n\n          </div>\n\n          <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\" >\n                <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\n                <mat-select value=\"selected\" disabled>\n                  <mat-option value=\"selected\" class=\"text-capitalize\" selected>\n                    {{selectedCity}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.user.address\" disabled placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\n                <input type=\"text\" [value]=\"customer.user.phoneNumber\" disabled matInput placeholder=\"559294860\" >\n              </mat-form-field>\n            </div>\n          </div>\n          <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\n                <mat-select  value=\"selected\" disabled>\n                  <mat-option  value=\"selected\" class=\"text-capitalize\">\n                    {{selectedOffice}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<ng-template #elseblock>\n  <h4><i><b>Loading....</b></i></h4>\n</ng-template>\n<div mat-dialog-actions class=\"w-100 justify-content-end\">\n  <button mat-button (click)=\"onNoClick()\" color=\"primary\">Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {FAQ} from '../../../models/FAQ';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaqService {\n\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<FAQ[]>{\n    return this.http.get<FAQ[]>(`${this.global.path}FAQ`);\n  }\n  getActive():Observable<FAQ[]>{\n    return this.http.get<FAQ[]>(`${this.global.path}FAQ/active`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}FAQ`,body);\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}FAQ/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}FAQ/${id}`);\n  }\n}\n","import {ShopLink} from './ShopLink';\r\nimport {ShopTranslate} from './ShopTranslate';\r\n\r\nexport class Shop {\r\n  id: number;\r\n  name: string;\r\n  shopLinks: ShopLink[];\r\n  shopTranslates:ShopTranslate[];\r\n  isActived:boolean\r\n}\r\n","import {Component,  OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ShopService} from '../../../../Core/services/Admin/shop/shop.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-shop-create-dialog',\n  templateUrl: './shop-create-dialog.component.html',\n  styleUrls: ['./shop-create-dialog.component.scss']\n})\nexport class ShopCreateDialogComponent implements OnInit {\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ShopCreateDialogComponent>,\n    private languageService:LanguagesService,\n    private service:ShopService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      IsActived: new FormControl(false ),\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const ShopTranslates= [\n      {\n        Name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Name:this.createForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(ShopTranslates))\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Mağaza yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n                <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                  Activasiya\n                </mat-checkbox>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Cargo} from '../../Core/models/Cargo';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\nimport {WaitingInvoiceDialogComponent} from '../dialogs/waiting-invoice-dialog/waiting-invoice-dialog.component';\n\n@Component({\n  selector: 'app-waiting-invoice',\n  templateUrl: './waiting-invoice.component.html',\n  styleUrls: ['./waiting-invoice.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class WaitingInvoiceComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Cargo>\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  Data:Cargo[];\n\n  displayedColumns: string[] = ['track','name','weight','price','office','actions'];\n  constructor(public languageService:LanguagesService,public service:CargoService,public dialog: MatDialog,private translate: TranslateService) {\n    this.get()\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n    this.translate.onLangChange.subscribe(() => {\n      this.get()\n    });\n  }\n  get(){\n    this.service.getInvoice().subscribe(res=>{\n      res.forEach(p=>{\n        p.office.officeNameTranlates.forEach(pt=>{\n          if(pt.languageId==this.languageService.select.id){\n            p.office.officeNameTranlates[0]=pt\n          }\n        })\n      })\n      this.Data=res;\n      this.dataSource = new MatTableDataSource(this.Data);\n      setTimeout(() =>{\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      });\n\n    })\n  }\n\n  openDialogEdit(row): void {\n    const dialogRefEdit = this.dialog.open(WaitingInvoiceDialogComponent, {\n      width: '1000px',\n      data: {row:row}\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<div class=\"w-100 d-flex flex-wrap\">\n  <div class=\"col-12\" id=\"waiting-invoice\">\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\n      <span class=\"m-0 pl-3 title\">{{'WaitingInvoice'|translate}}</span>\n    </div>\n    <div class=\"style ontent-tab mt-4\">\n      <div class=\"table-angular \">\n        <mat-form-field class=\"filter\">\n          <mat-label>{{'Filter'|translate}}</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n        <div class=\"scroll\">\n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"track\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Track'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'SiteNMag'|translate}}</th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"weight\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Weight'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.weight}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"price\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'CamexPrice'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.camexPrice}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"office\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Destination'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" > {{row.office.officeNameTranlates[0].name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Actions'|translate}} </th>\n              <td mat-cell *matCellDef=\"let row\" class=\"\">\n                <div class=\"buttons\">\n                  <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td class=\"mat-cell\"  colspan=\"12\"> {{'DataNotFound'|translate}}</td>\n            </tr>\n          </table>\n        </div>\n\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FaqService} from '../../../../Core/services/Admin/faq/faq.service';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {FAQ} from '../../../../Core/models/FAQ';\n@Component({\n  selector: 'app-faq-update',\n  templateUrl: './faq-update.component.html',\n  styleUrls: ['./faq-update.component.scss']\n})\nexport class FaqUpdateComponent implements OnInit {\n\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<FaqUpdateComponent>,\n    private languageService:LanguagesService,\n    private service:FaqService,\n    @Inject(MAT_DIALOG_DATA) public data:FAQ\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(this.data.isActived ),\n      TitleRussia: new FormControl(this.data.faqTranslates[1].title, [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl(this.data.faqTranslates[0].title, [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl(this.data.faqTranslates[2].title, [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl(this.data.faqTranslates[1].description, [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl(this.data.faqTranslates[0].description, [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl(this.data.faqTranslates[2].description, [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"id\",this.data.id.toString())\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const CourierTranslates= [\n      {\n        Id:this.data.faqTranslates[0].id,\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.faqTranslates[1].id,\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.faqTranslates[2].id,\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>FAQ Yenilə</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\">\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\">\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Rus dilində təsvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">İnglis dilində təsvir</mat-label>\n              <br>  <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">Azərbaycan dilində təsvir</mat-label>\n              <br>  <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {NewsService} from '../Core/services/Admin/news/news.service';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {LanguagesService} from '../Core/services/lang/languages.service';\nimport {News} from '../Core/models/News';\n\n@Component({\n  selector: 'app-news-details',\n  templateUrl: './news-details.component.html',\n  styleUrls: ['./news-details.component.scss']\n})\nexport class NewsDetailsComponent implements OnInit {\n  id:number;\n  news:News\n  constructor(private activatedRoute:ActivatedRoute, private service:NewsService,private translate: TranslateService,private languageService:LanguagesService) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.id=param.id\n    })\n    this.get()\n  }\n\n  ngOnInit(): void {\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.get()\n    });\n  }\n  get(){\n    this.service.getActiveWithId(this.id).subscribe(res=>{\n      res.newsTranslates.forEach(st=>{\n          if(st.languageId==this.languageService.select.id){\n            res.newsTranslates[0]=st\n          }\n        })\n      this.news=res;\n    })\n  }\n\n  bannerSrc:string=\"../../assets/image/banners/news-banner.png\";\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/news/${serverPath}`;\n  }\n}\n","<app-navbar>\n</app-navbar>\n<app-mobile-navbar>\n</app-mobile-navbar>\n<app-banner [name]=\"news.newsTranslates[0].title \" [bannerSrc]=\"bannerSrc\"></app-banner>\n<section id=\"news-page\" class=\"pt-5\">\n  <div class=\"container-fluid  pl-pr-10 pt-5 bg-color\">\n    <div class=\"w-100 pt-5\">\n\n    </div>\n      <div class=\"d-flex flex-wrap justify-content-center\">\n        <div class=\"col-lg-4 col-md-7 col-sm-9 col-12 mb-5\">\n          <img [src]=\"createImgPath(news.image)\"  width=\"100%\" alt=\"\">\n        </div>\n        <div class=\"col-lg-8 col-md-12 col-sm-12 col-12\" >\n          <h1><b>{{news.newsTranslates[0].title}}</b></h1>\n          <p class=\"mb-4\">  <i>{{  news.createdDate|date:'yyyy-MM-dd'}}</i></p>\n          <div [innerHTML]=\"news.newsTranslates[0].description\"></div>\n        </div>\n      </div>\n    <div class=\"w-100 pt-5\"></div>\n  </div>\n</section>\n<app-footer></app-footer>\n\n","import {Component, ElementRef, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\r\nimport {StatementService} from '../../../Core/services/statement/statement.service';\r\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\r\nimport {Product} from '../../../Core/models/Product';\r\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\r\nimport {CountryData} from '../../../Admin/countries-all/CountryData';\r\nimport {TranslateService} from '@ngx-translate/core';\r\ndeclare let alertify:any\r\n\r\n@Component({\r\n  selector: 'app-statement-dialog',\r\n  templateUrl: './statement-dialog.component.html',\r\n  styleUrls: ['./statement-dialog.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class StatementDialogComponent implements OnInit {\r\n  statementForm:FormGroup\r\n  fileAttr = this.translate.instant(\"ChooseFile\");\r\n  fileToUpload:File;\r\n  products:Product[];\r\n  wallet:CountryData[];\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  constructor( public dialogRef: MatDialogRef<StatementDialogComponent>,\r\n               private languageService:LanguagesService,\r\n               private service:StatementService,\r\n               private proService:ProductService,\r\n               private translate:TranslateService,\r\n               private cntService:CountriesService) {\r\n    this.getProduct();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.statementForm= new FormGroup({\r\n\r\n      Track: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      Name: new FormControl(\r\n        '', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      Product: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Price: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Count: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Wallet: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      TextArea: new FormControl('', [\r\n      ]),\r\n      FileInput: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n    })\r\n  }\r\n  getProduct(){\r\n    this.proService.getProductsActive().subscribe((res)=>\r\n      {\r\n        res.forEach(p=>{\r\n          p.productTranslates.forEach(pt=>{\r\n            if(pt.languageId==this.languageService.select.id){\r\n              p.productTranslates[0]=pt\r\n              this.products=res;\r\n            }\r\n          })\r\n        })\r\n      }\r\n    )\r\n    this.cntService.getCountriesActive().subscribe(\r\n      (res)=>{\r\n        this.wallet=res;\r\n    })\r\n}\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.statementForm.controls[control].hasError(error);\r\n  }\r\n  get Track() {\r\n    return this.statementForm.get('Track');\r\n  }\r\n  uploadFileEvt(imgFile: any) {\r\n    if (imgFile.target.files && imgFile.target.files[0]) {\r\n      this.fileAttr = '';\r\n      this.fileAttr = imgFile.target.files[0].name\r\n\r\n      this.fileToUpload= <File>imgFile.target.files[0]\r\n\r\n      // Reset if duplicate image uploaded again\r\n      this.fileInput.nativeElement.value = \"\";\r\n    } else {\r\n      this.fileAttr = 'Choose File';\r\n    }\r\n  }\r\n  submit(){\r\n    const body = new FormData();\r\n    body.append(\"Track\",this.statementForm.controls[\"Track\"].value.trim())\r\n    body.append(\"Name\",this.statementForm.controls[\"Name\"].value.trim())\r\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\r\n    body.append(\"Price\",this.statementForm.controls[\"Price\"].value)\r\n    body.append(\"CountryId\",this.statementForm.controls[\"Wallet\"].value)\r\n    body.append(\"Count\",this.statementForm.controls[\"Count\"].value)\r\n    body.append(\"Notice\",this.statementForm.controls[\"TextArea\"].value.trim())\r\n    body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\r\n    this.service.create(body).subscribe(\r\n      ()=> {\r\n        this.dialogRef.close();\r\n      },\r\n      error => {\r\n        error.error.messages.forEach(e => {\r\n          if (e.lang_id == this.languageService.select.id) {\r\n            alertify.error(e.messageLang);\r\n          }\r\n        })\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div id=\"dialog\">\r\n  <h2 mat-dialog-title>{{'CreateStatement'|translate}}</h2>\r\n  <form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n      <div class=\"d-flex flex-wrap w-100 mt-4\">\r\n        <div class=\"col-lg-6 col-md-6 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Track'|translate}}</mat-label>\r\n            <input type=\"text\" matInput  placeholder=\"17017X300339206441\" formControlName=\"Track\">\r\n            <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"Track.errors?.minlength \" >\r\n                {{'ErrorMin5'|translate}}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-6 col-md-6 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'SiteNMag'|translate}}</mat-label>\r\n            <input type=\"text\" matInput  placeholder=\"Pull And Bear\" formControlName=\"Name\">\r\n            <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Product'|translate}}</mat-label>\r\n            <mat-select  formControlName=\"Product\">\r\n              <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\r\n                {{item.productTranslates[0].name}}\r\n              </mat-option>\r\n\r\n            </mat-select>\r\n            <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-4 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'Price'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"1000 \" formControlName=\"Price\">\r\n            <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-4 col-12 \">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Wallet'|translate}}</mat-label>\r\n            <mat-select  formControlName=\"Wallet\">\r\n              <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\r\n                {{item.wallet}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-4 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'Count'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"5 \" formControlName=\"Count\">\r\n            <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Notice'|translate}}</mat-label>\r\n            <textarea type=\"text\" matInput  placeholder=\"Lorem inpus some text example\" rows=\"7\"  formControlName=\"TextArea\">\r\n          </textarea>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-12 \" id=\"fileInput\">\r\n          <mat-form-field>\r\n            <div class=\"d-flex justify-content-between\">\r\n              <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\r\n              <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\r\n                {{'Browse'|translate}}\r\n              </button>\r\n              <input type=\"file\" hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\" multiple=\"multiple\"\r\n                     accept=\"image/*\" />\r\n            </div>\r\n            <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\r\n      <button mat-button mat-dialog-close>{{'Cancel'|translate}}</button>\r\n      <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">{{'Save'|translate}}</button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FlightService} from '../../../../Core/services/Admin/flight/flight.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-create-flight',\n  templateUrl: './create-flight.component.html',\n  styleUrls: ['./create-flight.component.scss']\n})\nexport class CreateFlightComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CreateFlightComponent>,\n    private languageService:LanguagesService,\n    private service:FlightService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(false ),\n      From: new FormControl('', [\n        Validators.required,\n      ]),\n      To: new FormControl('', [\n        Validators.required,\n      ]),\n      LandingDate: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    body.append(\"From\",this.createForm.controls[\"From\"].value)\n    body.append(\"To\",this.createForm.controls[\"To\"].value)\n    body.append(\"LandingDate\", JSON.stringify(this.createForm.controls[\"LandingDate\"].value).split('\"').join(''))\n\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Reys yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hardan</mat-label>\n                <input type=\"text\" matInput formControlName=\"From\" >\n                <mat-error  *ngIf=\"errorHandling('From','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hara</mat-label>\n                <input type=\"text\" matInput formControlName=\"To\">\n                <mat-error  *ngIf=\"errorHandling('To','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\"  appearance=\"fill\">\n                <mat-label>Tarix seç</mat-label>\n                <input matInput [matDatepicker]=\"picker\" formControlName=\"LandingDate\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-error  *ngIf=\"errorHandling('LandingDate','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport {Routes,RouterModule} from '@angular/router'\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { MobileNavbarComponent } from './mobile-navbar/mobile-navbar.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {MatRadioModule} from \"@angular/material/radio\";\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule,} from '@angular/material/datepicker';\r\nimport {MatToolbarModule,} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { BannerComponent } from './banner/banner.component';\r\nimport { ShopingComponent } from './shoping/shoping.component';\r\nimport { TariffsComponent } from './tariffs/tariffs.component';\r\nimport { CalculatorComponent } from './calculator/calculator.component';\r\nimport { CourierComponent } from './courier/courier.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { ServiceComponent } from './service/service.component';\r\nimport { TitleComponent } from './title/title.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RestoreComponent } from './restore/restore.component';\r\nimport {RxReactiveFormsModule} from '@rxweb/reactive-form-validators';\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { MyprofileComponent } from './myprofile/myprofile.component';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { StatementDialogComponent } from './myprofile/dialogs/statement-dialog/statement-dialog.component';\r\nimport { ControlPanelComponent } from './myprofile/control-panel/control-panel.component';\r\nimport { CountriesComponent } from './myprofile/countries/countries.component';\r\nimport { StatementsComponent } from './myprofile/statements/statements.component';\r\nimport { OrdersComponent } from './myprofile/orders/orders.component';\r\nimport { OrderDialogComponent } from './myprofile/dialogs/order-dialog/order-dialog.component';\r\nimport {DashboardComponent} from './Admin/dashboard/dashboard.component';\r\nimport {LayoutComponent} from './Admin/layout/layout.component';\r\nimport { UsersComponent } from './Admin/users/users.component';\r\nimport { TitleAdminComponent } from './Admin/title-admin/title-admin.component';\r\nimport { RoleDialogComponent } from './Admin/dialogs/auth/role-dialog/role-dialog.component';\r\nimport { ResetDialogComponent } from './Admin/dialogs/auth/reset-dialog/reset-dialog.component';\r\nimport { InfoDialogComponent } from './Admin/dialogs/auth/info-dialog/info-dialog.component';\r\nimport { InfoBusinessDialogComponent } from './Admin/dialogs/auth/info-business-dialog/info-business-dialog.component';\r\nimport { CountriesAllComponent } from './Admin/countries-all/countries-all.component';\r\nimport { CountryEditDialogComponent } from './Admin/dialogs/country/country-edit-dialog/country-edit-dialog.component';\r\nimport { CountryCreateDialogComponent } from './Admin/dialogs/country/country-create-dialog/country-create-dialog.component';\r\nimport { CountryInfoComponent } from './Admin/countries-all/country-info/country-info.component';\r\nimport { CountryInfoCreateComponent } from './Admin/dialogs/country/country-info-create/country-info-create.component';\r\nimport { CountryInfoEditComponent } from './Admin/dialogs/country/country-info-edit/country-info-edit.component';\r\nimport { OfficesComponent } from './Admin/offices/offices.component';\r\nimport {AuthOutGuard} from './Core/guards/auth-out.guard';\r\nimport {AuthGuard} from './Core/guards/auth.guard';\r\nimport {CoreModule} from './Core/core.module';\r\nimport {LanguagesService} from './Core/services/lang/languages.service';\r\nimport {GlobalService} from './Core/services/global/global.service';\r\nimport { CreateOfficeComponent } from './Admin/dialogs/office/create-office/create-office.component';\r\nimport { UpdateOfficeComponent } from './Admin/dialogs/office/update-office/update-office.component';\r\nimport { CitiesComponent } from './Admin/cities/cities.component';\r\nimport { CreateCityComponent } from './Admin/dialogs/city/create-city/create-city.component';\r\nimport { UpdateCityComponent } from './Admin/dialogs/city/update-city/update-city.component';\r\nimport { ProductsComponent } from './Admin/products/products.component';\r\nimport { CreatePtoductComponent } from './Admin/dialogs/product/create-ptoduct/create-ptoduct.component';\r\nimport { UpdateProductComponent } from './Admin/dialogs/product/update-product/update-product.component';\r\nimport { StatementUpdateComponent } from './myprofile/dialogs/statement-update/statement-update.component';\r\nimport { BalanceDialogComponent } from './myprofile/dialogs/balance-dialog/balance-dialog.component';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { UserOrdersComponent } from './Admin/users/user-orders/user-orders.component';\r\nimport { OrderInfoComponent } from './Admin/dialogs/order/order-info/order-info.component';\r\nimport { AddToAnbarComponent } from './Admin/dialogs/cargo/add-to-anbar/add-to-anbar.component';\r\nimport { WaitingInvoiceComponent } from './myprofile/waiting-invoice/waiting-invoice.component';\r\nimport { WaitingInvoiceDialogComponent } from './myprofile/dialogs/waiting-invoice-dialog/waiting-invoice-dialog.component';\r\nimport { InAnbarComponent } from './myprofile/in-anbar/in-anbar.component';\r\nimport { OrderInProcessComponent } from './Admin/order-in-process/order-in-process.component';\r\nimport { OrderProcessedComponent } from './Admin/order-processed/order-processed.component';\r\nimport { StatemetsAdminComponent } from './Admin/statemets-admin/statemets-admin.component';\r\nimport { AddStatementToAnbarComponent } from './Admin/dialogs/add-statement-to-anbar/add-statement-to-anbar.component';\r\nimport { ParcelsComponent } from './Admin/parcels/parcels.component';\r\nimport { StatusChangeComponent } from './Admin/dialogs/status-change/status-change.component';\r\nimport { EndedComponent } from './myprofile/ended/ended.component';\r\nimport { AddToAnbarNewParcelComponent } from './Admin/dialogs/add-to-anbar-new-parcel/add-to-anbar-new-parcel.component';\r\nimport { ParcelInfoComponent } from './Admin/dialogs/parcel-info/parcel-info.component';\r\nimport { ShopsComponent } from './Admin/shops/shops.component';\r\nimport { ShopLinkComponent } from './Admin/shops/shop-link/shop-link.component';\r\nimport { ShopCreateDialogComponent } from './Admin/dialogs/shop/shop-create-dialog/shop-create-dialog.component';\r\nimport { ShopUpdateDialogComponent } from './Admin/dialogs/shop/shop-update-dialog/shop-update-dialog.component';\r\nimport { ShopLinkUpdateDialogComponent } from './Admin/dialogs/shop/shop-link-update-dialog/shop-link-update-dialog.component';\r\nimport { ShopLinkCreateDialogComponent } from './Admin/dialogs/shop/shop-link-create-dialog/shop-link-create-dialog.component';\r\nimport { CountryTariffComponent } from './Admin/countries-all/country-tariff/country-tariff.component';\r\nimport { TariffPricesComponent } from './Admin/countries-all/country-tariff/tariff-prices/tariff-prices.component';\r\nimport { TariffUpdateComponent } from './Admin/dialogs/country/tariff-update/tariff-update.component';\r\nimport { TariffCreateComponent } from './Admin/dialogs/country/tariff-create/tariff-create.component';\r\nimport { PriceCreateComponent } from './Admin/dialogs/country/price-create/price-create.component';\r\nimport { PriceUpdateComponent } from './Admin/dialogs/country/price-update/price-update.component';\r\nimport { CourierServiceComponent } from './Admin/courier-service/courier-service.component';\r\nimport { CourierCreateComponent } from './Admin/dialogs/courier/courier-create/courier-create.component';\r\nimport { CourierUpdateComponent } from './Admin/dialogs/courier/courier-update/courier-update.component';\r\nimport { FAQAdminComponent } from './Admin/faqadmin/faqadmin.component';\r\nimport { ServiceAdminComponent } from './Admin/service-admin/service-admin.component';\r\nimport { FaqCreateComponent } from './Admin/dialogs/faq/faq-create/faq-create.component';\r\nimport { FaqUpdateComponent } from './Admin/dialogs/faq/faq-update/faq-update.component';\r\nimport { ServiceUpdateComponent } from './Admin/dialogs/service/service-update/service-update.component';\r\nimport { ServiceCreateComponent } from './Admin/dialogs/service/service-create/service-create.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { MessagesComponent } from './Admin/messages/messages.component';\r\nimport { AnswerUserComponent } from './Admin/dialogs/answer-user/answer-user.component';\r\nimport { FlightComponent } from './Admin/flight/flight.component';\r\nimport { CreateNewsComponent } from './Admin/dialogs/news/create-news/create-news.component';\r\nimport { UpdateNewsComponent } from './Admin/dialogs/news/update-news/update-news.component';\r\nimport { UpdateFlightComponent } from './Admin/dialogs/flight/update-flight/update-flight.component';\r\nimport { CreateFlightComponent } from './Admin/dialogs/flight/create-flight/create-flight.component';\r\nimport {NewsAdminComponent} from './Admin/news-admin/news-admin.component';\r\nimport { NewsDetailsComponent } from './news-details/news-details.component';\r\nimport { UserSettingsComponent } from './myprofile/user-settings/user-settings.component';\r\nimport {AdminPanelGuard} from './Core/guards/admin-panel.guard';\r\nimport { RestorePasswordComponent } from './restore-password/restore-password.component';\r\nimport { BioComponent } from './Admin/bio/bio.component';\r\nimport { AboutUsComponent } from './Admin/about-us/about-us.component';\r\nimport { ContactNoticeComponent } from './Admin/contact-notice/contact-notice.component';\r\nconst routes: Routes=[\r\n  { path: \"home\", redirectTo:\"\" ,pathMatch:\"full\"},\r\n  { path:\"\",  component:HomeComponent },\r\n  { path:\"about\",  component:AboutComponent, data: {animation: 'About'}},\r\n  { path:\"shopping\",  component:ShopingComponent, data: {animation: 'Shopping'} },\r\n  { path:\"tariffs\",  component:TariffsComponent, data: {animation: 'Tariffs'} },\r\n  { path:\"calculator\",  component:CalculatorComponent, data: {animation: 'Calculator'} },\r\n  { path:\"courier\",  component:CourierComponent, data: {animation: 'Courier'} },\r\n  { path:\"news\",  component:NewsComponent, data: {animation: 'News'} },\r\n  { path:\"news/:id\",  component:NewsDetailsComponent, data: {animation: 'NewsDetails'} },\r\n  { path:\"faq\",  component:FaqComponent, data: {animation: 'Faq'} },\r\n  { path:\"contact\",  component:ContactComponent, data: {animation: 'Contact'} },\r\n  { path:\"services\",  component:ServiceComponent, data: {animation: 'Services'} },\r\n  { path:\"register\",  component:RegisterComponent, data: {animation: 'Register'}, canActivate: [AuthOutGuard] },\r\n  { path:\"login\",  component:LoginComponent, data: {animation: 'Login'},canActivate: [AuthOutGuard]},\r\n  { path:\"restore\",  component:RestoreComponent, data: {animation: 'Restore'}, canActivate: [AuthOutGuard] },\r\n  { path:\"restore/:id\",  component:RestorePasswordComponent, data: {animation: 'Restore'}, canActivate: [AuthOutGuard] },\r\n  { path:\"myprofile/statements\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile/control-panel\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile/countries\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile/orders\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile/waiting-invoice\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile/settings\", redirectTo:\"myprofile\" },\r\n  { path:\"myprofile\",  component:MyprofileComponent, data: {animation: 'Myprofile'}, canActivate: [AuthGuard] },\r\n  {\r\n    path: 'admin',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UsersComponent,\r\n        data: {animation: 'admin'},\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n        data: {animation: 'dashboard'},\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: UsersComponent,\r\n        data: {animation: 'users'},\r\n      },\r\n      {\r\n        path: 'replies',\r\n        component: MessagesComponent,\r\n        data: {animation: 'replies'},\r\n      },\r\n      {\r\n        path: 'users/orders/:id',\r\n        component: UserOrdersComponent,\r\n        data: {animation: 'userId'},\r\n      },\r\n      {\r\n        path: 'order-in-process',\r\n        component: OrderInProcessComponent,\r\n        data: {animation: 'OrderInProcess'},\r\n      },\r\n      {\r\n        path: 'about-description',\r\n        component: AboutUsComponent,\r\n        data: {animation: 'aboutDescription'},\r\n      },\r\n      {\r\n        path: 'contact-notice',\r\n        component: ContactNoticeComponent,\r\n        data: {animation: 'contactNotice'},\r\n      },\r\n      {\r\n        path: 'bio',\r\n        component: BioComponent,\r\n        data: {animation: 'Bio'},\r\n      },\r\n      {\r\n        path: 'order-processed',\r\n        component: OrderProcessedComponent,\r\n        data: {animation: 'OrderProcessed'},\r\n      },\r\n      {\r\n        path: 'statements',\r\n        component: StatemetsAdminComponent,\r\n        data: {animation: 'Statements'},\r\n      },\r\n      {\r\n        path: 'users/statements/:id',\r\n        component: StatemetsAdminComponent,\r\n        data: {animation: 'Statements'},\r\n      },\r\n      {\r\n        path: 'parcels/InAnbar',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InAnbar',status:'InAnbar'},\r\n      },\r\n      {\r\n        path: 'parcels/InWay',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InWay',status:'InWay'},\r\n      },\r\n      {\r\n        path: 'parcels/InСustoms',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InСustoms',status:'InСustoms'},\r\n      },\r\n      {\r\n        path: 'parcels/InOffice',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InOffice',status:'InOffice'},\r\n      },\r\n      {\r\n        path: 'parcels/end',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'End',status:'End'},\r\n      },\r\n      {\r\n        path: 'parcels/InAnbar/:id',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InAnbar',status:'InAnbar'},\r\n      },\r\n      {\r\n        path: 'parcels/InWay/:id',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InWay',status:'InWay'},\r\n      },\r\n      {\r\n        path: 'parcels/InСustoms/:id',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InСustoms',status:'InСustoms'},\r\n      },\r\n      {\r\n        path: 'parcels/InOffice/:id',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'InOffice',status:'InOffice'},\r\n      },\r\n      {\r\n        path: 'parcels/end/:id',\r\n        component: ParcelsComponent,\r\n        data: {animation: 'End',status:'End'},\r\n      },\r\n      {\r\n        path: 'countries',\r\n        component: CountriesAllComponent,\r\n        data: {animation: 'countries'},\r\n      },\r\n      {\r\n        path: 'countries/:id',\r\n        component: CountryInfoComponent,\r\n        data: {animation: 'countriesId'},\r\n      },\r\n      {\r\n        path: 'countries/tariffs/:id',\r\n        component: CountryTariffComponent,\r\n        data: {animation: 'tariffsCountry'},\r\n      },\r\n      {\r\n        path: 'countries/tariffs/:id/prices/:id',\r\n        component: TariffPricesComponent,\r\n        data: {animation: 'tariffsPrices'},\r\n      },\r\n\r\n      {\r\n        path: 'offices',\r\n        component: OfficesComponent,\r\n        data: {animation: 'offices'},\r\n      },\r\n      {\r\n        path: 'shops',\r\n        component: ShopsComponent,\r\n        data: {animation: 'shops'},\r\n      },\r\n      {\r\n        path: 'shops/:id',\r\n        component: ShopLinkComponent,\r\n        data: {animation: 'shop-link'},\r\n      },\r\n      {\r\n        path: 'courier-service',\r\n        component: CourierServiceComponent,\r\n        data: {animation: 'CourierService'},\r\n      },\r\n      {\r\n        path: 'faq',\r\n        component: FAQAdminComponent,\r\n        data: {animation: 'faq'},\r\n      },\r\n      {\r\n        path: 'news',\r\n        component: NewsAdminComponent,\r\n        data: {animation: 'news'},\r\n      },\r\n      {\r\n        path: 'flights',\r\n        component: FlightComponent,\r\n        data: {animation: 'flights'},\r\n      },\r\n      {\r\n        path: 'service',\r\n        component: ServiceAdminComponent,\r\n        data: {animation: 'service'},\r\n      },\r\n      {\r\n        path: 'cities',\r\n        component: CitiesComponent,\r\n        data: {animation: 'cities'},\r\n      },\r\n      {\r\n        path: 'products',\r\n        component: ProductsComponent,\r\n        data: {animation: 'products'},\r\n      },\r\n      {\r\n        path: '**',\r\n        component: ErrorComponent,\r\n        data: {animation: 'errorr'},\r\n      },\r\n    ],\r\n    canActivate: [AdminPanelGuard],\r\n\r\n  },\r\n  { path:\"**\", component:ErrorComponent,data: {animation: 'Error'}}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ErrorComponent,\r\n    LoaderComponent,\r\n    AboutComponent,\r\n    NavbarComponent,\r\n    MobileNavbarComponent,\r\n    FooterComponent,\r\n    BannerComponent,\r\n    ShopingComponent,\r\n    TariffsComponent,\r\n    CalculatorComponent,\r\n    CourierComponent,\r\n    NewsComponent,\r\n    FaqComponent,\r\n    ContactComponent,\r\n    ServiceComponent,\r\n    TitleComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    RestoreComponent,\r\n    MyprofileComponent,\r\n    StatementDialogComponent,\r\n    ControlPanelComponent,\r\n    CountriesComponent,\r\n    StatementsComponent,\r\n    OrdersComponent,\r\n    OrderDialogComponent,\r\n    LayoutComponent,\r\n    DashboardComponent,\r\n    LayoutComponent,\r\n    UsersComponent,\r\n    TitleAdminComponent,\r\n    RoleDialogComponent,\r\n    ResetDialogComponent,\r\n    InfoDialogComponent,\r\n    InfoBusinessDialogComponent,\r\n    CountriesAllComponent,\r\n    CountryEditDialogComponent,\r\n    CountryCreateDialogComponent,\r\n    CountryInfoComponent,\r\n    CountryInfoCreateComponent,\r\n    CountryInfoEditComponent,\r\n    OfficesComponent,\r\n    CreateOfficeComponent,\r\n    UpdateOfficeComponent,\r\n    CitiesComponent,\r\n    CreateCityComponent,\r\n    UpdateCityComponent,\r\n    ProductsComponent,\r\n    CreatePtoductComponent,\r\n    UpdateProductComponent,\r\n    StatementUpdateComponent,\r\n    BalanceDialogComponent,\r\n    UserOrdersComponent,\r\n    OrderInfoComponent,\r\n    AddToAnbarComponent,\r\n    WaitingInvoiceComponent,\r\n    WaitingInvoiceDialogComponent,\r\n    InAnbarComponent,\r\n    OrderInProcessComponent,\r\n    OrderProcessedComponent,\r\n    StatemetsAdminComponent,\r\n    AddStatementToAnbarComponent,\r\n    ParcelsComponent,\r\n    StatusChangeComponent,\r\n    EndedComponent,\r\n    AddToAnbarNewParcelComponent,\r\n    ParcelInfoComponent,\r\n    ShopsComponent,\r\n    ShopLinkComponent,\r\n    ShopCreateDialogComponent,\r\n    ShopUpdateDialogComponent,\r\n    ShopLinkUpdateDialogComponent,\r\n    ShopLinkCreateDialogComponent,\r\n    CountryTariffComponent,\r\n    TariffPricesComponent,\r\n    TariffUpdateComponent,\r\n    TariffCreateComponent,\r\n    PriceCreateComponent,\r\n    PriceUpdateComponent,\r\n    CourierServiceComponent,\r\n    CourierCreateComponent,\r\n    CourierUpdateComponent,\r\n    FAQAdminComponent,\r\n    ServiceAdminComponent,\r\n    FaqCreateComponent,\r\n    FaqUpdateComponent,\r\n    ServiceUpdateComponent,\r\n    ServiceCreateComponent,\r\n    MessagesComponent,\r\n    AnswerUserComponent,\r\n    FlightComponent,\r\n    CreateNewsComponent,\r\n    UpdateNewsComponent,\r\n    UpdateFlightComponent,\r\n    CreateFlightComponent,\r\n    NewsAdminComponent,\r\n    NewsDetailsComponent,\r\n    UserSettingsComponent,\r\n    RestorePasswordComponent,\r\n    BioComponent,\r\n    AboutUsComponent,\r\n    ContactNoticeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(routes),\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    CarouselModule,\r\n    CoreModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    MatSidenavModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    RxReactiveFormsModule,\r\n    NgApexchartsModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatAutocompleteModule,\r\n    MatChipsModule,\r\n    MatMenuModule,\r\n    CKEditorModule\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    LayoutComponent\r\n  ],\r\n  providers: [\r\n    LanguagesService,\r\n    GlobalService,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatRadioModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatAutocompleteModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatMenuModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\nexport function httpTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {CountryData} from './CountryData';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CountryEditDialogComponent} from '../dialogs/country/country-edit-dialog/country-edit-dialog.component';\nimport {CountryCreateDialogComponent} from '../dialogs/country/country-create-dialog/country-create-dialog.component';\nimport {CountriesService} from '../../Core/services/Admin/countries/countries.service';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\ndeclare let alertify:any;\ndeclare let Swal:any;\n@Component({\n  selector: 'app-countries-all',\n  templateUrl: './countries-all.component.html',\n  styleUrls: ['./countries-all.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class CountriesAllComponent implements OnInit {\n  dataSource: MatTableDataSource<CountryData>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  countryData:CountryData[];\n  displayedColumns: string[] = ['image','name','wallet' ,'value' ,'isActived','actions'];\n  constructor(public service:CountriesService,public dialog: MatDialog,private languageService:LanguagesService) {\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  this.getCountries()\n  }\n  getCountries(){\n    this.service.getCountries().subscribe(res=>{\n      this.countryData=res;\n      this.dataSource = new MatTableDataSource(this.countryData);\n     setTimeout(()=>{\n       this.dataSource.paginator = this.paginator;\n       this.dataSource.sort = this.sort;\n     })\n    })\n  }\n  deleteCountry(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.deleteCountry(id).subscribe(\n          ()=> {\n            this.getCountries()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n\n  openDialogEditCountry(row:CountryData): void {\n    const dialogRefEdit = this.dialog.open(CountryEditDialogComponent, {\n      width: '450px',\n      data: {row:row}\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.getCountries()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CountryCreateDialogComponent, {\n      width: '450px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.getCountries()\n    });\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/countries/${serverPath}`;\n  }\n}\n","<app-layout>\n  <div id=\"countries\">\n    <app-title-admin [title]=\"'Ölkələr'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Ölkələr</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"image\"  sticky>\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Bayraq </th>\n                <td mat-cell *matCellDef=\"let row\">\n                  <img [src]=\"createImgPath(row.image)\" width=\"28px\" alt=\"\">\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"wallet\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Valyuta </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.wallet}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"value\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Dəyər </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.value}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyat </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEditCountry(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"deleteCountry(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\"  >\n                      <mat-icon style=\"font-size: 22px \">list</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" xPosition=\"before\" >\n                      <button  mat-menu-item   [routerLink]=\"row.id\" >\n                       <span>Detalları</span>\n                      </button>\n                      <button mat-menu-item [routerLink]=\"'tariffs/'+row.id\" >\n                        <span>Tarifləri</span>\n                      </button>\n                    </mat-menu>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır!</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {Status} from '../../../Core/models/Status';\nimport {StatusService} from '../../../Core/services/status/status.service';\ndeclare let alertify:any\n\n\n@Component({\n  selector: 'app-status-change',\n  templateUrl: './status-change.component.html',\n  styleUrls: ['./status-change.component.scss']\n})\nexport class StatusChangeComponent implements OnInit {\n\n  statementForm:FormGroup\n  status:Status[];\n\n  constructor( public dialogRef: MatDialogRef<StatusChangeComponent>,\n               private languageService:LanguagesService,\n               private service:StatusService,\n               @Inject(MAT_DIALOG_DATA) public data:any) {\n    this.get();\n  }\n\n  ngOnInit(): void {\n    this.statementForm= new FormGroup({\n\n      Status: new FormControl(this.data.status.id, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ])\n    })\n  }\n  get(){\n    this.service.get().subscribe((res)=>\n      {\n        this.status=res;\n      }\n    )\n\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n\n\n  submit(){\n    const body = new FormData();\n    body.append(\"id\",this.statementForm.controls[\"Status\"].value)\n    body.append(\"parcelId\",this.data.id)\n\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h2 mat-dialog-title>Statusu dəyiş</h2>\n<form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-12 \">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Status</mat-label>\n          <mat-select  formControlName=\"Status\">\n            <mat-option *ngFor=\"let item of status\" [value]=\"item.id\" class=\"text-capitalize\">\n              {{item.name}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Status','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Status','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n    <button mat-button mat-dialog-close>Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">Yadda saxla </button>\n  </mat-dialog-actions>\n</form>\n\n\n\n","import {APP_INITIALIZER, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {UnauthorizedInterceptor} from './interceptors/unauthorized.interceptor';\r\nimport {JwtInterceptor} from './interceptors/jwt.interceptor';\r\nimport {LoginService} from './services/login/login.service';\r\nimport {appInitializer} from './services/app-initializer';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: appInitializer,\r\n      multi: true,\r\n      deps: [LoginService],\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UnauthorizedInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\r\n    if (core) {\r\n      throw new Error('Core Module can only be imported to AppModule.');\r\n    }\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {CourierService} from '../../../Core/services/Admin/courier/courier.service';\nimport {MessageUser} from '../../../Core/models/MessageUser';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {MessageService} from '../../../Core/services/message/message.service';\n@Component({\n  selector: 'app-answer-user',\n  templateUrl: './answer-user.component.html',\n  styleUrls: ['./answer-user.component.scss']\n})\nexport class AnswerUserComponent implements OnInit {\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<AnswerUserComponent>,\n    private languageService:LanguagesService,\n    private service:MessageService,\n    @Inject(MAT_DIALOG_DATA) public data:MessageUser\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      Email: new FormControl(this.data.email, [\n        Validators.required,\n      ]),\n      Subject: new FormControl('', [\n        Validators.required,\n      ]),\n      Message: new FormControl('', [\n        Validators.required,\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Email\",this.data.email)\n    body.append(\"Subject\",this.createForm.controls[\"Subject\"].value)\n    body.append(\"Message\",this.createForm.controls[\"Message\"].value)\n    body.append(\"id\",this.data.id.toString())\n\n\n    this.service.send(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Cavab formu</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <h3 class=\"text-capitalize\">Adı: <b>{{this.data.fullname}}</b></h3>\n              <h4 class=\"text-capitalize\">Mobil nömrə: <b>+994{{this.data.phoneNumber}}</b></h4>\n              <h4 class=\"text-capitalize\">Camex Id: <b>{{this.data.camexId}}</b></h4>\n              <h4 class=\"text-capitalize\">Sual: <b>{{this.data.message}}</b></h4>\n\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"Email\" readonly >\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Mövzu</mat-label>\n                <input type=\"text\" matInput formControlName=\"Subject\" >\n                <mat-error  *ngIf=\"errorHandling('Subject','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-label class=\"text-capitalize\">Cavab</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"Message\" data=\"<p>Hello, world!</p>\"></ckeditor>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Cavablandır</button>\n  </div>\n\n</form>\n\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {DescriptionsService} from '../../Core/services/descriptions/descriptions.service';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-contact-notice',\n  templateUrl: './contact-notice.component.html',\n  styleUrls: ['./contact-notice.component.scss']\n})\nexport class ContactNoticeComponent implements OnInit {\n  form:FormGroup\n  data:any\n  public Editor = ClassicEditor;\n  constructor(\n    private languageService:LanguagesService,\n    private service:DescriptionsService\n  ) {\n    this.get()\n  }\n\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  public errorHandling = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  get(){\n    this.service.getContactDesc().subscribe((res)=>{\n      this.data=res[0]\n\n      this.form= new FormGroup({\n\n        DescRus: new FormControl(this.data.descRus, [\n          Validators.required,\n        ]),\n        DescEng: new FormControl(this.data.descEng, [\n          Validators.required,\n        ]),\n        DescAz: new FormControl(this.data.descAz, [\n          Validators.required,\n        ]),\n      })\n      this.loaded=true\n\n    })\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"DescEng\",this.form.controls[\"DescEng\"].value.trim())\n    body.append(\"DescRus\",this.form.controls[\"DescRus\"].value.trim())\n    body.append(\"DescAz\",this.form.controls[\"DescAz\"].value.trim())\n    body.append(\"id\",this.data.id.toString())\n    this.service.updateContactDesc(body).subscribe(\n      ()=> {\n        alertify.success(\"Yeniləndi!\");\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<app-layout>\n  <div id=\"countries\">\n    <app-title-admin [title]=\"'Əlagə bildirişi'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Əlagə bildirişi</span>\n      </div>\n    </div>\n\n    <div class=\"margin\" *ngIf=\"loaded\">\n      <div class=\"content\">\n        <form [formGroup]=\"form\"  novalidate (ngSubmit)=\"submit()\">\n          <div mat-dialog-content >\n            <div class=\"d-flex flex-wrap\">\n              <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n                <div class=\"w-100\">\n                  <div class=\"d-flex flex-wrap w-100\">\n                    <div class=\"col-12\">   <mat-label class=\"text-capitalize\"> Əlagə bildirişi Rus dilində</mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescRus\" data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n                      <mat-label class=\"text-capitalize\">Əlagə bildirişi İnglis dilində</mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescEng\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n                      <mat-label class=\"text-capitalize\">Əlagə bildirişi Azərbaycan dilində</mat-label>\n                      <br>\n                      <br>\n                      <ckeditor [editor]=\"Editor\" formControlName=\"DescAz\" data=\"<p>Hello, world!</p>\"></ckeditor>\n                      <br>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          <div mat-dialog-actions class=\"col-12 d-flex justify-content-end\">\n            <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!form.valid\">Yenilə</button>\n          </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {MessageUser} from '../../models/MessageUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  get():Observable<MessageUser[]>{\n    return this.http.get<MessageUser[]>(`${this.global.path}Messages`);\n  }\n\n  create(body){\n    return this.http.post(`${this.global.path}Messages/user`,body);\n  }\n  send(body){\n    return this.http.post(`${this.global.path}Messages/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Messages/${id}`);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\r\nimport {Office} from '../Core/models/Office';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {OfficeService} from '../Core/services/Admin/office/office.service';\r\nimport {MessageService} from '../Core/services/message/message.service';\r\nimport {DescriptionsService} from '../Core/services/descriptions/descriptions.service';\r\ndeclare let alertify:any\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  bannerSrc:string=\"../../assets/image/banners/contact-banner.png\";\r\n  offices:Office[];\r\n  form:FormGroup;\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  constructor(private service:OfficeService,\r\n              private serviceContact:DescriptionsService,\r\n              private serviceMessage:MessageService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.form= new FormGroup({\r\n      FullName: new FormControl(\r\n        '', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      Email : new FormControl('', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      PhoneNumber: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(9),\r\n        Validators.maxLength(9),\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      CamexId: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Description: new FormControl('', [\r\n        Validators.required,\r\n      ]),\r\n\r\n    })\r\n\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.form.controls[control].hasError(error);\r\n  }\r\n  get PhoneNumber() {\r\n    return this.form.get('PhoneNumber');\r\n  }\r\n  data:any\r\n  desc:string\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.officeNameTranlates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.officeNameTranlates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.offices=res;\r\n    })\r\n    this.serviceContact.getContactDesc().subscribe((res)=>{\r\n      this.data=res[0]\r\n      if(this.languageService.select.id==1){\r\n        this.desc=this.data.descEng\r\n      }\r\n      if(this.languageService.select.id==2){\r\n        this.desc=this.data.descRus\r\n      }\r\n      if(this.languageService.select.id==3){\r\n        this.desc=this.data.descAz\r\n      }\r\n    })\r\n  }\r\n  reset(){\r\n  }\r\n  submit() {\r\n    const body = new FormData();\r\n    body.append(\"Fullname\",this.form.controls[\"FullName\"].value)\r\n    body.append(\"Email\",this.form.controls[\"Email\"].value)\r\n    body.append(\"PhoneNumber\",this.form.controls[\"PhoneNumber\"].value)\r\n    body.append(\"CamexId\",this.form.controls[\"CamexId\"].value)\r\n    body.append(\"Message\",this.form.controls[\"Description\"].value)\r\n\r\n    this.serviceMessage.create(body).subscribe(\r\n      ()=> {\r\n        alertify.success(this.translate.instant(\"sended\"));\r\n        setTimeout(() => this.formGroupDirective.resetForm(), 0)\r\n      },\r\n      error => {\r\n        error.error.messages.forEach(e => {\r\n          if (e.lang_id == this.languageService.select.id) {\r\n            alertify.error(e.messageLang);\r\n          }\r\n        })\r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'contact'|translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"contact\" class=\"pt-5 pb-4\">\r\n  <div class=\"container-fluid pl-pr-10 pt-2 pb-5\">\r\n      <div class=\"d-flex flex-wrap \">\r\n        <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 p-0 mt-4\" *ngFor=\"let address of offices\">\r\n          <div class=\"p-4 m-3 bg-color description h-100 d-flex flex-wrap align-content-between rounded\">\r\n            <div class=\"col-12 p-0\">\r\n              <h2 class=\"title\"><b>{{address.officeNameTranlates[0].name}}</b></h2>\r\n              <div class=\"text-capitalize mb-2\"><i class=\"far fa-map-marker-alt\"></i> {{'address'|translate}} : <span class=\"sub\">{{address.officeNameTranlates[0].address}}</span></div>\r\n              <div class=\"text-capitalize mb-2\"><i class=\"far fa-calendar-alt\"></i> {{'WorkTime'|translate}} :<br> <p class=\"sub p-0 m-0 mt-1\" [innerHTML]=\"address.officeNameTranlates[0].workTime\" ></p></div>\r\n              <div class=\"text-capitalize mb-2\"><i class=\"far fa-mobile\"></i> {{'Phone'|translate}} : <span class=\"sub\">{{address.phoneNumber}}</span></div>\r\n              <div class=\"text-capitalize mb-2\"><i class=\"far fa-envelope\"></i> {{'Email'|translate}} : <br><div class=\"sub p-0 m-0 mt-1 w-100\" >{{address.email}} </div></div>\r\n              <div class=\"text-capitalize mb-2\" *ngIf=\"address.email2!=''\"><i class=\"far fa-envelope\"></i> {{'Email'|translate}} : <br><div class=\"sub p-0 m-0 mt-1 w-100\" >{{address.email2}} </div></div>\r\n            </div>\r\n            <div class=\"col-12 p-0\"><a href=\"{{address.url}}\" target=\"_blank\"><button mat-raised-button class=\"w-100\" >{{'CheckOnMap'|translate}}</button></a></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <div class=\"container-fluid pl-pr-10 pt-2 pb-3 \">\r\n    <form [formGroup]=\"form\" novalidate (ngSubmit)=\"submit()\">\r\n    <div class=\"bg-color p-xl-5 p-lg-5 p-md-4 p-sm-4 p-2 pt-4 pb-4 rounded\">\r\n      <div class=\"d-flex align-items-center pt-4 pb-4 pl-3 \"><h1 class=\"text-uppercase\"><b>{{'SendMessage'|translate}}</b></h1></div>\r\n      <div class=\"d-flex flex-wrap\">\r\n        <div class=\"col-xl-7 col-lg-7 col-md-12 col-sm-12 col-12 p-0 d-flex flex-wrap\">\r\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>{{'NameNSurname'|translate}}</mat-label>\r\n              <input type=\"text\" matInput placeholder=\"Seynur Mammadov\" formControlName=\"FullName\">\r\n              <mat-error  *ngIf=\"errorHandling('FullName','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>{{'Telephone'|translate}}</mat-label>\r\n              <span matPrefix>+994 &nbsp;</span>\r\n              <input type=\"text\" matInput placeholder=\"559294860\" formControlName=\"PhoneNumber\">\r\n              <mat-error  *ngIf=\"errorHandling('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n              <mat-error  *ngIf=\" PhoneNumber.errors?.minlength ||PhoneNumber.errors?.maxlength \" >\r\n                {{'PhoneNumberLength' | translate }}\r\n              </mat-error>\r\n              <mat-error  *ngIf=\"errorHandling('PhoneNumber','pattern') \" >\r\n                {{'NumberPattern' | translate }}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <mat-form-field class=\"w-100\">\r\n              <mat-label>{{'Email'|translate}}</mat-label>\r\n              <input type=\"email\" matInput formControlName=\"Email\" placeholder=\"camex.example@example.com\">\r\n              <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\r\n                {{'EmailInCorrect' | translate }}\r\n              </mat-error>\r\n              <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n            <mat-form-field class=\"w-100 \">\r\n              <mat-label>Camex Id</mat-label>\r\n              <input type=\"number\" matInput min=\"1\" formControlName=\"CamexId\" placeholder=\"A238743\">\r\n              <mat-error  *ngIf=\"errorHandling('CamexId','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n              <mat-error  *ngIf=\"errorHandling('CamexId','pattern') \" >\r\n                {{'NumberPattern' | translate }}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-5 col-lg-5 col-md-12 col-sm-12 col-12 text-area\">\r\n          <mat-form-field class=\"w-100 h-100\">\r\n            <mat-label>{{'DescribeYProbem'|translate}}</mat-label>\r\n            <textarea matInput placeholder=\"Your Message\" class=\"h-100\" formControlName=\"Description\"> </textarea>\r\n            <mat-error  *ngIf=\"errorHandling('Description','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-12 d-flex justify-content-end\">\r\n          <button mat-raised-button class=\"pt-1 pb-1 pr-5 pl-5 mt-5 col-xl-2 col-lg-2 col-md-12 col-sm-12 col-12\" [disabled]=\"!form.valid\" >{{'Send'|translate}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"container-fluid pl-pr-10 pt-2\">\r\n    <div class=\"bg-color p-4 pl-5 rounded\">\r\n      <div class=\"form-box\" [innerHTML]=\"this.desc\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n<!--\r\n<p><b>Təklif və şikayətlərinizlə əlaqədar olaraq müraciət edin:</b> <a href=\"mailto:qualitycontrol@camex.az\" style=\"color: red\"> qualitycontrol@camex.az</a></p>\r\n<p>Qeyd: həftəiçi 19:00-dan, şənbə günləri 16:00-dan sonra bağlamaların təhvil verilməsi üçün, daşınma haqqı mütləq şəkildə <span style=\"color:red\">ONLAYN</span> ödənilməlidir.</p>\r\n-->\r\n","export class Flight {\r\n  id: number;\r\n  from: string;\r\n  to: string;\r\n  landingDate: string;\r\n  isActived: boolean;\r\n  isDeleted: boolean;\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Tariff} from '../../../../Core/models/Tariff';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TariffService} from '../../../../Core/services/Admin/countries/tariff/tariff.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {PriceList} from '../../../../Core/models/PriceList';\nimport {PriceService} from '../../../../Core/services/Admin/countries/tariff/price.service';\nimport {PriceUpdateComponent} from '../../../dialogs/country/price-update/price-update.component';\nimport {PriceCreateComponent} from '../../../dialogs/country/price-create/price-create.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-tariff-prices',\n  templateUrl: './tariff-prices.component.html',\n  styleUrls: ['./tariff-prices.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class TariffPricesComponent implements OnInit {\n\n  dataSource: MatTableDataSource<PriceList>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:PriceList[];\n  tariffId:number;\n  tariff:Tariff\n  displayedColumns: string[] = ['min','max','price','actions'];\n  constructor(public serviceTariff:TariffService,private service:PriceService,public dialog: MatDialog,private languageService:LanguagesService, private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.tariffId=param.id\n\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.get()\n  }\n  loaded:boolean=false\n  get(){\n    this.serviceTariff.getWithId(this.tariffId).subscribe(res=>{\n      this.tariff=res;\n    })\n    this.service.get(this.tariffId).subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data);\n      this.loaded=true\n      setTimeout(() =>{\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      } )\n    })\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(PriceCreateComponent, {\n      width: '450px',\n      data: this.tariffId\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogEdit(row): void {\n    const dialogRefCreate = this.dialog.open(PriceUpdateComponent, {\n      width: '450px',\n      data: {row:row,tariffId:this.tariffId}\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  delete(id:number) {\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          () => {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n  }\n}\n","<app-layout>\n  <div id=\"countriesInfo\" *ngIf=\"loaded else elseblock\">\n    <app-title-admin [title]=\"this.tariff.to\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">\n          {{this.tariff.to}} qiymətləri\n        </span>\n        <button mat-raised-button (click)=\"openDialogCreate()\"> Yarad</button>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"min\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Minimum çəki </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.min}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"max\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Maksimum çəki </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.max}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"price\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Qiyməti </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.price}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock>\n    <div class=\"p-5\">\n      <h1><b><i>Yüklənir...</i></b></h1>\n    </div>\n  </ng-template>\n</app-layout>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Cargo} from '../../models/Cargo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatementService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<Cargo[]>{\n    return this.http.get<Cargo[]>(`${this.global.path}Statement`);\n  }\n  create(body){\n    return this.http.post(`${this.global.path}Statement`,body);\n  }\n  update(body){\n    return this.http.put(`${this.global.path}Statement/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}Statement/${id}`);\n  }\n}\n","import { Injectable  } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {GlobalService} from '../global/global.service';\r\nimport {UserNavVM} from '../../../navbar/models/UserNavVM';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {Languages} from '../../../navbar/models/languages';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n  constructor(private http:HttpClient, private  global:GlobalService) {\r\n  }\r\n\r\n  getUser():Observable<UserNavVM>{\r\n    return this.http.get<UserNavVM>(`${this.global.path}Navbar/get-user-info`);\r\n  }\r\n  getUserRole():Observable<any>{\r\n    return this.http.get(`${this.global.path}Auth/user`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {LoginService} from '../services/login/login.service';\nimport {map} from 'rxjs/operators';\nimport {NavigationService} from '../services/navigation/navigation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminPanelGuard implements CanActivate {\n  constructor(private router: Router, private authService: LoginService,private navigation:NavigationService) {}\n  roles:string[]\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n\n    return this.navigation.getUserRole().pipe(map(r=>{\n     if(r.roles.find(role=>role==\"MainAdmin\") || r.roles.find(role=>role==\"Admin\")||r.roles.find(role=>role==\"Moderator\")){\n      return true\n    }\n     else {\n       this.router.navigate(['login'], {\n         queryParams: { returnUrl: state.url },\n       });\n       return false;\n     }\n    }))\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Data} from '../role-dialog/role-dialog.component';\nimport {UsersService} from '../../../../Core/services/Admin/users/users.service';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\ndeclare let alertify:any;\n\n@Component({\n  selector: 'app-reset-dialog',\n  templateUrl: './reset-dialog.component.html',\n  styleUrls: ['./reset-dialog.component.scss']\n})\nexport class ResetDialogComponent implements OnInit {\n  resetForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ResetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:Data,\n    private service:UsersService,\n    private languageService:LanguagesService) { }\n\n  ngOnInit(): void {\n    this.resetForm= new FormGroup({\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n      ]),\n      CheckPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\n        RxwebValidators.compare({fieldName:'Password'})\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.resetForm.controls[control].hasError(error);\n  }\n  get Password() {\n    return this.resetForm.get('Password');\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  resetPassword(){\n    const body = {\n      \"Id\":this.data.id,\n      \"Password\":this.resetForm.controls['Password'].value.split(' ').join(''),\n    }\n    this.service.ResetPassword(body).subscribe(\n      ()=> {\n        alertify.success(\"Sıfırlandı!\");\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e=>{\n          if(e.lang_id==this.languageService.select.id){\n            alertify.error(e.messageLang);\n          }\n        })\n      })\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Şifrəni sıfırla</b>\n</h1>\n<form [formGroup]=\"resetForm\" novalidate (ngSubmit)=\"resetPassword()\">\n  <div mat-dialog-content>\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\n          <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\n          <mat-error  *ngIf=\"errorHandling('Password','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"Password.errors?.minlength \" >\n            {{'minLengthPass' | translate }}\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Password','pattern')\" >\n            {{'patternPass' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\n          <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\n          <mat-error  *ngIf=\"errorHandling('CheckPassword','compare')\" >\n            {{'comparePass' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button (click)=\"onNoClick()\" color=\"warn\">Ləğv Et</button>\n    <button mat-button [disabled]=\"!resetForm.valid\" color=\"primary\" cdkFocusInitial>Sıfırla</button>\n  </div>\n</form>\n","import {Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../../Core/models/Product';\nimport {CountryData} from '../../../countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ProductService} from '../../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../../Core/services/Admin/countries/countries.service';\nimport {CargoService} from '../../../../Core/services/cargo/cargo.service';\nimport {UserOrderService} from '../../../../Core/services/Admin/userOrder/user-order.service';\n\ndeclare let alertify:any\n@Component({\n  selector: 'app-add-to-anbar',\n  templateUrl: './add-to-anbar.component.html',\n  styleUrls: ['./add-to-anbar.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class AddToAnbarComponent implements OnInit {\n\n  statementForm:FormGroup\n  fileAttr = 'İnvoysu Seç';\n  fileToUpload:File;\n  products:Product[];\n  wallet:CountryData[];\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  constructor( public dialogRef: MatDialogRef<AddToAnbarComponent>,\n               private languageService:LanguagesService,\n               private service:CargoService,\n               private proService:ProductService,\n               private cntService:CountriesService,\n               public serviceOrder:UserOrderService,\n               @Inject(MAT_DIALOG_DATA) public data:any,) {\n    this.getProduct()\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.data)\n    this.statementForm= new FormGroup({\n\n      Track: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n      FileInput: new FormControl('', [\n        Validators.required,\n      ]),\n      Weight: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      CamexPrice: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Product: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n    })\n  }\n  getProduct(){\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        this.products=res;\n        })\n      this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'İnvoysu Seç';\n    }\n  }\n  submit(){\n\n    const body = new FormData();\n    body.append(\"Track\",this.statementForm.controls[\"Track\"].value.trim())\n    body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\n    body.append(\"CamexPrice\",this.statementForm.controls[\"CamexPrice\"].value)\n    body.append(\"Weight\",this.statementForm.controls[\"Weight\"].value)\n    body.append(\"Name\",this.data.name)\n    body.append(\"Price\",this.data.receipt.value)\n    body.append(\"Count\",this.data.count)\n    body.append(\"CountryId\",this.data.countryId)\n    body.append(\"Notice\",this.data.notice)\n    body.append(\"UserId\",this.data.userId)\n    body.append(\"PaymentStatus\",\"true\")\n     const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",this.data.id)\n      this.service.create(body).subscribe(\n      ()=> {\n        this.serviceOrder.refuseOrder(bodyOrder).subscribe(\n          ()=> {\n            this.dialogRef.close();\n          },\n          error => {\n            error.error.messages.forEach(e=>{\n              if(e.lang_id==this.languageService.select.id){\n                alertify.error(e.messageLang);\n              }\n            })\n          })\n\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h2 mat-dialog-title>Anbara əlavə et</h2>\n<form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\" id=\"addtoanbar\">\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\" col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >İzləmə kodu</mat-label>\n          <input type=\"text\" matInput  placeholder=\"05228964284282P\" formControlName=\"Track\">\n          <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"Track.errors?.minlength \" >\n            Ən azı 5 simvol olmalıdır\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Məhsul</mat-label>\n          <mat-select  formControlName=\"Product\">\n            <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n              {{item.productTranslates[2].name}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-3 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Məbləğ</mat-label>\n          <input type=\"number\" step=\"0.01\" matInput placeholder=\"100\" formControlName=\"CamexPrice\">\n          <mat-error  *ngIf=\"errorHandling('CamexPrice','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('CamexPrice','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-lg-3 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Sayı</mat-label>\n          <input type=\"number\" matInput placeholder=\"5\" formControlName=\"Weight\">\n          <mat-error  *ngIf=\"errorHandling('Weight','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Weight','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12 \" id=\"fileInput\">\n        <mat-form-field>\n          <div class=\"d-flex justify-content-between\">\n            <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n            <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n              Seç\n            </button>\n            <input type=\"file\" hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\" multiple=\"multiple\"\n                   accept=\"image/*\" />\n          </div>\n          <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n    <button mat-button mat-dialog-close>Ləğv ET</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">Yadda saxla  </button>\n  </mat-dialog-actions>\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {DescriptionsService} from '../Core/services/descriptions/descriptions.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor(private languagesService:LanguagesService,\r\n              private translate: TranslateService,\r\n              private service:DescriptionsService,) { this.get()}\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  public createImgPathLogo = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/bio/${serverPath}`;\r\n  }\r\n  data:any\r\n  desc:string\r\n  loaded:boolean=false\r\n  get(){\r\n    this.service.getBio().subscribe((res)=>{\r\n      this.data=res[0]\r\n      if(this.languagesService.select.id==1){\r\n        this.desc=this.data.shortDescEng\r\n      }\r\n      if(this.languagesService.select.id==2){\r\n        this.desc=this.data.shortDescRus\r\n      }\r\n      if(this.languagesService.select.id==3){\r\n        this.desc=this.data.shortDescAz\r\n      }\r\n      this.loaded=true\r\n    })\r\n  }\r\n}\r\n","<div class=\"clearfix-gray\"></div>\r\n<section id=\"footer\">\r\n  <div class=\"container-fluid pl-pr-10 h-100\">\r\n    <div class=\"d-flex col-12 p-0 justify-content-between align-items-center\">\r\n      <div *ngIf=\"loaded\">\r\n        <a routerLink=\"\" class=\"logo lg-logo\" [ngStyle]=\"{'background-image': 'url('+createImgPathLogo(this.data.logoFooter)+')'}\"></a>\r\n        <p >\r\n          {{this.desc}}\r\n        </p>\r\n      </div>\r\n      <div class=\"menu d-lg-block d-md-none d-sm-none d-none\">\r\n        <ul>\r\n          <a routerLink=\"/shopping\"><li><i class=\"far fa-shopping-bag fa-nav-icon\"></i>{{'shopping' | translate }}</li></a>\r\n          <a routerLink=\"/tariffs\"><li> <i class=\"far fa-money-check-edit-alt fa-nav-icon\"></i>{{'tariffs' | translate }}</li></a>\r\n          <a routerLink=\"/calculator\"><li> <i class=\"far fa-calculator-alt fa-nav-icon\"></i> {{'calculator' | translate }}</li></a>\r\n          <a routerLink=\"/courier\"><li><i class=\"far fa-truck-moving fa-nav-icon\"></i> {{'courier' | translate }}</li></a>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FAQ} from '../Core/models/FAQ';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {CourierService} from '../Core/services/Admin/courier/courier.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {FaqService} from '../Core/services/Admin/faq/faq.service';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.scss']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n  faqs:FAQ[]\r\n  bannerSrc:string=\"../../assets/image/banners/faq-banner.png\";\r\n  constructor(private service:FaqService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.faqTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.faqTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.faqs=res;\r\n    })\r\n  }\r\n\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'FAQ'\" [bannerSrc]=\"bannerSrc\" class=\"pb-5\"></app-banner>\r\n<section id=\"faq\" class=\"pt-5\">\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 \">\r\n    <mat-accordion>\r\n\r\n      <mat-expansion-panel  *ngFor=\"let panel of faqs\">\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title class=\"d-flex align-items-center\">\r\n            <h3 class=\"m-0\"><b>{{panel.faqTranslates[0].title }}</b></h3>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n      <div [innerHTML]=\"panel.faqTranslates[0].description\" class=\"pt-4 pb-4 pl-2 pr-2\"></div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {\r\n  ApexChart,\r\n  ApexFill,\r\n  ApexNonAxisChartSeries,\r\n  ApexPlotOptions,\r\n  ApexStates,\r\n  ApexStroke,\r\n  ApexTooltip,\r\n  ChartComponent\r\n} from 'ng-apexcharts';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {AppUser} from '../../Admin/Models/AppUser';\r\nimport {Receipt} from '../../Core/models/Receipt';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {BalanceDialogComponent} from '../dialogs/balance-dialog/balance-dialog.component';\r\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\r\nimport {Cargo} from '../../Core/models/Cargo';\r\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\r\nexport type ChartOptions = {\r\n  series: ApexNonAxisChartSeries;\r\n  chart: ApexChart;\r\n  labels: string[];\r\n  plotOptions: ApexPlotOptions;\r\n  fill: ApexFill;\r\n  stroke: ApexStroke;\r\n  states:ApexStates,\r\n  tooltip:ApexTooltip\r\n};\r\n\r\n@Component({\r\n  selector: 'app-control-panel',\r\n  templateUrl: './control-panel.component.html',\r\n  styleUrls: ['./control-panel.component.scss']\r\n})\r\nexport class ControlPanelComponent implements OnInit,OnChanges {\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n  Data:Cargo[];\r\n  youLimit:number=0;\r\n  limit:string;\r\n\r\n  displayedColumns: string[] = ['name', 'value', 'createdDate'];\r\n  dataSource: MatTableDataSource<Receipt>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @Input() user:AppUser;\r\n  @Output() event = new EventEmitter();\r\n  callParent(): void {\r\n    this.event.next();\r\n  }\r\n  ngOnChanges(changes:SimpleChanges) {\r\n    this.user= changes.user.currentValue\r\n    this.get()\r\n  }\r\n  constructor(public dialog: MatDialog,\r\n              public languageService:LanguagesService,\r\n              public service:CargoService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.get()\r\n\r\n\r\n  }\r\nloaded:boolean=false\r\n  get(){\r\n    this.dataSource = new MatTableDataSource(this.user.receipts);\r\n    setTimeout(() => {\r\n      this.dataSource.paginator = this.paginator\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    this.service.getEnded().subscribe(res=>{\r\n      this.Data=res;\r\n      this.youLimit=0\r\n      if(this.Data[0]!=null){\r\n        this.Data.forEach(data=>{\r\n          let today = new Date()\r\n          let day = new Date(data.createdDate )\r\n          if(today.getTime()-day.getTime()<2.628e+9){\r\n            this.youLimit+=data.price\r\n          }\r\n        })\r\n\r\n      }else{\r\n        this.youLimit=0\r\n      }\r\n      this.limit= ((this.youLimit*100)/300).toString()\r\n      this.chartOptions = {\r\n        series: [parseInt(this.limit)],\r\n        chart: {\r\n          height: 200,\r\n          type: \"radialBar\",\r\n          toolbar: {\r\n            show: false\r\n          },\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            startAngle: 0,\r\n            endAngle: 360,\r\n            hollow: {\r\n              margin: 0,\r\n              size: \"70%\",\r\n              background: \"#fff\",\r\n              image: undefined,\r\n              position: \"front\",\r\n              dropShadow: {\r\n                enabled: true,\r\n                top: 3,\r\n                left: 0,\r\n                blur: 4,\r\n                opacity: 0.24\r\n              }\r\n            },\r\n            track: {\r\n              background: \"#fff\",\r\n              strokeWidth: \"67%\",\r\n              margin: 0, // margin is in pixels\r\n              dropShadow: {\r\n                enabled: true,\r\n                top: -1,\r\n                left: 0,\r\n                blur: 4,\r\n                opacity: 0.1\r\n              }\r\n            },\r\n            dataLabels: {\r\n              show: true,\r\n              name: {\r\n                show: false,\r\n              },\r\n              value: {\r\n                formatter(val: number): string {\r\n                  return val.toString()+\"%\"\r\n                },\r\n                color: \"#111\",\r\n                fontSize: \"36px\",\r\n                show: true\r\n              },\r\n\r\n            }\r\n          }\r\n        },\r\n\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shade: \"dark\",\r\n            type: \"horizontal\",\r\n            shadeIntensity: 0.5,\r\n            gradientToColors: [\"#ABE5A1\"],\r\n            inverseColors: true,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 100]\r\n          }\r\n        },\r\n        stroke: {\r\n          lineCap: \"round\"\r\n        },\r\n        states:{\r\n          normal: {\r\n            filter: {\r\n              type: 'none',\r\n              value: 0,\r\n            }\r\n          },\r\n          hover: {\r\n            filter: {\r\n              type: 'none',\r\n              value: 0,\r\n            }\r\n          },\r\n          active: {\r\n            allowMultipleDataPointsSelection: false,\r\n            filter: {\r\n              type: 'none',\r\n              value: 0,\r\n            }\r\n          },\r\n        }\r\n      };\r\n      this.loaded=true\r\n    })\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  srcImg:string=\"../../assets/image/manat.jpg\"\r\n  getCamexId(val){\r\n    return String(val).padStart(5, '0')\r\n  }\r\n  openDialog(){\r\n    const dialogRefCreate = this.dialog.open(BalanceDialogComponent, {\r\n      width: '450px',\r\n    });\r\n    dialogRefCreate.afterClosed().subscribe(() => {\r\n      this.callParent()\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex\" id=\"control\">\r\n\r\n  <div class=\"w-100 d-flex flex-wrap\">\r\n<div class=\"col-12 mb-4\">\r\n  <div class=\"top-statement d-flex justify-content-between align-items-center\">\r\n    <span class=\"m-0 pl-3 title\">      {{'PanelPage'|translate}}</span>\r\n  </div>\r\n</div>\r\n    <div class=\"col-lg-8 col-md-12 col-sm-12 col-12 mb-4  new-item\">\r\n\r\n      <div class=\"style h-100\">\r\n        <img [src]=\"srcImg\" class=\"img-val\" width=\"100%\" alt=\"\">\r\n        <div class=\"bg-color-val\"></div>\r\n        <div class=\"content pl-3 pr-3\">\r\n          <div class=\"balance \">\r\n            <div  class=\"balance-count\">\r\n              <div class=\"camexID pr-3 pl-3 pt-2 pb-2\">\r\n                <span>Camex ID: A{{getCamexId(user.camexId)}}</span>\r\n              </div>\r\n              <br>\r\n              <span>{{'Balance'|translate}}</span>\r\n              <br>\r\n              <br>\r\n              <span class=\"count\">{{user.balance.userBalance}}\r\n                <sup>$</sup>\r\n                        </span>\r\n            </div>\r\n            <div class=\"balance-date\" *ngIf=\"user.receipts[0]!=null\">\r\n              <span>{{'LastAddDate'|translate}}</span>\r\n              <br>\r\n              <span class=\"time\">\r\n              {{user.receipts[0].createdDate | date:'yyyy-MM-dd HH:mm:ss z'}}\r\n             </span>\r\n            </div>\r\n            <div class=\"balance-text\">\r\n              <p>\r\n                <b>\r\n                  {{'NoticeBalance'|translate}}\r\n                </b>\r\n              </p>\r\n            </div>\r\n            <div class=\"btn-balance\">\r\n              <button mat-stroked-button (click)=\"openDialog()\" >  {{'TopUpBalance'|translate}}</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4 col-md-12 col-sm-12 col-12 mb-4 new-item\">\r\n      <div class=\"style h-100 p-3 d-flex flex-column align-items-center justify-content-center\">\r\n        <p>{{'LastTDays'|translate}}</p>\r\n        <div id=\"chart\" *ngIf=\"loaded\">\r\n          <apx-chart\r\n            [series]=\"chartOptions.series\"\r\n            [chart]=\"chartOptions.chart\"\r\n            [plotOptions]=\"chartOptions.plotOptions\"\r\n            [labels]=\"chartOptions.labels\"\r\n            [stroke]=\"chartOptions.stroke\"\r\n            [fill]=\"chartOptions.fill\"\r\n          ></apx-chart>\r\n        </div>\r\n        <p>{{this.youLimit}} <sup>$</sup></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 mb-4 new-item\">\r\n      <div class=\"style content-tab\">\r\n        <div class=\"table-angular \" >\r\n          <mat-form-field  class=\"filter\">\r\n            <mat-label>{{'Filter'|translate}}</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n          </mat-form-field>\r\n          <div class=\"scroll\">\r\n            <table  mat-table [dataSource]=\"dataSource\" matSort>\r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Operation'|translate}} </th>\r\n                <td mat-cell  *matCellDef=\"let row\" >\r\n                  <span *ngIf=\"row.name =='minus' else elseblock\"> {{'minus'|translate}}</span>\r\n                  <ng-template #elseblock>\r\n                    <span *ngIf=\"row.name =='plus' else elseblock2\"> {{'plus'|translate}}</span>\r\n                    <ng-template #elseblock2>\r\n                      <span > {{'refuse'|translate}}</span>\r\n                    </ng-template>\r\n                  </ng-template>\r\n                </td>\r\n              </ng-container>\r\n\r\n              <!-- Color Column -->\r\n              <ng-container matColumnDef=\"value\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  {{'Price'|translate}} </th>\r\n                <td mat-cell *matCellDef=\"let row\" > {{row.value}} USD </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"createdDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  {{'Date'|translate}} </th>\r\n                <td mat-cell *matCellDef=\"let row\"> {{row.createdDate | date:'yyyy-MM-dd H:mm:ss z'}} </td>\r\n              </ng-container>\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              <!-- Row shown when there is no matching data. -->\r\n              <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"12\"> {{'DataNotFound'|translate}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Flight} from '../../../models/Flight';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlightService {\n  constructor(private http: HttpClient, private  global: GlobalService) {\n  }\n\n  get(): Observable<Flight[]> {\n    return this.http.get<Flight[]>(`${this.global.path}Flight`);\n  }\n\n  getActive(): Observable<Flight[]> {\n    return this.http.get<Flight[]>(`${this.global.path}Flight/active`);\n  }\n\n  create(body: FormData) {\n    return this.http.post(`${this.global.path}Flight`, body);\n  }\n\n  update(body: FormData) {\n    return this.http.put(`${this.global.path}Flight/${body.get(\"id\")}`, body);\n  }\n\n  delete(id) {\n    return this.http.delete(`${this.global.path}Flight/${id}`);\n  }\n}\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, Validators} from '@angular/forms';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\nimport {RegistrationService} from '../../register/Registration/registration.service';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {Router} from '@angular/router';\nimport {City} from '../../Core/models/City';\nimport {Office} from '../../Core/models/Office';\ndeclare let alertify:any\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.scss']\n})\nexport class UserSettingsComponent implements OnInit {\n  privateForm:FormGroup\n  businessForm:FormGroup\n  @Input() user;\n  currentCities:City[];\n  offices:Office[];\n\n  fileAttr = this.translate.instant(\"ChooseFile\");\n  fileToUpload:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\n  constructor(\n    private registerService:RegistrationService,\n    private languageService:LanguagesService,\n    private translate: TranslateService,\n    private router: Router){\n    this.getData()\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.privateForm.controls[control].hasError(error);\n  }\n  getData(){\n    this.registerService.getRegister().subscribe(res => {\n      res.cities.forEach(c=>{\n        c.cityNameTranslates.forEach(ct=>{\n          if(ct.languageId==this.languageService.select.id){\n            c.cityNameTranslates[0]=ct\n            this.currentCities=res.cities;\n          }\n        })\n\n      })\n      res.offices.forEach(o=>{\n        o.officeNameTranlates.forEach(of=>{\n          if(of.languageId==this.languageService.select.id){\n            o.officeNameTranlates[0]=of;\n            this.offices=res.offices;\n          }\n        })\n      })\n    });\n  }\n  ngOnInit(): void {\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.getData()\n    });\n\n   if(this.user.privateCustomer!=null){\n     this.privateForm= new FormGroup({\n       Email : new FormControl({value: this.user.user.email , disabled: true}, [\n         Validators.required,\n         Validators.email,\n       ]),\n       PassportNumber: new FormControl(\n         {value: this.user.privateCustomer.passportNumber , disabled: true}, [\n           Validators.required,\n           Validators.min(1),\n           Validators.max(99999999),\n           Validators.pattern(/^\\d*\\.?\\d*$/)\n         ]\n       ),\n       Name: new FormControl(\n         {value: this.user.privateCustomer.name, disabled: true}, [\n           Validators.required\n         ]\n       ),\n       Surname: new FormControl(\n         {value: this.user.privateCustomer.surname, disabled: true}, [\n           Validators.required\n         ]\n       ),\n       Lastname: new FormControl({value: this.user.privateCustomer.lastname, disabled: true},  [\n         Validators.required\n       ]),\n       Birthday: new FormControl(this.user.privateCustomer.birthday, [\n         Validators.required\n       ]),\n       FINCode: new FormControl({value: this.user.privateCustomer.finCode, disabled: true}, [\n         Validators.required,\n       ]),\n       IsMan: new FormControl(\"\"+this.user.privateCustomer.isMan, [\n         Validators.required\n       ]),\n       CurrentPassword: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n       ]),\n       Password: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n       ]),\n       CheckPassword: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\n         RxwebValidators.compare({fieldName:'Password'})\n       ]),\n       CityId: new FormControl(this.user.user.cityId, [\n         Validators.required,\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       Address: new FormControl(this.user.user.address, [\n         Validators.required\n       ]),\n       PhoneNumber: new FormControl(this.user.user.phoneNumber, [\n         Validators.required,\n         Validators.minLength(9),\n         Validators.maxLength(9),\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       OfficeId: new FormControl(this.user.user.officeId, [\n         Validators.required,\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       FileInput: new FormControl('', [\n       ]),\n     })\n   }\n   else{\n     this.businessForm= new FormGroup({\n       Email : new FormControl({value: this.user.user.email , disabled: true}, [\n         Validators.required,\n         Validators.email,\n       ]),\n       CompanyName: new FormControl(this.user.businessCustomer.companyName, [\n           Validators.required\n         ]\n       ),\n       CompanyRegistrationNumber: new FormControl({value: this.user.businessCustomer.companyRegistrationNumber , disabled: true}, [\n           Validators.required,\n           Validators.min(1),\n           Validators.max(999999999),\n           Validators.pattern(/^\\d*\\.?\\d*$/)\n         ]\n       ),\n       CurrentPassword: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n       ]),\n       Password: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)\n       ]),\n       CheckPassword: new FormControl('', [\n         Validators.minLength(8),\n         Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/),\n         RxwebValidators.compare({fieldName:'Password'})\n       ]),\n       CityId: new FormControl(this.user.user.cityId, [\n         Validators.required,\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       Address: new FormControl(this.user.user.address, [\n         Validators.required\n       ]),\n       PhoneNumber: new FormControl(this.user.user.phoneNumber, [\n         Validators.required,\n         Validators.minLength(9),\n         Validators.maxLength(9),\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       OfficeId: new FormControl(this.user.user.officeId, [\n         Validators.required,\n         Validators.pattern(/^\\d*\\.?\\d*$/)\n       ]),\n       FileInput: new FormControl('', [\n       ]),\n     })\n   }\n  }\n  submit() {\n    const body = new FormData()\n    body.append(\"CheckPassword\",this.privateForm.controls['CheckPassword'].value.split(' ').join(''))\n    body.append(\"Password\",this.privateForm.controls['Password'].value.split(' ').join(''))\n    body.append(\"CurrentPassword\",this.privateForm.controls['CurrentPassword'].value.split(' ').join(''))\n    body.append(\"CityId\",this.privateForm.controls['CityId'].value)\n    body.append(\"Address\",this.privateForm.controls['Address'].value)\n    body.append(\"PhoneNumber\",this.privateForm.controls['PhoneNumber'].value)\n    body.append(\"OfficeId\",this.privateForm.controls['OfficeId'].value)\n    body.append(\"Birthday\",JSON.stringify(this.privateForm.controls['Birthday'].value).split('\"').join(''))\n    body.append(\"IsMan\",this.privateForm.controls['IsMan'].value)\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    this.registerService.UpdatePrivate(body).subscribe(\n      ()=> {\n        alertify.success(this.translate.instant(\"changed\")+\"!\");\n        setTimeout(()=>{\n          window.location.reload();\n        },1500)\n      },\n      error => {\n        error.error.messages.forEach(e=>{\n          if(e.lang_id==this.languageService.select.id){\n            alertify.error(e.messageLang);\n          }\n        })\n      })\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = this.translate.instant(\"ChooseFile\");\n    }\n  }\n  submitBusiness(){\n    const body = new FormData()\n    body.append(\"CheckPassword\",this.businessForm.controls['CheckPassword'].value.split(' ').join(''))\n    body.append(\"Password\",this.businessForm.controls['Password'].value.split(' ').join(''))\n    body.append(\"CurrentPassword\",this.businessForm.controls['CurrentPassword'].value.split(' ').join(''))\n    body.append(\"CityId\",this.businessForm.controls['CityId'].value)\n    body.append(\"Address\",this.businessForm.controls['Address'].value)\n    body.append(\"PhoneNumber\",this.businessForm.controls['PhoneNumber'].value)\n    body.append(\"OfficeId\",this.businessForm.controls['OfficeId'].value)\n    body.append(\"CompanyName\",this.businessForm.controls['CompanyName'].value)\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    this.registerService.UpdateBusiness(body).subscribe((s)=> {\n        alertify.success(this.translate.instant(\"changed\")+\"!\");\n        setTimeout(()=>{\n          window.location.reload();\n        },1500)\n      },\n      error => {\n        error.error.messages.forEach(e=>{\n          if(e.lang_id==this.languageService.select.id){\n            alertify.error(e.messageLang);\n          }\n        })\n      })\n  }\n  get PhoneNumber() {\n    return this.privateForm.get('PhoneNumber');\n  }\n  get Password() {\n    return this.privateForm.get('Password');\n  }\n  get CurrentPassword() {\n    return this.privateForm.get('CurrentPassword');\n  }\n  get CurrentPasswordBusiness() {\n    return this.businessForm.get('CurrentPassword');\n  }\n  get PhoneNumberBusiness() {\n    return this.businessForm.get('PhoneNumber');\n  }\n  get PasswordBusiness() {\n    return this.businessForm.get('Password');\n  }\n  public errorHandlingBusiness = (control: string, error: string) => {\n    return this.businessForm.controls[control].hasError(error);\n  }\n}\n","<div class=\"w-100 d-flex flex-wrap\">\n  <div class=\"col-12\" id=\"settings\">\n    <div class=\"top-statement d-flex justify-content-between align-items-center\">\n      <span class=\"m-0 pl-3 title\">{{'Settings'|translate}} </span>\n    </div>\n    <div class=\"style content-tab mt-4\">\n      <form *ngIf=\"user.privateCustomer!=null else elseblock\" [formGroup]=\"privateForm\" novalidate (ngSubmit)=\"submit()\">\n        <div class=\"d-flex flex-wrap\">\n          <div class=\"pt-4 pb-4    w-100\">\n            <div class=\"w-100\">\n              <h2 class=\" pl-3 pb-2 w-100 text-uppercase\"><b>{{'PersonalInfo' | translate }} </b></h2>\n              <div class=\"d-flex flex-wrap w-100\">\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\n                    <input type=\"email\" matInput formControlName=\"Email\"  placeholder=\"camex.example@example.com\">\n                    <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\n                      {{'EmailInCorrect' | translate }}\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'IDCardNumber' | translate }}</mat-label>\n                    <input type=\"number\" formControlName=\"PassportNumber\" matInput  placeholder=\"12345678\">\n                    <mat-error  *ngIf=\"errorHandling('PassportNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('PassportNumber','min') ||errorHandling('PassportNumber','max') \" >\n                      {{'MinMaxPassNumber' | translate }}\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('PassportNumber','pattern') \" >\n                      {{'NumberPattern' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'registrationName' | translate }}</mat-label>\n                    <input type=\"text\" matInput  placeholder=\"Seynur\" formControlName=\"Name\">\n                    <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'registrationSurname' | translate }}</mat-label>\n                    <input type=\"text\" matInput  placeholder=\"Məmmədov\" formControlName=\"Surname\">\n                    <mat-error  *ngIf=\"errorHandling('Surname','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'registrationLastname' | translate }}</mat-label>\n                    <input type=\"text\" matInput  placeholder=\"Seymur\" formControlName=\"Lastname\">\n                    <mat-error  *ngIf=\"errorHandling('Lastname','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'BirthDate' | translate }}</mat-label>\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"Birthday\" >\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                    <mat-error  *ngIf=\"errorHandling('Birthday','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-lg-6 col-md-6 col-12 d-flex flex-wrap\">\n                  <div class=\"col-lg-6 col-md-6 col-12 p-0\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\"> {{'PassIIN' | translate }}</mat-label>\n                      <input type=\"text\" matInput  placeholder=\"4FRKPVD\" formControlName=\"FINCode\">\n                      <mat-error  *ngIf=\"errorHandling('FINCode','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12 p-0 pl-lg-1 pl-md-1 d-flex align-items-center justify-content-between\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\" >{{'Gender' | translate }}</mat-label>\n                      <mat-select  formControlName=\"IsMan\">\n                        <mat-option value=\"true\" class=\"text-capitalize\">\n                          {{'Male' | translate }}\n                        </mat-option>\n                        <mat-option value=\"false\" class=\"text-capitalize\">\n                          {{'Female' | translate }}\n                        </mat-option>\n                      </mat-select>\n                      <mat-error  *ngIf=\"errorHandling('IsMan','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n\n              </div>\n              <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Password' | translate }}</b></h4>\n              <div class=\"d-flex flex-wrap w-100\">\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\">{{'CurrentPassword' | translate }}</mat-label>\n                    <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CurrentPassword\">\n                    <mat-error  *ngIf=\"errorHandling('CurrentPassword','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\"CurrentPassword.errors?.minlength \" >\n                      {{'minLengthPass' | translate }}\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('CurrentPassword','pattern')\" >\n                      {{'patternPass' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\n                    <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\n                    <mat-error  *ngIf=\"errorHandling('Password','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\"Password.errors?.minlength \" >\n                      {{'minLengthPass' | translate }}\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('Password','pattern')\" >\n                      {{'patternPass' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\n                    <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\n                    <mat-error  *ngIf=\"errorHandling('CheckPassword','compare')\" >\n                      {{'comparePass' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\n              <div class=\"d-flex flex-wrap w-100\">\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\" >\n                    <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\n                    <mat-select formControlName=\"CityId\">\n                      <mat-option *ngFor=\"let city of currentCities\" [value]=\"city.id\" class=\"text-capitalize\">\n                        {{city.cityNameTranslates[0].name}}\n                      </mat-option>\n                    </mat-select>\n                    <mat-error  *ngIf=\"errorHandling('CityId','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('CityId','pattern') \" >\n                      {{'NumberPattern' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\n                    <input type=\"text\" matInput placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \" formControlName=\"Address\">\n                    <mat-error  *ngIf=\"errorHandling('Address','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field appearance=\"fill\" class=\"w-100\">\n                    <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\n                    <input type=\"text\" matInput placeholder=\"559294860\" formControlName=\"PhoneNumber\">\n                    <mat-error  *ngIf=\"errorHandling('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\" PhoneNumber.errors?.minlength ||PhoneNumber.errors?.maxlength \" >\n                      {{'PhoneNumberLength' | translate }}\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('PhoneNumber','pattern') \" >\n                      {{'NumberPattern' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n\n                </div>\n                <div class=\"col-12 \" id=\"fileInput\">\n                  <mat-form-field>\n                    <mat-label class=\"text-capitalize\">{{\"ProfileImage\"|translate}}</mat-label>\n                    <div class=\"d-flex justify-content-between\">\n                      <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                      <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                        {{\"Browse\"|translate}}\n                      </button>\n                      <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                             accept=\"image/*\" />\n                    </div>\n                    <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                  </mat-form-field>\n\n                </div>\n              </div>\n              <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\n              <div class=\"d-flex flex-wrap w-100\">\n                <div class=\"col-lg-6 col-md-6 col-12\">\n                  <mat-form-field class=\"w-100\" appearance=\"fill\">\n                    <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\n                    <mat-select formControlName=\"OfficeId\">\n                      <mat-option *ngFor=\"let office of offices;index as i\" [value]=\"office.id\" class=\"text-capitalize\">\n                        {{office.officeNameTranlates[0].name}}\n                      </mat-option>\n                    </mat-select>\n                    <mat-error  *ngIf=\"errorHandling('OfficeId','required')\" [innerHTML]=\"'Required' | translate \">\n                    </mat-error>\n                    <mat-error  *ngIf=\"errorHandling('OfficeId','pattern') \" >\n                      {{'NumberPattern' | translate }}\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div class=\"w-100 d-flex justify-content-end mt-4\">\n                <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!privateForm.dirty || !privateForm.valid\" >{{'Save'|translate}}  </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      <ng-template #elseblock>\n        <form [formGroup]=\"businessForm\" novalidate (ngSubmit)=\"submitBusiness()\">\n          <div class=\"d-flex flex-wrap\">\n            <div class=\" pb-4 w-100\">\n              <div class=\" w-100\">\n                <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'BusinessInfo' | translate }}</b></h4>\n                <div class=\"d-flex flex-wrap w-100\">\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\n                      <input type=\"email\" matInput formControlName=\"Email\"  placeholder=\"camex.example@example.com\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('Email','email') && !errorHandlingBusiness('Email','required')\">\n                        {{'EmailInCorrect' | translate }}\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('Email','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\"  appearance=\"fill\">\n                      <mat-label  class=\"text-capitalize\"> {{'CompanyNumber' | translate }} </mat-label>\n                      <input type=\"number\" formControlName=\"CompanyRegistrationNumber\" matInput  placeholder=\"123456789\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','min') ||errorHandlingBusiness('CompanyRegistrationNumber','max') \" >\n                        {{'MinMaxPassNumber' | translate }}\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CompanyRegistrationNumber','pattern') \" >\n                        {{'NumberPattern' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\"> {{'CompanyName' | translate }} </mat-label>\n                      <input type=\"text\" matInput  formControlName=\"CompanyName\" placeholder=\"Camex MMC\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CompanyName','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Password' | translate }}</b></h4>\n                <div class=\"d-flex flex-wrap w-100\">\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\">{{'CurrentPassword' | translate }}</mat-label>\n                      <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CurrentPasswordBusiness\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CurrentPassword','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\"CurrentPasswordBusiness.errors?.minlength \" >\n                        {{'minLengthPass' | translate }}\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CurrentPassword','pattern')\" >\n                        {{'patternPass' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\">{{'Password' | translate }}</mat-label>\n                      <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"Password\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('Password','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\"PasswordBusiness.errors?.minlength \" >\n                        {{'minLengthPass' | translate }}\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('Password','pattern')\" >\n                        {{'patternPass' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\" >{{'PasswordAgain' | translate }}</mat-label>\n                      <input type=\"password\" matInput placeholder=\"*********\" formControlName=\"CheckPassword\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CheckPassword','compare')\" >\n                        {{'comparePass' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\n                <div class=\"d-flex flex-wrap w-100\">\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\" >\n                      <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\n                      <mat-select formControlName=\"CityId\">\n                        <mat-option *ngFor=\"let city of currentCities\" [value]=\"city.id\" class=\"text-capitalize\">\n                          {{city.cityNameTranslates[0].name}}\n                        </mat-option>\n                      </mat-select>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CityId','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('CityId','pattern') \" >\n                        {{'NumberPattern' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\n                      <input type=\"text\" matInput placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \" formControlName=\"Address\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('Address','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n\n                    </mat-form-field>\n                  </div>\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field appearance=\"fill\" class=\"w-100\">\n                      <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\n                      <input type=\"text\" matInput placeholder=\"559294860\" formControlName=\"PhoneNumber\">\n                      <mat-error  *ngIf=\"errorHandlingBusiness('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\" PhoneNumberBusiness.errors?.minlength ||PhoneNumberBusiness.errors?.maxlength \" >\n                        {{'PhoneNumberLength' | translate }}\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('PhoneNumber','pattern') \" >\n                        {{'NumberPattern' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\n                <div class=\"d-flex flex-wrap w-100\">\n                  <div class=\"col-lg-6 col-md-6 col-12\">\n                    <mat-form-field class=\"w-100\" appearance=\"fill\">\n                      <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\n                      <mat-select formControlName=\"OfficeId\">\n                        <mat-option *ngFor=\"let office of offices\" [value]=\"office.id\" class=\"text-capitalize\">\n                          {{office.officeNameTranlates[0].name}}\n                        </mat-option>\n                      </mat-select>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('OfficeId','required')\" [innerHTML]=\"'Required' | translate \">\n                      </mat-error>\n                      <mat-error  *ngIf=\"errorHandlingBusiness('OfficeId','pattern') \" >\n                        {{'NumberPattern' | translate }}\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"w-100 d-flex justify-content-end mt-4\">\n                  <button mat-raised-button class=\"text-uppercase reg-button\" [disabled]=\"!businessForm.dirty || !businessForm.valid\" >{{'Save'|translate}}  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CountryInfoService} from '../../../../Core/services/Admin/countries/country-info.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-country-info-create',\n  templateUrl: './country-info-create.component.html',\n  styleUrls: ['./country-info-create.component.scss']\n})\nexport class CountryInfoCreateComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CountryInfoCreateComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:number,\n    private service:CountryInfoService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Title: new FormControl('', [\n        Validators.required,\n      ]),\n      Description: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Title\",this.createForm.controls[\"Title\"].value.trim())\n    body.append(\"Description\",this.createForm.controls[\"Description\"].value.trim())\n    body.append(\"CountryId\",this.data.toString())\n    this.service.createCountryInfo(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Ölkənin detalın yarad</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"Title\">\n                <mat-error  *ngIf=\"errorHandling('Title','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <p>İstifadəcinin adı görünməsi üçün <b> @name@ </b> yazın</p>\n              <p>İstifadəcinin soyadı görünməsi üçün <b>@surname@</b> yazın</p>\n              <p>İstifadəcinin CamexID görünməsi üçün <b>@id@</b> yazın</p>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Təsvir</mat-label>\n                <input type=\"text\" matInput formControlName=\"Description\" >\n                <mat-error  *ngIf=\"errorHandling('Description','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.scss']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<section id=\"lodader-sec\">\r\n\r\n  <div id=\"splash\">\r\n    <div class=\"anim\">\r\n      <div id=\"loader\">\r\n        <svg version=\"1.1\" width=\"60px\" height=\"70px\" viewBox=\"0 0 60 70\">\r\n          <defs>\r\n            <filter id=\"f1\" x=\"0\" y=\"0\">\r\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\"></feGaussianBlur>\r\n            </filter>\r\n          </defs>\r\n          <g id=\"airplane\">\r\n            <path fill=\"#000\" d=\"M0.677,20.977l4.355,1.631c0.281,0.104,0.579,0.162,0.88,0.16l9.76-0.004L30.46,41.58c0.27,0.34,0.679,0.545,1.112,0.541\r\n          h1.87c0.992,0,1.676-0.992,1.322-1.918l-6.643-17.439l6.914,0.002l6.038,6.037c0.265,0.266,0.624,0.412,0.999,0.418l1.013-0.004\r\n          c1.004-0.002,1.684-1.012,1.312-1.938l-2.911-7.277l2.912-7.278c0.372-0.928-0.313-1.941-1.313-1.938h1.017\r\n          c-0.375,0-0.732,0.15-0.996,0.414l-6.039,6.039h-6.915l6.646-17.443c0.354-0.926-0.33-1.916-1.321-1.914l-1.87-0.004\r\n          c-0.439,0.004-0.843,0.203-1.112,0.543L15.677,17.24l-9.765-0.002c-0.3,0.002-0.597,0.055-0.879,0.16L0.678,19.03\r\n          C-0.225,19.36-0.228,20.637,0.677,20.977z\" transform=\"translate(44,0) rotate(90 0 0)\"></path>\r\n          </g>\r\n          <g id=\"shadow\" transform=\"scale(.9)\">\r\n            <path fill=\"#000\" fill-opacity=\"0.3\" d=\"M0.677,20.977l4.355,1.631c0.281,0.104,0.579,0.162,0.88,0.16l9.76-0.004L30.46,41.58c0.27,0.34,0.679,0.545,1.112,0.541\r\n      \t\th1.87c0.992,0,1.676-0.992,1.322-1.918l-6.643-17.439l6.914,0.002l6.038,6.037c0.265,0.266,0.624,0.412,0.999,0.418l1.013-0.004\r\n      \t\tc1.004-0.002,1.684-1.012,1.312-1.938l-2.911-7.277l2.912-7.278c0.372-0.928-0.313-1.941-1.313-1.938h1.017\r\n      \t\tc-0.375,0-0.732,0.15-0.996,0.414l-6.039,6.039h-6.915l6.646-17.443c0.354-0.926-0.33-1.916-1.321-1.914l-1.87-0.004\r\n      \t\tc-0.439,0.004-0.843,0.203-1.112,0.543L15.677,17.24l-9.765-0.002c-0.3,0.002-0.597,0.055-0.879,0.16L0.678,19.03\r\n      \t\tC-0.225,19.36-0.228,20.637,0.677,20.977z\" transform=\"translate(64,30) rotate(90 0 0)\" filter=\"url(#f1)\"></path>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport { LanguagesService } from '../Core/services/lang/languages.service';\r\nimport {Languages} from './models/languages';\r\nimport {LoginService} from '../Core/services/login/login.service';\r\nimport {NavigationService} from '../Core/services/navigation/navigation.service';\r\nimport {UserNavVM} from './models/UserNavVM';\r\nimport {DescriptionsService} from '../Core/services/descriptions/descriptions.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(private languagesService:LanguagesService,\r\n              private service:DescriptionsService,\r\n              public authService:LoginService, private navigation:NavigationService) {\r\n    this.languagesService.getLang().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.flagSrc='../../assets/image/navbar/'+r.flagSrc\r\n      })\r\n      this.languages=res;\r\n      this.select=this.languagesService.select;\r\n    });\r\n    this.getUser();\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  languages: Languages[]=this.languagesService.languages;\r\n  selected:string=this.languagesService.selected;\r\n  select:Languages;\r\n  userNav:UserNavVM;\r\n  data:any\r\n  get(){\r\n    this.service.getBio().subscribe((res)=>{\r\n      this.data=res[0]\r\n      this.loaded2=true\r\n    })\r\n  }\r\n  SetLanguage(lang){\r\n    this.languagesService.SetLanguage(lang);\r\n    this.select=this.languagesService.select;\r\n  }\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n  loaded:boolean=false\r\n  loaded2:boolean=false\r\n  getUser(){\r\n    this.authService.user$.subscribe(user=> {\r\n      if (user != null && this.authService.end) {\r\n        this.navigation.getUser().subscribe(res=>{\r\n          this.userNav=res;\r\n          this.loaded=true\r\n        })\r\n      }\r\n    })\r\n  }\r\n  public createImgPath = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/users/${serverPath}`;\r\n  }\r\n  public createImgPathLogo = (serverPath: string) => {\r\n    return `https://localhost:44387/Site/images/bio/${serverPath}`;\r\n  }\r\n}\r\n","<header class=\"\">\r\n  <div class=\"top-header\">\r\n    <div class=\"container-fluid pl-pr-10 \">\r\n     <div class=\"d-flex justify-content-between\">\r\n       <nav class=\" col-7  p-0\">\r\n         <a routerLink=\"\"  *ngIf=\"loaded2\" [ngStyle]=\"{'background-image': 'url('+createImgPathLogo(this.data.logoNavbar)+')'}\" class=\"logo lg-logo\"></a>\r\n         <a routerLink=\"/home\"></a>\r\n         <a routerLink=\"/news\"> {{'news' | translate }}</a>\r\n         <a routerLink=\"/faq\" class=\"text-uppercase\">{{'FAQ' | translate }}</a>\r\n         <a routerLink=\"/about\">{{'about' | translate }}</a>\r\n         <a routerLink=\"/contact\">{{'contact' | translate }}</a>\r\n         <a routerLink=\"/services\">{{'services' | translate }}</a>\r\n       </nav>\r\n       <div class=\"top-header-right  col-5 justify-content-end p-0\">\r\n         <div class=\"phone\" *ngIf=\"loaded2\">\r\n           <span>{{'call' | translate }}</span>\r\n             <span>  {{this.data.callCenter}}</span>\r\n         </div>\r\n         <div class=\"langues\">\r\n           <div class=\"dropdown\">\r\n             <mat-form-field [ngStyle]=\"{'border':'white'}\" appearance=\"none\" >\r\n               <mat-select [(value)]=\"selected\" (valueChange)=\"SetLanguage(selectField.value)\" #selectField >\r\n                 <mat-select-trigger *ngIf=\"select!=null\">\r\n                   <a role=\"button\" class=\"lang\">\r\n                     <div class=\"flag\">\r\n                       <img width=\"100%\" [src]=\"select.flagSrc\"   alt=\"Flag\">\r\n                     </div>\r\n                     <span> {{select.name}}</span>\r\n                   </a>\r\n                 </mat-select-trigger>\r\n                 <mat-option *ngFor=\"let lang of languages\"  [value]=\"lang.value\" >\r\n                   <a role=\"button\" class=\"lang\">\r\n                     <div class=\"flag\">\r\n                       <img width=\"100%\" [src]=\"lang.flagSrc\"   alt=\"Flag\">\r\n                     </div>\r\n                     <span [ngClass]=\"{'active-lang':selected==lang.value}\"> {{lang.name}}</span>\r\n                   </a>\r\n                 </mat-option>\r\n               </mat-select>\r\n             </mat-form-field>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container-fluid pl-pr-10 d-flex justify-content-between\">\r\n    <div class=\"d-flex col-8 p-0\">\r\n      <a *ngIf=\"loaded2\" routerLink=\"\" class=\"logo lg-logo\" [ngStyle]=\"{'background-image': 'url('+createImgPathLogo(this.data.logoNavbar)+')'}\"></a>\r\n      <div class=\"menu\">\r\n        <ul>\r\n          <a routerLink=\"/shopping\"><li><i class=\"far fa-shopping-bag fa-nav-icon\"></i>{{'shopping' | translate }}</li></a>\r\n          <a routerLink=\"/tariffs\"><li> <i class=\"far fa-money-check-edit-alt fa-nav-icon\"></i>{{'tariffs' | translate }}</li></a>\r\n          <a routerLink=\"/calculator\"><li> <i class=\"far fa-calculator-alt fa-nav-icon\"></i> {{'calculator' | translate }}</li></a>\r\n          <a routerLink=\"/courier\"><li><i class=\"far fa-truck-moving fa-nav-icon\"></i> {{'courier' | translate }}</li></a>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex col-4 p-0 justify-content-end align-items-center\">\r\n      <div *ngIf=\"authService.user$ | async as user  else elseBlock\">\r\n        <div *ngIf=\"authService.user$ | async as user   \" class=\"user-box d-flex align-items-center\">\r\n          <div class=\"user d-flex mr-3\" *ngIf=\"loaded\">\r\n            <div class=\"img\" [ngStyle]=\"{'background-image': 'url('+createImgPath(userNav.image)+')'}\">\r\n            </div>\r\n            <div class=\"title\">\r\n              <p class=\"m-0 mb-2\">\r\n                <a *ngIf=\"userNav.companyName else privateuser\" class=\"username text-capitalize\" routerLink=\"/myprofile\" >\r\n                  <span *ngIf=\"userNav.companyName.length>15 else elseBlock2\"> {{userNav.companyName.substr(0,15)}}...</span>\r\n                  <ng-template #elseBlock2>\r\n                    <span > {{userNav.companyName}}</span>\r\n                  </ng-template>\r\n                </a>\r\n                <ng-template #privateuser>\r\n                  <a  class=\"username text-capitalize\" routerLink=\"/myprofile\" >{{userNav.name.substr(0,8)+\" \"+userNav.surname.substr(0,8)}}</a>\r\n                </ng-template>\r\n              </p>\r\n              <p class=\"m-0\">\r\n                <a routerLink=\"/myprofile\" class=\"balance\">\r\n                  <span>{{'Balance' | translate }}: </span>\r\n                  <span> {{userNav.userBalance}} <i class=\"far fa-dollar-sign fa-1\"></i></span>\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"logout-icon ml-1  \" (click)=\"logout()\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #elseBlock>\r\n        <a routerLink=\"/register\"><button mat-raised-button    class=\"register log-sys-btn mr-4\" color=\"primary\">{{'register' | translate }}</button></a>\r\n        <a routerLink=\"/login\"><button mat-raised-button class=\"log-sys-btn mr-2\"> <i class=\" user-icon far fa-user\"></i>{{'login' | translate }}</button></a>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Cargo} from '../../Core/models/Cargo';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {CargoService} from '../../Core/services/cargo/cargo.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {UserOrderService} from '../../Core/services/Admin/userOrder/user-order.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {StatusChangeComponent} from '../dialogs/status-change/status-change.component';\nimport {ParcelInfoComponent} from '../dialogs/parcel-info/parcel-info.component';\n@Component({\n  selector: 'app-parcels',\n  templateUrl: './parcels.component.html',\n  styleUrls: ['./parcels.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class ParcelsComponent implements OnInit {\n  userId:number=0;\n  val:string\n  dataSource: MatTableDataSource<Cargo>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:Cargo[];\n  displayedColumns: string[] = ['track','name','product','actions'];\n  constructor(public service:CargoService,\n              public dialog: MatDialog,\n              private languageService:LanguagesService,\n              private serviceOrder:UserOrderService,\n              private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.userId=param.id\n    })\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(v =>this.val=v[\"status\"]);\n    this.get()\n  }\n  loaded:boolean=false\n  get(){\n    if(this.userId==undefined){\n      this.service.get(this.val).subscribe(res=>{\n        this.data=res;\n        this.dataSource = new MatTableDataSource(this.data);\n        this.loaded=true\n        setTimeout(() => {\n            this.dataSource.paginator = this.paginator\n            this.dataSource.sort = this.sort;\n          }\n        )\n\n      })\n    }\n    else {\n      this.service.getUserId(this.val,this.userId).subscribe(res=>{\n        this.data=res;\n        this.dataSource = new MatTableDataSource(this.data);\n        this.loaded=true\n        setTimeout(() => {\n            this.dataSource.paginator = this.paginator\n            this.dataSource.sort = this.sort;\n          }\n        )\n\n      })\n    }\n  }\n\n  openDialogStatus(row){\n    if (this.val != 'End'){\n      const dialogRefCreate = this.dialog.open(StatusChangeComponent, {\n        width: '1050',\n        data: row\n      });\n      dialogRefCreate.afterClosed().subscribe(() => {\n        this.get()\n      });\n    }\n\n  }\n\n  checkStatus(name){\n    if (name == 'End'){\n      return true\n    }\n    return false;\n  }\n\n  openDialogInfo(id){\n    const dialogRef = this.dialog.open(ParcelInfoComponent, {\n      width: '1050px',\n      data: {id:id}\n    });\n  }\n}\n","<app-layout>\n  <div *ngIf=\"loaded else elseblock\" id=\"statements\">\n    <app-title-admin [title]=\"'Bağlamalar'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Bağlamalar </span>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular \">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div>\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"track\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> İzləmə kodu </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.track}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Saytın / Maqazanın adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"product\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Məhsul </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.product.productTranslates[2].name}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <div class=\"buttons\">\n                    <button mat-raised-button  [disabled]=\"checkStatus(this.val)\" color=\"primary\" class=\"mr-2\"  (click)=\"openDialogStatus(row)\">Statusu dəyiş</button>\n                    <button mat-icon-button  color=\"accent\" (click)=\"openDialogInfo(row.id)\" > <mat-icon style=\"font-size: 26px \">info</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock>\n    <div style=\"height: 100vh!important; width: 100%;\" class=\"h-100 d-flex align-items-center justify-content-center\">\n      <h1><b>Data yüklənir.....</b></h1>\n    </div>\n  </ng-template>\n</app-layout>\n\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CountryData} from '../countries-all/CountryData';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {Shop} from '../../Core/models/Shop';\nimport {ShopService} from '../../Core/services/Admin/shop/shop.service';\nimport {ShopUpdateDialogComponent} from '../dialogs/shop/shop-update-dialog/shop-update-dialog.component';\nimport {ShopCreateDialogComponent} from '../dialogs/shop/shop-create-dialog/shop-create-dialog.component';\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\n\ndeclare let Swal:any\ndeclare let alertify:any\n@Component({\n  selector: 'app-shops',\n  templateUrl: './shops.component.html',\n  styleUrls: ['./shops.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class ShopsComponent implements OnInit {\n  dataSource: MatTableDataSource<Shop>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  shops:Shop[];\n  displayedColumns: string[] = ['name' ,'isActived','actions'];\n  constructor(public service:ShopService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n\n      this.shops=res;\n      this.dataSource = new MatTableDataSource(this.shops);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n\n  openDialogEdit(row:CountryData): void {\n    const dialogRefEdit = this.dialog.open(ShopUpdateDialogComponent, {\n      width: '450px',\n      data: row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(ShopCreateDialogComponent, {\n      width: '450px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout >\n    <div id=\"shops\" >\n      <app-title-admin [title]=\"'Mağazalar'\"></app-title-admin>\n      <div style=\"    padding: 25px 35px;\">\n        <div class=\"top-title d-flex justify-content-between align-items-center\">\n          <span class=\"m-0 pl-3 title\">Mağazalar</span>\n          <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n        </div>\n      </div>\n\n      <div class=\"margin\">\n        <div class=\"content\">\n          <div class=\"table-angular\" >\n            <mat-form-field class=\"filter\">\n              <mat-label>Filter</mat-label>\n              <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n            </mat-form-field>\n            <div class=\"scroll\">\n              <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                <ng-container matColumnDef=\"name\"  >\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                  <td mat-cell *matCellDef=\"let row\"> {{row.shopTranslates[0].name}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"isActived\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                  <td mat-cell *matCellDef=\"let row\" >\n                    <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                    <ng-template #elseblock >\n                      <span class=\"badge badge-danger\">Deactivdi</span>\n                    </ng-template>\n                  </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                  <td mat-cell *matCellDef=\"let row\" class=\"\">\n                    <div class=\"buttons\">\n                      <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                      <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                      <button mat-icon-button   [routerLink]=\"row.id\" > <mat-icon style=\"font-size: 22px \">list</mat-icon></button>\n                    </div>\n                  </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                  <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n                </tr>\n              </table>\n            </div>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n          </div>\n        </div>\n      </div>\n    </div>\n</app-layout>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {TariffService} from '../../../../Core/services/Admin/countries/tariff/tariff.service';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\ndeclare let alertify:any\n@Component({\n  selector: 'app-tariff-update',\n  templateUrl: './tariff-update.component.html',\n  styleUrls: ['./tariff-update.component.scss']\n})\nexport class TariffUpdateComponent implements OnInit {\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<TariffUpdateComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:TariffService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      To: new FormControl(this.data.row.to, [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"To\",this.createForm.controls[\"To\"].value.trim())\n    body.append(\"id\",this.data.row.id.toString())\n    body.append(\"CountryID\",this.data.countryId.toString())\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Tarif yenilə</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Hara</mat-label>\n                <input type=\"text\" matInput formControlName=\"To\">\n                <mat-error  *ngIf=\"errorHandling('To','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləgv et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import {Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../Core/models/Product';\nimport {CountryData} from '../../../Admin/countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\nimport {CargoService} from '../../../Core/services/cargo/cargo.service';\nimport {TranslateService} from '@ngx-translate/core';\ndeclare let alertify:any\n@Component({\n  selector: 'app-waiting-invoice-dialog',\n  templateUrl: './waiting-invoice-dialog.component.html',\n  styleUrls: ['./waiting-invoice-dialog.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class WaitingInvoiceDialogComponent implements OnInit {\n  statementForm:FormGroup\n  fileAttr = this.translate.instant(\"ChooseFile\");\n  fileToUpload:File;\n  products:Product[];\n  wallet:CountryData[];\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  constructor( public dialogRef: MatDialogRef<WaitingInvoiceDialogComponent>,\n               private languageService:LanguagesService,\n               private service:CargoService,\n               private proService:ProductService,\n               private translate:TranslateService,\n               private cntService:CountriesService,\n               @Inject(MAT_DIALOG_DATA) public data:any) {\n    this.getProduct();\n  }\n\n  ngOnInit(): void {\n\n      this.statementForm= new FormGroup({\n      Track: new FormControl(this.data.row.track, [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n      Name: new FormControl(\n        this.data.row.name, [\n          Validators.required\n        ]\n      ),\n      Product: new FormControl(this.data.row.productId, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Price: new FormControl(this.data.row.price, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Count: new FormControl(this.data.row.count, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Wallet: new FormControl(this.data.row.countryId, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      TextArea: new FormControl(this.data.row.notice, [\n      ]),\n\n    })\n    if(this.data.row.image==null || this.data.row.image==\"\") {\n      this.statementForm.addControl('FileInput',new FormControl('', [\n        Validators.required\n      ]))\n    }\n    else{\n      this.statementForm.addControl('FileInput',new FormControl('', [\n      ]))\n    }\n  }\n  getProduct(){\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        res.forEach(p=>{\n          p.productTranslates.forEach(pt=>{\n            if(pt.languageId==this.languageService.select.id){\n              p.productTranslates[0]=pt\n              this.products=res;\n            }\n          })\n        })\n      }\n    )\n    this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Track\",this.data.row.track)\n    body.append(\"Name\",this.statementForm.controls[\"Name\"].value.trim())\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\n    body.append(\"id\",this.data.row.id.toString())\n    body.append(\"Price\",this.statementForm.controls[\"Price\"].value)\n    body.append(\"CountryId\",this.statementForm.controls[\"Wallet\"].value)\n    body.append(\"Count\",this.statementForm.controls[\"Count\"].value)\n    body.append(\"Notice\",this.statementForm.controls[\"TextArea\"].value.trim())\n    if(this.data.row.image==null || this.data.row.image==\"\"){\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    this.service.updateInvoice(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/statements/${serverPath}`;\n  }\n}\n","<div id=\"dialog\">\n  <h2 mat-dialog-title>{{'Parcel'|translate}}</h2>\n  <form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\n    <mat-dialog-content class=\"mat-typography\">\n      <div class=\"d-flex flex-wrap w-100 mt-4\">\n        <div class=\"col-lg-6 col-md-6 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Track'|translate}}</mat-label>\n            <input type=\"text\" matInput readonly placeholder=\"17017X300339206441\" formControlName=\"Track\">\n            <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"Track.errors?.minlength \" >\n              {{'ErrorMin5'|translate}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-6 col-md-6 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'SiteNMag'|translate}}</mat-label>\n            <input type=\"text\" matInput  placeholder=\"Pull And Bear\" formControlName=\"Name\">\n            <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Product'|translate}}</mat-label>\n            <mat-select  formControlName=\"Product\">\n              <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n                {{item.productTranslates[0].name}}\n              </mat-option>\n\n            </mat-select>\n            <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\">{{'Price'|translate}}</mat-label>\n            <input type=\"number\" matInput placeholder=\"100 \" formControlName=\"Price\">\n            <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12 \">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Wallet'|translate}}</mat-label>\n            <mat-select  formControlName=\"Wallet\">\n              <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\n                {{item.wallet}}\n              </mat-option>\n\n            </mat-select>\n            <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-lg-4 col-md-4 col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\">{{'Count'|translate}}</mat-label>\n            <input type=\"number\" matInput placeholder=\"5 \" formControlName=\"Count\">\n            <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\n            </mat-error>\n            <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\n              {{'NumberPattern' | translate }}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12\">\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\n            <mat-label class=\"text-capitalize\" >{{'Notice'|translate}}</mat-label>\n            <textarea type=\"text\" matInput  placeholder=\"Lorem inpus some text example\" rows=\"7\"  formControlName=\"TextArea\">\n          </textarea>\n          </mat-form-field>\n        </div>\n        <div class=\"col-12\" *ngIf=\"this.data.row.image !=null && this.data.row.image !=''; else elseblock\">\n          <a target=\"_blank\" [href]=\"createImgPath(this.data.row.image)\"> {{'ImgSrc'|translate}}</a>\n        </div>\n        <ng-template #elseblock>\n          <div class=\"col-12 \" id=\"fileInput\">\n            <mat-form-field>\n              <div class=\"d-flex justify-content-between\">\n                <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                  {{'Browse'|translate}}\n                </button>\n                <input type=\"file\" hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\" multiple=\"multiple\"\n                       accept=\"image/*\" />\n              </div>\n              <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </ng-template>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n      <button mat-button mat-dialog-close>{{'Cancel'|translate}}</button>\n      <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">{{'Save'|translate}}</button>\n    </mat-dialog-actions>\n  </form>\n\n</div>\n\n\n\n","import {Component, ElementRef,  OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../Core/models/Product';\nimport {CountryData} from '../../countries-all/CountryData';\nimport { MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {CargoService} from '../../../Core/services/cargo/cargo.service';\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\nimport {UserOrderService} from '../../../Core/services/Admin/userOrder/user-order.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-add-to-anbar-new-parcel',\n  templateUrl: './add-to-anbar-new-parcel.component.html',\n  styleUrls: ['./add-to-anbar-new-parcel.component.scss']\n})\nexport class AddToAnbarNewParcelComponent implements OnInit {\n\n  statementForm:FormGroup\n  fileAttr = 'Şəkil Seç';\n  fileToUpload:File;\n  products:Product[];\n  wallet:CountryData[];\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  constructor( public dialogRef: MatDialogRef<AddToAnbarNewParcelComponent>,\n               private languageService:LanguagesService,\n               private service:CargoService,\n               private proService:ProductService,\n               private cntService:CountriesService,\n               public serviceOrder:UserOrderService) {\n    this.getProduct()\n  }\n\n  ngOnInit(): void {\n    this.statementForm= new FormGroup({\n      Track: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n      FileInput: new FormControl('', [\n      ]),\n      Weight: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      CamexId: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      CamexPrice: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Product: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Name: new FormControl('', [\n          Validators.required\n        ]\n      ),\n      Price: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n\n      Count: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Wallet: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      TextArea: new FormControl('', [\n      ]),\n    })\n  }\n  getProduct(){\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        res.forEach(p=>{\n          p.productTranslates.forEach(pt=>{\n            if(pt.languageId==this.languageService.select.id){\n              p.productTranslates[0]=pt\n              this.products=res;\n            }\n          })\n        })\n      }\n    )\n    this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Şəkil Seç';\n    }\n  }\n  submit(){\n\n    const body = new FormData();\n    body.append(\"Track\",this.statementForm.controls[\"Track\"].value.trim())\n    if(this.fileToUpload!=undefined){\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\n    body.append(\"CamexPrice\",this.statementForm.controls[\"CamexPrice\"].value)\n    body.append(\"Weight\",this.statementForm.controls[\"Weight\"].value)\n\n    body.append(\"Name\",this.statementForm.controls[\"Name\"].value.trim())\n    body.append(\"Price\",this.statementForm.controls[\"Price\"].value)\n    body.append(\"CountryId\",this.statementForm.controls[\"Wallet\"].value)\n    body.append(\"Count\",this.statementForm.controls[\"Count\"].value)\n    body.append(\"Notice\",this.statementForm.controls[\"TextArea\"].value.trim())\n    body.append(\"CamexId\",this.statementForm.controls[\"CamexId\"].value)\n    body.append(\"PaymentStatus\",\"false\")\n\n    this.service.create(body).subscribe(\n      ()=> {\n        alertify.success(\"Added\");\n\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h2 mat-dialog-title>Anbara əlavə et</h2>\n<form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Izləmə kodu</mat-label>\n          <input type=\"text\" matInput  placeholder=\"05228964284282P\" formControlName=\"Track\">\n          <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"Track.errors?.minlength \" >\n            Ən azı 5 simvol olmalıdır\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Saytın / Mağazanın adı</mat-label>\n          <input type=\"text\" matInput  placeholder=\"Trendyol\" formControlName=\"Name\">\n          <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Məhsul</mat-label>\n          <mat-select  formControlName=\"Product\">\n            <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n              {{item.productTranslates[0].name}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Ümumi Məbləğ</mat-label>\n          <input type=\"number\" matInput placeholder=\"100\" formControlName=\"Price\">\n          <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Sayı</mat-label>\n          <input type=\"number\" matInput placeholder=\"5 \" formControlName=\"Count\">\n          <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12 \">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Valyuta</mat-label>\n          <mat-select  formControlName=\"Wallet\">\n            <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\n              {{item.wallet}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Camex ID</mat-label>\n          <input type=\"number\" matInput placeholder=\"123123 \" formControlName=\"CamexId\">\n          <mat-error  *ngIf=\"errorHandling('CamexId','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('CamexId','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Daşınma haqqı</mat-label>\n          <input type=\"number\" matInput placeholder=\"10 \" formControlName=\"CamexPrice\">\n          <mat-error  *ngIf=\"errorHandling('CamexPrice','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('CamexPrice','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Çəkisi</mat-label>\n          <input type=\"number\" matInput placeholder=\"123123 \" formControlName=\"Weight\">\n          <mat-error  *ngIf=\"errorHandling('Weight','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Weight','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Qeyd</mat-label>\n          <textarea type=\"text\" matInput  placeholder=\"somt text\" rows=\"7\"  formControlName=\"TextArea\">\n          </textarea>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12 \" id=\"fileInput\">\n        <mat-form-field>\n          <div class=\"d-flex justify-content-between\">\n            <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n            <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n              Seç\n            </button>\n            <input type=\"file\" hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\" multiple=\"multiple\"\n                   accept=\"image/*\" />\n          </div>\n          <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n    <button mat-button mat-dialog-close>Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">Yadda saxla </button>\n  </mat-dialog-actions>\n</form>\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {OfficeService} from '../../../../Core/services/Admin/office/office.service';\ndeclare let alertify:any;\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-update-office',\n  templateUrl: './update-office.component.html',\n  styleUrls: ['./update-office.component.scss']\n})\nexport class UpdateOfficeComponent implements OnInit {\n  UpdateForm:FormGroup\n  public Editor = ClassicEditor\n  constructor(\n    public dialogRef: MatDialogRef<UpdateOfficeComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:any,\n    private service:OfficeService\n  ) { }\n\n  ngOnInit(): void {\n    this.UpdateForm= new FormGroup({\n\n      NameEnglish: new FormControl(this.data.row.officeNameTranlates[0].name, [\n        Validators.required,\n      ]),\n      NameRussia: new FormControl(this.data.row.officeNameTranlates[1].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.row.officeNameTranlates[2].name, [\n        Validators.required,\n      ]),\n      PriceValue: new FormControl(this.data.row.priceValue, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      PhoneNumber: new FormControl(this.data.row.phoneNumber, [\n        Validators.required,\n      ]),\n      Url: new FormControl(this.data.row.url, [\n        Validators.required,\n      ]),\n      Email: new FormControl(this.data.row.email, [\n        Validators.required,\n        Validators.email,\n      ]),\n      Email2: new FormControl(this.data.row.email2, [\n        Validators.email,\n      ]),\n      AddressRussia: new FormControl(this.data.row.officeNameTranlates[1].address, [\n        Validators.required,\n      ]),\n      AddressEnglish: new FormControl(this.data.row.officeNameTranlates[0].address, [\n        Validators.required,\n      ]),\n      AddressAzerbaijan: new FormControl(this.data.row.officeNameTranlates[2].address, [\n        Validators.required,\n      ]),\n      WorkTimeRussia: new FormControl(this.data.row.officeNameTranlates[1].workTime, [\n        Validators.required,\n      ]),\n      WorkTimeEnglish: new FormControl(this.data.row.officeNameTranlates[0].workTime, [\n        Validators.required,\n      ]),\n      WorkTimeAzerbaijan: new FormControl(this.data.row.officeNameTranlates[2].workTime, [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(this.data.row.isActived ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.UpdateForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      id:this.data.row.id,\n      PriceValue:this.UpdateForm.controls[\"PriceValue\"].value,\n      Url:this.UpdateForm.controls[\"Url\"].value,\n      IsActived:this.UpdateForm.controls[\"IsActived\"].value,\n      PhoneNumber:this.UpdateForm.controls[\"PhoneNumber\"].value,\n      Email:this.UpdateForm.controls[\"Email\"].value,\n      Email2:this.UpdateForm.controls[\"Email2\"].value,\n      OfficeNameTranlates: [\n        {\n          id:this.data.row.officeNameTranlates[0].id,\n          name:this.UpdateForm.controls[\"NameEnglish\"].value.trim(),\n          address:this.UpdateForm.controls[\"AddressEnglish\"].value.trim(),\n          workTime:this.UpdateForm.controls[\"WorkTimeEnglish\"].value,\n          languageId:1\n        },\n        {\n          id:this.data.row.officeNameTranlates[1].id,\n          name:this.UpdateForm.controls[\"NameRussia\"].value.trim(),\n          address:this.UpdateForm.controls[\"AddressRussia\"].value.trim(),\n          workTime:this.UpdateForm.controls[\"WorkTimeRussia\"].value,\n          languageId:2\n        },\n        {\n          id:this.data.row.officeNameTranlates[2].id,\n          name:this.UpdateForm.controls[\"NameAzerbaijan\"].value.trim(),\n          address:this.UpdateForm.controls[\"AddressAzerbaijan\"].value.trim(),\n          workTime:this.UpdateForm.controls[\"WorkTimeAzerbaijan\"].value,\n          languageId:3\n        }\n      ],\n    }\n    this.service.updateOffice(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Ofisi yenilə</b>\n</h1>\n\n<form [formGroup]=\"UpdateForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  >\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\" >\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Dəyəri</mat-label>\n                <input type=\"number\" matInput formControlName=\"PriceValue\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('PriceValue','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('PriceValue','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Əlagə nömrəsi</mat-label>\n                <input type=\"text\" matInput formControlName=\"PhoneNumber\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('PhoneNumber','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Google xəritədə location linki</mat-label>\n                <input type=\"text\" matInput formControlName=\"Url\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Url','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"Email\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\n                  {{'EmailInCorrect' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rezerv Email </mat-label>\n                <input type=\"text\" matInput formControlName=\"Email2\"  placeholder=\"0.3\">\n                <mat-error  *ngIf=\"errorHandling('Email2','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Email2','email') && !errorHandling('Email2','required')\">\n                  {{'EmailInCorrect' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('AddressRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('AddressEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ünvan Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"AddressAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('AddressAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İş Vaxtı Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"WorkTimeAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!UpdateForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {LoginService} from '../services/login/login.service';\r\nimport {GlobalService} from '../services/global/global.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: LoginService, private globalPath:GlobalService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    // add JWT auth header if a user is logged in for API requests\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const isApiUrl = request.url.startsWith(this.globalPath.path);\r\n    if (accessToken && isApiUrl) {\r\n      request = request.clone({\r\n        setHeaders: { Authorization: `Bearer ${accessToken}` },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {BreakpointObserver, BreakpointState, MediaMatcher} from '@angular/cdk/layout';\nimport {\n  AfterContentChecked, AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {LoginService} from '../../Core/services/login/login.service';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddToAnbarNewParcelComponent} from '../dialogs/add-to-anbar-new-parcel/add-to-anbar-new-parcel.component';\nimport {NavigationService} from '../../Core/services/navigation/navigation.service';\nimport {UserNavVM} from '../../navbar/models/UserNavVM';\ndeclare let alertify: any;\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class LayoutComponent implements OnInit,OnDestroy,AfterViewInit {\n  userNav:UserNavVM;\n  mobileQuery: MediaQueryList;\n  showContainer: boolean;\n  logoSrc:string=\"../../../assets/image/navbar/mob-menu-logo.png\"\n  @ViewChild('snav', {static: true})\n  public sidenav: MatSidenav;\n  @ViewChild('snav') drawer: any\n  private _mobileQueryListener: () => void;\n  constructor(changeDetectorRef: ChangeDetectorRef,\n              media: MediaMatcher,\n              public authService:LoginService,\n              private _elementRef : ElementRef,\n              private navigation:NavigationService,\n              public dialog: MatDialog,public breakpointObserver: BreakpointObserver) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n  }\n\n  ngAfterViewInit(): void {\n setTimeout(()=>{\n   var element = document.getElementById(\"active\");\n   element.classList.remove(\"active\");\n   var element2 = document.getElementById(\"active2\");\n   element2.classList.remove(\"active\");\n   var element3 = document.getElementById(\"active3\");\n   element3.classList.remove(\"active\");\n   var element4 = document.getElementById(\"active4\");\n   element4.classList.remove(\"active\");\n     },1000)\n    }\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n    this.getUser()\n    this.breakpointObserver\n      .observe(['(max-width: 1000px)'])\n      .subscribe((state: BreakpointState) => {\n        if (state.matches) {\n          this.sidenav.close();\n        } else {\n          this.sidenav.open();\n        }\n      });\n  }\n  logout() {\n    this.authService.logout();\n  }\n\n\n  open(){\n    const dialogRefCreate = this.dialog.open(AddToAnbarNewParcelComponent, {\n      width: '1050px',\n      data: null\n    });\n\n  }\n  loaded:boolean=false\n  getUser(){\n    this.authService.user$.subscribe(user=> {\n      if (user != null && this.authService.end) {\n        this.navigation.getUser().subscribe(res=>{\n          this.userNav=res;\n          this.loaded=true\n        })\n      }\n    })\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/users/${serverPath}`;\n  }\n}\n","<div class=\"toolbar-container\" id=\"layout\" [class.toolbar-mobile]=\"mobileQuery.matches\" >\n  <mat-toolbar  class=\"toolbar\">\n    <div class=\"col-lg-2 col-md-3 col-sm-6 col-6 p-0\">\n      <h1 class=\"logo ml-3 text-uppercase\"><img [src]=\"logoSrc\" width=\"130\" alt=\"\"></h1>\n    </div>\n    <div class=\"col-lg-8 col-md-7 d-md-block p-0 d-sm-none d-none\">\n      <button mat-icon-button class=\"d-md-block d-sm-none d-none ml-3\" (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n    </div>\n  <div class=\"logout col-lg-2 col-md-2 col-sm-6 col-6 d-flex justify-content-end   \">\n    <button mat-icon-button routerLink=\"/home\" class=\"mr-2\"><i class=\"fad fa-home\" style=\"font-size: 16px\"></i> </button>\n    <button mat-icon-button class=\"d-md-block d-sm-none d-none\"  (click)=\"logout()\"><i class=\"far fa-power-off\" style=\"font-size: 16px\"></i></button>\n    <button mat-icon-button class=\"d-md-none d-sm-block d-block\" (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n  </div>\n  </mat-toolbar>\n<div style=\"height: 55px; width: 100%; display: none\" class=\"nav-line\"></div>\n  <mat-sidenav-container class=\"sidenav-container\">\n\n    <mat-sidenav  style=\"transform: none; visibility: visible;\" #snav [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                 [fixedInViewport]=\"mobileQuery.matches\"  fixedTopGap=\"56\">\n      <div class=\"w-100 background-image\">\n        <div class=\"d-flex align-items-center flex-column pt-4 \">\n         <div *ngIf=\"loaded\" class=\"d-flex align-items-center flex-column \">\n           <div class=\"profile-img mb-4\"  [ngStyle]=\"{'background-image': 'url('+createImgPath(userNav.image)+')'}\"></div>\n           <div class=\"info text-center mb-3\" >\n             <p class=\"m-0 mb-2\">\n                <span  *ngIf=\"userNav.companyName else privateuser\" class=\"username text-capitalize\">\n                  <span *ngIf=\"userNav.companyName.length>15 else elseBlock2\"> {{userNav.companyName.substr(0,15)}}...</span>\n                  <ng-template #elseBlock2>\n                    <span > {{userNav.companyName}}</span>\n                  </ng-template>\n                </span>\n               <ng-template #privateuser>\n                 <span  class=\"username text-capitalize\"  >{{userNav.name.substr(0,8)+\" \"+userNav.surname.substr(0,8)}}</span>\n               </ng-template>\n             </p>\n           </div>\n         </div>\n          <div class=\"myaccount mt-1\">\n            <mat-accordion>\n              <mat-expansion-panel>\n                <mat-expansion-panel-header  >\n                  <mat-panel-title>\n                    <div class=\"w-100 mr-5 d-flex align-items-center\">\n                      <i class=\"far fa-user mr-2\"></i>   Mənim Hesabım\n                    </div>\n                  </mat-panel-title>\n                </mat-expansion-panel-header >\n                  <div class=\"mat-expansion-panel-content active\" id=\"active\"  >\n            <!--        <mat-list-item routerLink=\"[child.route]\">\n                      <div class=\"white\">\n                        Tənzimləmələr\n                      </div>\n                    </mat-list-item>-->\n                    <mat-list-item (click)=\"logout()\" role=\"button\">\n                      <div class=\"white\">\n                        Çıxış\n                      </div>\n                    </mat-list-item>\n                  </div>\n              </mat-expansion-panel>\n            </mat-accordion>\n          </div>\n        </div>\n      </div>\n      <mat-nav-list>\n<!--        <mat-list-item routerLink=\"/admin/dashboard\">\n          <div class=\"slidenav-item\">\n            <i class=\"far fa-chart-line mr-2\"></i>\n            Dashboard\n          </div>\n        </mat-list-item>-->\n        <mat-list-item routerLink=\"/admin/users\">\n          <div class=\"slidenav-item\">\n            <i class=\"far fa-users mr-2\"></i>\n            İstifadəçilər\n          </div>\n        </mat-list-item>\n       <mat-accordion>\n            <mat-expansion-panel >\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  <div class=\"slidenav-item\">\n                    <i class=\"far fa-browser mr-2\"></i>  Əməliyyatlar\n                  </div>\n\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n             <div class=\"active\" id=\"active3\">\n               <mat-list-item (click)=\"open()\">\n                 <div  class=\"slidenav-item\">\n                   Təzə bağlama əlavə et\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/order-in-process\">\n                 <div  class=\"slidenav-item\">\n                   Hazırlanan sifarişlər\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/order-processed\">\n                 <div  class=\"slidenav-item\">\n                   Hazır sifarişlər\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/statements\">\n                 <div  class=\"slidenav-item\">\n                   Beyanatlar\n                 </div>\n               </mat-list-item>\n             </div>\n\n            </mat-expansion-panel>\n          </mat-accordion>\n        <mat-accordion>\n          <mat-expansion-panel >\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <div class=\"slidenav-item\">\n                  <i class=\"far fa-boxes mr-2\"></i>  Bağlamanın statusu\n                </div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n             <div class=\"active\" id=\"active2\">\n               <mat-list-item  routerLink=\"/admin/parcels/InAnbar\" >\n                 <div  class=\"slidenav-item\">\n                   Anbarda Olan\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/parcels/InWay\" >\n                 <div  class=\"slidenav-item\">\n                   Yolda Olan\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/parcels/InСustoms\" >\n                 <div  class=\"slidenav-item\">\n                   Gömrük yoxlanışında olan\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/parcels/InOffice\" >\n                 <div  class=\"slidenav-item\">\n                   Ofisdə olan\n                 </div>\n               </mat-list-item>\n               <mat-list-item routerLink=\"/admin/parcels/end\" >\n                 <div  class=\"slidenav-item\">\n                   Bitən\n                 </div>\n               </mat-list-item>\n             </div>\n          </mat-expansion-panel>\n        </mat-accordion>\n        <mat-accordion>\n          <mat-expansion-panel >\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                <div class=\"slidenav-item\">\n                  <i class=\"far fa-sitemap mr-2\"></i> Saytın CRUD-du\n                </div>\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n            <div class=\"active\" id=\"active4\">\n              <mat-list-item routerLink=\"/admin/countries\">\n                <div class=\"slidenav-item\">\n                  Ölkələr\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/cities\">\n                <div class=\"slidenav-item\">\n                  Şəhərlər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/offices\">\n                <div class=\"slidenav-item\">\n                  Ofislər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/shops\">\n                <div class=\"slidenav-item\">\n                  Maqazinlər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/courier-service\">\n                <div class=\"slidenav-item\">\n                  Kuryer servisi\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/service\">\n                <div class=\"slidenav-item\">\n                  Servislər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/faq\">\n                <div class=\"slidenav-item\">\n                  FAQ\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/news\">\n                <div  class=\"slidenav-item\">\n                  Xəbərlər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/flights\">\n                <div  class=\"slidenav-item\">\n                  Reyslər\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/bio\">\n                <div  class=\"slidenav-item\">\n                  Bio\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/about-description\">\n                <div  class=\"slidenav-item\">\n                  Haqqımızda\n                </div>\n              </mat-list-item>\n              <mat-list-item routerLink=\"/admin/contact-notice\">\n                <div  class=\"slidenav-item\">\n                  Əlagə (bildirişi)\n                </div>\n              </mat-list-item>\n            </div>\n          </mat-expansion-panel>\n        </mat-accordion>\n        <mat-list-item routerLink=\"/admin/products\">\n          <div class=\"slidenav-item\">\n            <i class=\"far fa-boxes-alt mr-2\"></i>\n             Məhsullar\n          </div>\n\n        </mat-list-item>\n        <mat-list-item routerLink=\"/admin/replies\">\n          <div class=\"slidenav-item\">\n            <i class=\"fas fa-reply-all mr-2\"></i>\n            İstifadəçilərin sorğuları\n          </div>\n        </mat-list-item>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <ng-content>\n      </ng-content>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-title',\r\n  templateUrl: './title.component.html',\r\n  styleUrls: ['./title.component.scss']\r\n})\r\nexport class TitleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  @Input() title:string;\r\n}\r\n","<section id=\"title\"  >\r\n    <div class=\" pt-5 d-flex justify-content-center\">\r\n      <div class=\"title text-center\">\r\n        <a routerLink=\"/home\"><span>{{'HomePage' | translate }}</span></a>\r\n        <i class=\"fa fa-long-arrow-right\"></i>\r\n        <span>{{title}}</span>\r\n        <h2><b>{{title}}</b></h2>\r\n      </div>\r\n    </div>\r\n</section>\r\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {News} from '../../../models/News';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n  get():Observable<News[]>{\n    return this.http.get<News[]>(`${this.global.path}News`);\n  }\n  getActiveWithId(id):Observable<News>{\n    return this.http.get<News>(`${this.global.path}News/${id}`);\n  }\n  getActive():Observable<News[]>{\n    return this.http.get<News[]>(`${this.global.path}News/active`);\n  }\n  create(body:FormData){\n    return this.http.post(`${this.global.path}News`,body);\n  }\n  update(body:FormData){\n    return this.http.put(`${this.global.path}News/${body.get(\"id\")}`,body);\n  }\n  delete(id){\n    return this.http.delete(`${this.global.path}News/${id}`);\n  }\n}\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CountriesService} from '../../../../Core/services/Admin/countries/countries.service';\ndeclare let alertify:any;\n\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n@Component({\n  selector: 'app-country-edit-dialog',\n  templateUrl: './country-edit-dialog.component.html',\n  styleUrls: ['./country-edit-dialog.component.scss']\n})\nexport class CountryEditDialogComponent implements OnInit {\n\n  editForm:FormGroup\n  fileAttr = 'Şəkil seç';\n  fileAttr2 = 'Şəkil seç';\n  fileToUpload:File\n  fileToUpload2:File\n  public Editor = ClassicEditor;\n  @ViewChild('fileInput') fileInput: ElementRef;\n  @ViewChild('fileInput2') fileInput2: ElementRef;\n  data:any\n  constructor(\n    public dialogRef: MatDialogRef<CountryEditDialogComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public countryData:any,\n    private service:CountriesService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.data=this.countryData.row\n    this.editForm= new FormGroup({\n      Name: new FormControl(this.data.name, [\n        Validators.required,\n      ]),\n      Wallet: new FormControl(this.data.wallet, [\n        Validators.required,\n      ]),\n      Value: new FormControl(this.data.value, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      NameEnglish: new FormControl(this.data.noticeTranslate[0].name, [\n        Validators.required,\n      ]),\n      NameRussia: new FormControl(this.data.noticeTranslate[1].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.noticeTranslate[2].name, [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(this.data.isActived ),\n      FileInput: new FormControl('', [\n      ]),\n      FileInput2: new FormControl('', [\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.editForm.controls[control].hasError(error);\n  }\n\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Choose File';\n    }\n  }\n  uploadFileEvt2(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr2 = '';\n      this.fileAttr2 = imgFile.target.files[0].name\n\n      this.fileToUpload2= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput2.nativeElement.value = \"\";\n    } else {\n      this.fileAttr2 = 'Choose File';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    if(this.fileToUpload2 == undefined){\n      body.append(\"FlagPhoto\",null)\n    }\n    else{\n      body.append(\"FlagPhoto\",this.fileToUpload2,this.fileToUpload2.name)\n    }\n    const NoticeTranlates= [\n      {\n        Id:this.data.noticeTranslate[0].id,\n        Name:this.editForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.noticeTranslate[1].id,\n        Name:this.editForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.noticeTranslate[2].id,\n        Name:this.editForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Name\",this.editForm.controls[\"Name\"].value.trim())\n    body.append(\"Wallet\",this.editForm.controls[\"Wallet\"].value)\n    body.append(\"Value\",this.editForm.controls[\"Value\"].value)\n    body.append(\"IsActived\",this.editForm.controls[\"IsActived\"].value)\n    body.append(\"id\",this.data.id.toString())\n    body.append(\"Notices\",JSON.stringify(NoticeTranlates))\n    this.service.updateCountry(body).subscribe(\n      ()=> {     this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Ölkə yenilə</b>\n</h1>\n\n<form [formGroup]=\"editForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Ölkənin adı</mat-label>\n                <input type=\"text\" matInput formControlName=\"Name\"  placeholder=\"USA\">\n                <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Dəyəri</mat-label>\n                <input type=\"number\" matInput formControlName=\"Value\"  placeholder=\"1\">\n                <mat-error  *ngIf=\"errorHandling('Value','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Value','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Valyuta</mat-label>\n                <input type=\"text\" matInput formControlName=\"Wallet\"  placeholder=\"USD\">\n                <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq Rus dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq İnglis dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <mat-label class=\"text-capitalize\">Xəbərdarlıq Azərbaycan dilində</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"NameAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Bayraq</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Arxa şəkil</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr2\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput2.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput2 formControlName=\"FileInput2\"  (change)=\"uploadFileEvt2($event)\" name=\"uploadFile2\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput2','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n                <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                  Activasiya\n                </mat-checkbox>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!editForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {LoginService} from '../services/login/login.service';\r\nimport {Router} from '@angular/router';\r\nimport {catchError} from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: LoginService, private router: Router) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          this.authService.clearLocalStorage();\r\n          this.router.navigate(['login'], {\r\n            queryParams: { returnUrl: this.router.routerState.snapshot.url },\r\n          });\r\n        }\r\n\r\n        if (!environment.production) {\r\n          console.error(err);\r\n        }\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Component, Inject,  OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport { TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\r\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\r\nimport {CountryData} from '../../../Admin/countries-all/CountryData';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {BalanceService} from '../../../Core/services/balance/balance.service';\r\nimport {OrderService} from '../../../Core/services/order/order.service';\r\n\r\ndeclare let alertify:any\r\ndeclare let Swal:any\r\n\r\n@Component({\r\n  selector: 'app-order-dialog',\r\n  templateUrl: './order-dialog.component.html',\r\n  styleUrls: ['./order-dialog.component.scss'],\r\n  encapsulation:ViewEncapsulation.None\r\n})\r\nexport class OrderDialogComponent implements OnInit {\r\n  orderForm:FormGroup\r\n  wallet:CountryData[];\r\n\r\n user_agreement:string;\r\n  constructor(private languageService:LanguagesService,\r\n              private translate: TranslateService,\r\n              private cntService:CountriesService,\r\n              public dialogRef: MatDialogRef<OrderDialogComponent>,\r\n              private balanceService:BalanceService,\r\n              private service:OrderService,\r\n              @Inject(MAT_DIALOG_DATA) public data:string,\r\n  ) {\r\n\r\n    this.orderForm= new FormGroup({\r\n      Name: new FormControl(\r\n        '', [\r\n          Validators.required\r\n        ]\r\n      ),\r\n      Wallet: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      CargoPrice: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Url: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      About: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      Price: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n\r\n      Count: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      Note: new FormControl('', [\r\n      ]),\r\n      PriceTotal: new FormControl('', [\r\n\r\n        Validators.required,\r\n        Validators.pattern(/^\\d*\\.?\\d*$/)\r\n      ]),\r\n      IsTermsAccepted: new FormControl('', [\r\n        Validators.required,\r\n      ])\r\n    })\r\n    this.user_agreement=data\r\n    this.get();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  get(){\r\n    this.cntService.getCountriesActive().subscribe(\r\n      (res)=>{\r\n        this.wallet=res;\r\n      })\r\n  }\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.orderForm.controls[control].hasError(error);\r\n  }\r\n  totalPrice(){\r\n    this.orderForm.controls[\"PriceTotal\"].setValue(((this.orderForm.controls[\"CargoPrice\"].value+this.orderForm.controls[\"Price\"].value)*this.orderForm.controls[\"Count\"].value)+0.5)\r\n  }\r\n  submit(){\r\n    const body = new FormData();\r\n    const bodyBalance = new FormData();\r\n    body.append(\"Name\",this.orderForm.controls[\"Name\"].value.trim())\r\n    body.append(\"CountryId\",this.orderForm.controls[\"Wallet\"].value)\r\n    body.append(\"CargoPrice\",this.orderForm.controls[\"CargoPrice\"].value)\r\n    body.append(\"Price\",this.orderForm.controls[\"Price\"].value)\r\n    body.append(\"Count\",this.orderForm.controls[\"Count\"].value)\r\n    body.append(\"Url\",this.orderForm.controls[\"Url\"].value.trim())\r\n    body.append(\"NoticeProduct\",this.orderForm.controls[\"About\"].value.trim())\r\n    body.append(\"Notice\",this.orderForm.controls[\"Note\"].value.trim())\r\n    body.append(\"IsTermsAccepted\",this.orderForm.controls[\"IsTermsAccepted\"].value)\r\n    bodyBalance.append(\"total\",(((this.orderForm.controls[\"CargoPrice\"].value+this.orderForm.controls[\"Price\"].value)*this.orderForm.controls[\"Count\"].value)+0.5).toString())\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, send it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        this.balanceService.remove(bodyBalance).subscribe(\r\n          (res)=> {\r\n            body.append(\"ReceiptId\",res.toString())\r\n            this.service.create(body).subscribe(()=>{\r\n              Swal.fire(\r\n                'Successed!',\r\n                'Your statement sent.',\r\n                'success'\r\n              )\r\n              this.dialogRef.close();\r\n            },error => {\r\n              error.error.messages.forEach(e => {\r\n                if (e.lang_id == this.languageService.select.id) {\r\n                  alertify.error(e.messageLang);\r\n                }\r\n              })\r\n            })\r\n          },\r\n          error => {\r\n            error.error.messages.forEach(e => {\r\n              if (e.lang_id == this.languageService.select.id) {\r\n                alertify.error(e.messageLang);\r\n              }\r\n            })\r\n          }\r\n        )\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n}\r\n","<div id=\"dialog\">\r\n  <h2 mat-dialog-title>{{'Order'|translate}}</h2>\r\n  <form [formGroup]=\"orderForm\" novalidate (ngSubmit)=\"submit()\">\r\n    <mat-dialog-content class=\"mat-typography\">\r\n      <div class=\"d-flex flex-wrap w-100 mt-4\">\r\n        <div class=\"col-lg-6 col-md-6 col-12 \">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'SiteNMag'|translate}}</mat-label>\r\n            <input type=\"text\" matInput  placeholder=\"Trendyol\" formControlName=\"Name\">\r\n            <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-3 col-12 \">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Wallet'|translate}}</mat-label>\r\n            <mat-select  formControlName=\"Wallet\">\r\n              <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\r\n                {{item.wallet}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-3 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'CargoPrice'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"10\" (keyup)=\"totalPrice()\" formControlName=\"CargoPrice\">\r\n            <mat-error  *ngIf=\"errorHandling('CargoPrice','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('CargoPrice','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-7 col-md-7 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'Url'|translate}}</mat-label>\r\n            <input type=\"text\" matInput placeholder=\"https://camex.az/?module=profile&lang=az \" formControlName=\"Url\">\r\n            <mat-error  *ngIf=\"errorHandling('Url','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-5 col-md-5 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'Count'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"5 \" (keyup)=\"totalPrice()\"  formControlName=\"Count\">\r\n            <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'AboutProduct'|translate}}<</mat-label>\r\n            <textarea type=\"text\" matInput  placeholder=\"Some text example\" rows=\"4\"  formControlName=\"About\">\r\n          </textarea>\r\n            <mat-error  *ngIf=\"errorHandling('About','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-4 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'Price'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"100 \" (keyup)=\"totalPrice()\"  formControlName=\"Price\">\r\n            <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-6 col-md-4 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\" >{{'Notice'|translate}}</mat-label>\r\n            <input type=\"text\" matInput  placeholder=\"Some text example\" formControlName=\"Note\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-4 col-12\">\r\n          <mat-form-field class=\"w-100\" appearance=\"fill\">\r\n            <mat-label class=\"text-capitalize\">{{'TotalPrice'|translate}}</mat-label>\r\n            <input type=\"number\" matInput placeholder=\"100 \" disabled readonly [attr.disabled]=\"true\" formControlName=\"PriceTotal\">\r\n            <mat-error  *ngIf=\"errorHandling('PriceTotal','pattern') \" >\r\n              {{'NumberPattern' | translate }}\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" required  formControlName=\"IsTermsAccepted\">\r\n            {{'Terms1' | translate }}  <a [href]=\"user_agreement\" target=\"_blank\">{{'Terms2' | translate }} </a>{{'Terms3' | translate }}\r\n          </mat-checkbox>\r\n        </div>\r\n      </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\r\n      <button mat-button mat-dialog-close>{{'Cancel'|translate}}</button>\r\n      <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!orderForm.valid\">{{'PayNConfirm'|translate}}</button>\r\n    </mat-dialog-actions>\r\n  </form>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-title-admin',\n  templateUrl: './title-admin.component.html',\n  styleUrls: ['./title-admin.component.scss']\n})\nexport class TitleAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  @Input() title:string;\n}\n","<section id=\"title\">\n  <div class=\"page-header page-header-light\" >\n    <div class=\"page-header-content header-elements-md-inline\">\n      <div class=\"page-title d-flex\">\n        <h2 class=\"text-capitalize\"><i class=\"far fa-arrow-circle-left mr-2\"></i> <span class=\"font-weight-bolder \">Əsas səyfə</span> - {{title}}</h2>\n      </div>\n    </div>\n    <div class=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\n      <div class=\"d-flex\">\n        <div class=\"breadcrumb\">\n          <span class=\"breadcrumb-item mr-2 d-flex align-items-baseline\"><i class=\"fas fa-home mr-2\"></i> Əsas səyfə</span>\n          <span class=\"breadcrumb-item active d-flex align-items-baseline text-capitalize\">{{title}}</span>\n        </div>\n        <a href=\"#\" class=\"header-elements-toggle text-default d-md-none\"><i class=\"icon-more\"></i></a>\n      </div>\n    </div>\n  </div>\n\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-layout>\n  <div id=\"dashboard\">\n    <app-title-admin [title]=\"'dashboard'\"></app-title-admin>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa ducimus ipsa soluta voluptatibus. Asperiores dolores enim fuga iusto, maxime minima minus modi mollitia, necessitatibus pariatur recusandae repellendus temporibus! Dolorum, obcaecati.</p>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa ducimus ipsa soluta voluptatibus. Asperiores dolores enim fuga iusto, maxime minima minus modi mollitia, necessitatibus pariatur recusandae repellendus temporibus! Dolorum, obcaecati.</p>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa ducimus ipsa soluta voluptatibus. Asperiores dolores enim fuga iusto, maxime minima minus modi mollitia, necessitatibus pariatur recusandae repellendus temporibus! Dolorum, obcaecati.</p>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa ducimus ipsa soluta voluptatibus. Asperiores dolores enim fuga iusto, maxime minima minus modi mollitia, necessitatibus pariatur recusandae repellendus temporibus! Dolorum, obcaecati.</p>\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Culpa ducimus ipsa soluta voluptatibus. Asperiores dolores enim fuga iusto, maxime minima minus modi mollitia, necessitatibus pariatur recusandae repellendus temporibus! Dolorum, obcaecati.</p>\n  </div>\n </app-layout>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {ShopService} from '../../../../Core/services/Admin/shop/shop.service';\nimport {Shop} from '../../../../Core/models/Shop';\ndeclare let alertify:any\n@Component({\n  selector: 'app-shop-update-dialog',\n  templateUrl: './shop-update-dialog.component.html',\n  styleUrls: ['./shop-update-dialog.component.scss']\n})\nexport class ShopUpdateDialogComponent implements OnInit {\n\n  updateForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ShopUpdateDialogComponent>,\n    private languageService:LanguagesService,\n    private service:ShopService,\n    @Inject(MAT_DIALOG_DATA) public data:Shop,\n  ) { }\n\n  ngOnInit(): void {\n    this.updateForm= new FormGroup({\n      NameEnglish: new FormControl(this.data.shopTranslates[0].name, [\n        Validators.required,\n      ]),\n      NameRussia: new FormControl(this.data.shopTranslates[1].name, [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl(this.data.shopTranslates[2].name, [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(this.data.isActived ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.updateForm.controls[control].hasError(error);\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"IsActived\",this.updateForm.controls[\"IsActived\"].value)\n    body.append(\"id\",this.data.id.toString())\n    const ShopTranslates= [\n      {\n        Id:this.data.shopTranslates[0].id,\n        Name:this.updateForm.controls[\"NameEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.shopTranslates[1].id,\n        Name:this.updateForm.controls[\"NameRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.shopTranslates[2].id,\n        Name:this.updateForm.controls[\"NameAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(ShopTranslates))\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Mağazanı yenilə</b>\n</h1>\n\n<form [formGroup]=\"updateForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı İnglis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!updateForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import {ServiceTranslate} from './ServiceTranslate';\r\n\r\nexport class Service {\r\n  id: number;\r\n  image: string;\r\n  isActived: boolean;\r\n  isDeleted: boolean;\r\n  serviceTranslates: ServiceTranslate[];\r\n}\r\n","import {NewsTranslate} from './NewsTranslate';\r\n\r\nexport class News {\r\n  id: number;\r\n  image: string;\r\n  isActived: boolean;\r\n  isDeleted: boolean;\r\n  newsTranslates: NewsTranslate[];\r\n  createdDate: string;\r\n}\r\n","import {CourierTranslate} from './CourierTranslate';\r\n\r\nexport class CourierLocation {\r\n  id: number;\r\n  price: number;\r\n  translates: string;\r\n  isActived: boolean;\r\n  isDeleted: boolean;\r\n  courierTranslates: CourierTranslate[];\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Data} from '../role-dialog/role-dialog.component';\nimport {UsersService} from '../../../../Core/services/Admin/users/users.service';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {FullPrivateUser} from '../../../Models/FullPrivateUser';\nimport {HttpHeaders, HttpParams} from '@angular/common/http';\n\n@Component({\n  selector: 'app-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  customer:FullPrivateUser\n  constructor(\n    public dialogRef: MatDialogRef<InfoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:Data,\n    private service:UsersService,\n    private languageService:LanguagesService\n  ) {\n    this.getUserPrivate()\n  }\n\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  selectedCitizenship:string=''\n  selectedGender:string=''\n  selectedCity:string\n  selectedOffice:string\n  getUserPrivate(){\n    this.service.getUserPrivate(this.data.id).subscribe(res=>{\n      this.customer=res;\n      this.selectedCitizenship+=res.privateCustomer.citizenshipId\n      this.selectedGender+=res.privateCustomer.isMan\n      res.user.city.cityNameTranslates.forEach(e=>{\n        if(e.languageId==this.languageService.select.id){\n          this.selectedCity=e.name\n        }\n      })\n      res.user.office.officeNameTranlates.forEach(e=>{\n        if(e.languageId==this.languageService.select.id){\n          this.selectedOffice=e.name\n        }\n      })\n\n      this.loaded=true;\n    })\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div *ngIf=\"loaded else elseblock\">\n  <h1 class=\"mb-2\" mat-dialog-title>\n    <b>İnformasiya</b>\n  </h1>\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <h4 class=\" pl-3 pt-4 pb-2 w-100 text-uppercase\"><b>{{'PersonalInfo' | translate }} </b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Email' | translate }} </mat-label>\n                <input type=\"email\" matInput [value]=\"customer.user.email\" disabled placeholder=\"camex.example@example.com\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'IDCardNumber' | translate }}</mat-label>\n                <input type=\"number\" matInput [value]=\"customer.privateCustomer.passportNumber\" disabled  placeholder=\"12345678\">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'registrationName' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.privateCustomer.name\" disabled placeholder=\"Seynur\" >\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'registrationSurname' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.privateCustomer.surname\" disabled placeholder=\"Məmmədov\" >\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'registrationLastname' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.privateCustomer.lastname\" disabled placeholder=\"Seymur\" >\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'BirthDate' | translate }}</mat-label>\n                <input matInput [value]=\"customer.privateCustomer.birthday\" disabled [matDatepicker]=\"picker\" >\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\" >{{'Citizenship' | translate }}</mat-label>\n                <mat-select [(value)]=\"selectedCitizenship\" disabled>\n                  <mat-option value=\"1\" class=\"text-capitalize\">\n                    {{'CitizenNonAz' | translate }}\n                  </mat-option>\n                  <mat-option value=\"2\" class=\"text-capitalize\">\n                    {{'CitizenAz' | translate }}\n                  </mat-option>\n                </mat-select>\n\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12 d-flex flex-wrap\">\n              <div class=\"col-lg-6 col-md-6 col-12 p-0\">\n                <mat-form-field class=\"w-100\" appearance=\"fill\">\n                  <mat-label class=\"text-capitalize\"> {{'PassIIN' | translate }}</mat-label>\n                  <input type=\"text\" matInput [value]=\"customer.privateCustomer.finCode\" disabled placeholder=\"4FRKPVD\" >\n                </mat-form-field>\n              </div>\n              <div class=\"col-lg-6 col-md-6 col-12 p-0 pl-lg-1 pl-md-1 d-flex align-items-center justify-content-between\">\n                <mat-form-field class=\"w-100\" appearance=\"fill\">\n                  <mat-label class=\"text-capitalize\" >{{'Gender' | translate }}</mat-label>\n                  <mat-select [(value)]=\"selectedGender\" disabled>\n                    <mat-option value=\"true\" class=\"text-capitalize\">\n                      {{'Male' | translate }}\n                    </mat-option>\n                    <mat-option value=\"false\" class=\"text-capitalize\">\n                      {{'Female' | translate }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n            </div>\n          </div>\n\n          <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'Contact' | translate }}</b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\" >\n                <mat-label class=\"text-capitalize\">{{'City' | translate }}</mat-label>\n                <mat-select value=\"selected\" disabled>\n                  <mat-option value=\"selected\" class=\"text-capitalize\" selected>\n                    {{selectedCity}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Address' | translate }}</mat-label>\n                <input type=\"text\" matInput [value]=\"customer.user.address\" disabled placeholder=\"Nizami rayonu, Cəmşid Naxçivanski 73 \">\n              </mat-form-field>\n            </div>\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field appearance=\"fill\" class=\"w-100\">\n                <mat-label class=\"text-capitalize\">{{'PhoneNum' | translate }}</mat-label>\n                <input type=\"text\" [value]=\"customer.user.phoneNumber\" disabled matInput placeholder=\"559294860\" >\n              </mat-form-field>\n            </div>\n          </div>\n          <h4 class=\" pl-3  pt-4 pb-2 w-100 text-uppercase\"><b>{{'OfficeTitle' | translate }}</b></h4>\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-lg-6 col-md-12 col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">{{'Office' | translate }}</mat-label>\n                <mat-select  value=\"selected\" disabled>\n                  <mat-option  value=\"selected\" class=\"text-capitalize\">\n                    {{selectedOffice}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<ng-template #elseblock>\n  <h4><i><b>Loading....</b></i></h4>\n</ng-template>\n<div mat-dialog-actions class=\"w-100 justify-content-end\">\n  <button mat-button (click)=\"onNoClick()\" color=\"primary\">Ok</button>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {LoginService} from '../services/login/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private authService: LoginService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    return this.authService.user$.pipe(\r\n      map((user) => {\r\n        if (user) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['login'], {\r\n            queryParams: { returnUrl: state.url },\r\n          });\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CountryData} from '../countries-all/CountryData';\nimport {FAQ} from '../../Core/models/FAQ';\nimport {FaqService} from '../../Core/services/Admin/faq/faq.service';\nimport {FaqUpdateComponent} from '../dialogs/faq/faq-update/faq-update.component';\nimport {FaqCreateComponent} from '../dialogs/faq/faq-create/faq-create.component';\n\ndeclare let Swal:any\ndeclare let alertify:any\n@Component({\n  selector: 'app-faqadmin',\n  templateUrl: './faqadmin.component.html',\n  styleUrls: ['./faqadmin.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class FAQAdminComponent implements OnInit {\n\n  dataSource: MatTableDataSource<FAQ>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  faqs:FAQ[];\n  displayedColumns: string[] = ['name','isActived','actions'];\n  constructor(public service:FaqService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n    this.get()\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n      this.faqs=res;\n      this.dataSource = new MatTableDataSource( this.faqs);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n\n  openDialogEdit(row:CountryData): void {\n\n    const dialogRefEdit = this.dialog.open(FaqUpdateComponent, {\n      width: '1050px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(FaqCreateComponent, {\n      width: '1050px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'FAQ'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">FAQ</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"name\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Adı </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.faqTranslates[2].title}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyat </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Shop} from '../Core/models/Shop';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ShopService} from '../Core/services/Admin/shop/shop.service';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-shoping',\r\n  templateUrl: './shoping.component.html',\r\n  styleUrls: ['./shoping.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ShopingComponent implements OnInit {\r\n  constructor(public service:ShopService,private translate: TranslateService,private languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n\r\n  tabs: Shop[];\r\n  get(){\r\n    this.service.getActive().subscribe(res=>{\r\n      res.forEach(r=>{\r\n        r.shopTranslates.forEach(st=>{\r\n          if(st.languageId==this.languageService.select.id){\r\n            r.shopTranslates[0]=st\r\n          }\r\n        })\r\n      })\r\n      this.tabs=res;\r\n    })\r\n  }\r\n  bannerSrc:string=\"../../assets/image/banners/shop-banner.png\";\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<app-banner [name]=\"'shopping' | translate\" [bannerSrc]=\"bannerSrc\"></app-banner>\r\n<section id=\"list\">\r\n  <div class=\"container-fluid  pl-pr-10 pt-5\">\r\n    <mat-tab-group class=\"pt-5 \">\r\n      <mat-tab *ngFor=\"let tab of tabs\">\r\n        <ng-template mat-tab-label ><b>{{tab.shopTranslates[0].name}}</b></ng-template>\r\n        <div class=\"w-100 link-content d-flex flex-wrap mt-2 mb-4 pl-4 \">\r\n            <div class=\"rounded  col-xl-4 col-lg-6 col-md-6 col-sm-12  col-12 d-flex align-items-center justify-content-center mt-4 \" *ngFor=\"let link of tab.shopLinks\">\r\n              <div class=\"item rounded overflow-hidden\">\r\n                <p class=\"m-0 ml-4 d-flex align-items-center\">\r\n                  <i class=\"far fa-link mr-3\" style=\"color: #2780dc\"></i>\r\n                  <a href=\"{{link.link}}\" target=\"_blank\">\r\n                   <span *ngIf=\"link.link.length>25;else elseblock\">\r\n                      {{link.link.substr(0,25)}}..\r\n                    </span>\r\n                    <ng-template #elseblock>\r\n                       {{link.link}}\r\n                    </ng-template>\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {ServiceService} from '../../../../Core/services/Admin/service/service.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {Service} from '../../../../Core/models/Service';\n@Component({\n  selector: 'app-service-update',\n  templateUrl: './service-update.component.html',\n  styleUrls: ['./service-update.component.scss']\n})\nexport class ServiceUpdateComponent implements OnInit {\n  fileAttr = 'Şəkil seç';\n  fileToUpload:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ServiceUpdateComponent>,\n    private languageService:LanguagesService,\n    private service:ServiceService,\n    @Inject(MAT_DIALOG_DATA) public data:Service\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(this.data.isActived ),\n      TitleRussia: new FormControl(this.data.serviceTranslates[1].title, [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl(this.data.serviceTranslates[0].title, [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl(this.data.serviceTranslates[2].title, [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl(this.data.serviceTranslates[1].description, [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl(this.data.serviceTranslates[0].description, [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl(this.data.serviceTranslates[2].description, [\n        Validators.required,\n      ]),\n      FileInput: new FormControl('', [\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Şəkil seç';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    if(this.fileToUpload == undefined){\n      body.append(\"Photo\",null)\n    }\n    else{\n      body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    }\n    body.append(\"id\",this.data.id.toString())\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const CourierTranslates= [\n      {\n        Id:this.data.serviceTranslates[0].id,\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Id:this.data.serviceTranslates[1].id,\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Id:this.data.serviceTranslates[2].id,\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(CourierTranslates))\n    this.service.update(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Servis Yenilə</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\" >\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Rus dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İnglis dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Azərbaycan dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Servisin İconu</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yenilə</button>\n  </div>\n\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {CityService} from '../../../../Core/services/Admin/city/city.service';\ndeclare let alertify:any;\n@Component({\n  selector: 'app-create-city',\n  templateUrl: './create-city.component.html',\n  styleUrls: ['./create-city.component.scss']\n})\nexport class CreateCityComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<CreateCityComponent>,\n    private languageService:LanguagesService,\n    private service:CityService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      NameRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      NameEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      NameAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      IsActived: new FormControl(false ),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = {\n      IsActived:this.createForm.controls[\"IsActived\"].value,\n      CityNameTranslates: [\n        {\n          name:this.createForm.controls[\"NameEnglish\"].value.trim(),\n          languageId:1\n        },\n        {\n          name:this.createForm.controls[\"NameRussia\"].value.trim(),\n          languageId:2\n        },\n        {\n          name:this.createForm.controls[\"NameAzerbaijan\"].value.trim(),\n          languageId:3\n        }\n      ],\n    }\n    this.service.createCity(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Şəhər yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Rus dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameRussia\"  placeholder=\"Имя\">\n                <mat-error  *ngIf=\"errorHandling('NameRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Englis dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameEnglish\"  placeholder=\"Name\">\n                <mat-error  *ngIf=\"errorHandling('NameEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Şəhərin adı Azərbaycan dilində</mat-label>\n                <input type=\"text\" matInput formControlName=\"NameAzerbaijan\"  placeholder=\"Ad\">\n                <mat-error  *ngIf=\"errorHandling('NameAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv etmək</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n</form>\n\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../../Core/models/Product';\nimport {CountryData} from '../../countries-all/CountryData';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {ProductService} from '../../../Core/services/Admin/product/product.service';\nimport {CountriesService} from '../../../Core/services/Admin/countries/countries.service';\nimport {CargoService} from '../../../Core/services/cargo/cargo.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-add-statement-to-anbar',\n  templateUrl: './add-statement-to-anbar.component.html',\n  styleUrls: ['./add-statement-to-anbar.component.scss']\n})\nexport class AddStatementToAnbarComponent implements OnInit {\n\n  statementForm:FormGroup\n  products:Product[];\n  wallet:CountryData[];\n\n  constructor( public dialogRef: MatDialogRef<AddStatementToAnbarComponent>,\n               private languageService:LanguagesService,\n               private service:CargoService,\n               private proService:ProductService,\n               private cntService:CountriesService,\n               @Inject(MAT_DIALOG_DATA) public data:any,) {\n    this.getProduct();\n  }\n\n  ngOnInit(): void {\n    this.statementForm= new FormGroup({\n\n      Track: new FormControl(this.data.track, [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n      Name: new FormControl(\n        this.data.name, [\n          Validators.required\n        ]\n      ),\n      Product: new FormControl(this.data.product.id, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Price: new FormControl(this.data.price, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Weight: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      CargoPrice: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Count: new FormControl(this.data.count, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Wallet: new FormControl(this.data.countryId, [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      TextArea: new FormControl(this.data.notice, [\n      ]),\n      FileInput: new FormControl('', [\n      ]),\n    })\n  }\n  getProduct(){\n    this.proService.getProductsActive().subscribe((res)=>\n      {\n        res.forEach(p=>{\n          p.productTranslates.forEach(pt=>{\n            if(pt.languageId==this.languageService.select.id){\n              p.productTranslates[0]=pt\n              this.products=res;\n            }\n          })\n        })\n      }\n    )\n    this.cntService.getCountriesActive().subscribe(\n      (res)=>{\n        this.wallet=res;\n      })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.statementForm.controls[control].hasError(error);\n  }\n  get Track() {\n    return this.statementForm.get('Track');\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Track\",this.statementForm.controls[\"Track\"].value.trim())\n    body.append(\"Name\",this.statementForm.controls[\"Name\"].value.trim())\n    body.append(\"ProductId\",this.statementForm.controls[\"Product\"].value)\n    body.append(\"id\",this.data.id.toString())\n    body.append(\"Price\",this.statementForm.controls[\"Price\"].value)\n    body.append(\"CountryId\",this.statementForm.controls[\"Wallet\"].value)\n    body.append(\"Count\",this.statementForm.controls[\"Count\"].value)\n    body.append(\"Notice\",this.statementForm.controls[\"TextArea\"].value.trim())\n    body.append(\"Weight\",this.statementForm.controls[\"Weight\"].value)\n    body.append(\"CamexPrice\",this.statementForm.controls[\"CargoPrice\"].value)\n\n    this.service.updateInAnbar(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n  public createImgPath = (serverPath: string) => {\n    return `https://localhost:44387/Site/images/statements/${serverPath}`;\n  }\n\n}\n","<h2 mat-dialog-title>Anbara əlavə et</h2>\n<form [formGroup]=\"statementForm\" novalidate (ngSubmit)=\"submit()\">\n  <mat-dialog-content class=\"mat-typography\">\n    <div class=\"d-flex flex-wrap w-100 mt-4\">\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Izləmə kodu</mat-label>\n          <input type=\"text\" matInput  placeholder=\"05228964284282P\" formControlName=\"Track\">\n          <mat-error  *ngIf=\"errorHandling('Track','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"Track.errors?.minlength \" >\n            Ən azı 5 simvol olmalıdır\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-6 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Saytın / Mağazanın adı</mat-label>\n          <input type=\"text\" matInput  placeholder=\"Trendyol\" formControlName=\"Name\">\n          <mat-error  *ngIf=\"errorHandling('Name','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Məhsul</mat-label>\n          <mat-select  formControlName=\"Product\">\n            <mat-option *ngFor=\"let item of products\"  [value]=\"item.id\"  class=\"text-capitalize\">\n              {{item.productTranslates[0].name}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Product','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Product','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Ümumi Məbləğ</mat-label>\n          <input type=\"number\" matInput placeholder=\"100\" formControlName=\"Price\">\n          <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Sayı</mat-label>\n          <input type=\"number\" matInput placeholder=\"5 \" formControlName=\"Count\">\n          <mat-error  *ngIf=\"errorHandling('Count','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Count','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-4 col-md-12 col-12 \">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Valyuta</mat-label>\n          <mat-select  formControlName=\"Wallet\">\n            <mat-option *ngFor=\"let item of wallet\" [value]=\"item.id\" class=\"text-capitalize\">\n              {{item.wallet}}\n            </mat-option>\n\n          </mat-select>\n          <mat-error  *ngIf=\"errorHandling('Wallet','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Wallet','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Daşınma haqqı</mat-label>\n          <input type=\"number\" matInput placeholder=\"10 \" formControlName=\"CargoPrice\">\n          <mat-error  *ngIf=\"errorHandling('CargoPrice','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('CargoPrice','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-lg-2 col-md-12 col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">Çəkisi</mat-label>\n          <input type=\"number\" matInput placeholder=\"123123 \" formControlName=\"Weight\">\n          <mat-error  *ngIf=\"errorHandling('Weight','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Weight','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\" >Qeyd</mat-label>\n          <textarea type=\"text\" matInput  placeholder=\"somt text\" rows=\"7\"  formControlName=\"TextArea\">\n          </textarea>\n        </mat-form-field>\n      </div>\n      <div class=\"col-12\">\n        <a target=\"_blank\" [href]=\"createImgPath(this.data.image)\">Səkil</a>\n      </div>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n    <button mat-button mat-dialog-close>Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!statementForm.valid\">Yadda saxla </button>\n  </mat-dialog-actions>\n</form>\n\n\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Order} from '../../../Core/models/Order';\nimport {UserOrderService} from '../../../Core/services/Admin/userOrder/user-order.service';\nimport {AppUser} from '../../Models/AppUser';\nimport {OrderInfoComponent} from '../../dialogs/order/order-info/order-info.component';\nimport {AddToAnbarComponent} from '../../dialogs/cargo/add-to-anbar/add-to-anbar.component';\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-user-orders',\n  templateUrl: './user-orders.component.html',\n  styleUrls: ['./user-orders.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class UserOrdersComponent implements OnInit {\n\n  dataSource: MatTableDataSource<Order>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  data:AppUser;\n  userId:number;\n  displayedColumns: string[] = ['name','url','total','isActived','actions'];\n  constructor(public service:UserOrderService,public dialog: MatDialog,private languageService:LanguagesService, private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe(param=>{\n      this.userId=param.id\n    })\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  loaded:boolean=false\n  get(){\n    this.service.get(this.userId).subscribe(res=>{\n      this.data=res;\n      this.dataSource = new MatTableDataSource(this.data.orders);\n      this.loaded=true\n      setTimeout(() =>\n      {\n        this.dataSource.paginator = this.paginator\n        this.dataSource.sort = this.sort;\n      })\n\n    })\n  }\n  openDialogInfo(row): void {\n     this.dialog.open(OrderInfoComponent, {\n      width: '1050px',\n      data: {row:row}\n    });\n  }\n  checkStatus(name){\n    if (name == 'Processed'){\n      return true\n    }\n    return false;\n  }\n\n  refuse(id,receiptId,orderId){\n    const body = new FormData();\n    body.append(\"id\",id)\n    body.append(\"receiptId\",receiptId)\n\n    const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",orderId)\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.refuse(body).subscribe(\n          ()=> {\n            this.service.refuseOrder(bodyOrder).subscribe(\n              ()=> {\n                this.get();\n              },\n              error => {\n                error.error.messages.forEach(e=>{\n                  if(e.lang_id==this.languageService.select.id){\n                    alertify.error(e.messageLang);\n                  }\n                })\n              })\n          },\n          error => {\n            error.error.messages.forEach(e=>{\n              if(e.lang_id==this.languageService.select.id){\n                alertify.error(e.messageLang);\n              }\n            })\n          })\n      }\n    })\n\n\n  }\n  changeStatus(orderId){\n\n    const bodyOrder = new FormData();\n    bodyOrder.append(\"id\",orderId)\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Deleted!',\n          'Your file has been deleted.',\n          'success'\n        )\n        this.service.changeStatus(bodyOrder).subscribe(\n          ()=> {\n            this.get();\n          },\n          error => {\n            error.error.messages.forEach(e=>{\n              if(e.lang_id==this.languageService.select.id){\n                alertify.error(e.messageLang);\n              }\n            })\n          })\n      }\n    })\n\n\n  }\n  openDialogAdd(row){\n    const dialogRefCreate = this.dialog.open(AddToAnbarComponent, {\n      width: '500px',\n      data: row\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n\n}\n","<app-layout>\n  <div *ngIf=\"loaded else elseblock\" id=\"orders\">\n    <app-title-admin [title]=\"'İstifadəçinin Sifarişləri'\"></app-title-admin>\n    <div style=\"padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Camex Id {{data.camexId}} olan istifadəçi </span>\n      </div>\n    </div>\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular \">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div>\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Saytın / Mağazanın adı</th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"url\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Link  </th>\n                <td mat-cell *matCellDef=\"let row\"><a [href]=\"row.url\" target=\"_blank\">Mehsulun linki</a></td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Ümumi məbləğ </th>\n                <td mat-cell *matCellDef=\"let row\" > {{row.receipt.value}} {{row.country.wallet}}</td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.status.name == 'Processed'; else elseblock\" class=\"badge badge-success\">İşlənib</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Prossesdə</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-raised-button color=\"primary\" class=\"mr-2\"  (click)=\"openDialogAdd(row)\">Anbara Əlavə Et</button>\n                    <button mat-raised-button color=\"accent\" class=\"mr-2\" [disabled]=\"checkStatus(row.status.name)\"  (click)=\"changeStatus(row.id)\">Qəbul Et</button>\n                    <button mat-raised-button color=\"warn\" class=\"mr-2\"  (click)=\"refuse(row.userId,row.receiptId, row.id)\">Rəd Et</button>\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogInfo(row)\" > <mat-icon style=\"font-size: 26px \">info</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-template #elseblock></ng-template>\n</app-layout>\n\n\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {UserService} from '../Core/services/user/user.service';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {NewsService} from '../Core/services/Admin/news/news.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\ndeclare let alertify:any\r\n@Component({\r\n  selector: 'app-restore',\r\n  templateUrl: './restore.component.html',\r\n  styleUrls: ['./restore.component.scss']\r\n})\r\nexport class RestoreComponent implements OnInit {\r\n\r\n  constructor(private service:UserService,\r\n              private languageService:LanguagesService,\r\n              private translate: TranslateService,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  title:string=\"Restore Password\"\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  send(){\r\n    this.service.send(this.emailFormControl.value).subscribe(()=> {\r\n        alertify.success(this.translate.instant(\"successEmail\"));\r\n      },\r\n      error => {\r\n        error.error.messages.forEach(e => {\r\n          if (e.lang_id == this.languageService.select.id) {\r\n            alertify.error(e.messageLang);\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<section id=\"restore\">\r\n  <app-title [title]=\"'restorePass'|translate\" ></app-title>\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 pb-5 d-flex justify-content-center\">\r\n    <div class=\"bg-color col-xl-6 xol-lg-6 col-md-9 col-sm-12 col-12 p-sm-0\">\r\n      <div class=\"p-lg-5 p-md-5 p-sm-3 pb-sm-4 p-2 pb-4\">\r\n        <div class=\"pr-lg-2 pl-lg-2  p-0 pt-2\">\r\n          <mat-form-field class=\"w-100 mt-3\" appearance=\"fill\">\r\n            <mat-label class=\"ml-2\">{{'EmailLogin'|translate}}</mat-label>\r\n            <input type=\"email\" matInput [formControl]=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\r\n            <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n              {{'EmailInCorrect'|translate}}\r\n            </mat-error>\r\n            <mat-error *ngIf=\"emailFormControl.hasError('required')\" [innerHTML]=\"'Required'|translate\">\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"w-100 d-flex  mt-4\">\r\n            <button mat-raised-button class=\"text-uppercase restore-button  w-100\" (click)=\"send()\">{{'SendEmail'|translate}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {LoginService} from '../Core/services/login/login.service';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {Subscription} from 'rxjs';\r\ndeclare let alertify:any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit,OnDestroy {\r\n  loginForm:FormGroup\r\n  hide:boolean=true\r\n  private subscription: Subscription;\r\n  constructor(private router: Router, private  authService:LoginService,\r\n              private languageService:LanguagesService,  private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm= new FormGroup({\r\n      Email : new FormControl('', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      Password: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n      ]),\r\n    })\r\n    this.subscription = this.authService.user$.subscribe((x) => {\r\n      if (this.route.snapshot.url[0].path === 'login') {\r\n        const accessToken = localStorage.getItem('access_token');\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (x && accessToken && refreshToken) {\r\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\r\n          this.router.navigate([returnUrl]);\r\n        }\r\n      } // optional touch-up: if a tab shows login page, then refresh the page to reduce duplicate login\r\n    });\r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n\r\n  submit() {\r\n    const body = {\r\n      \"Email\": this.loginForm.controls['Email'].value.split(' ').join(''),\r\n      \"Password\": this.loginForm.controls['Password'].value.split(' ').join(''),\r\n    }\r\n    this.authService.login(body).subscribe(\r\n      () => {\r\n        this.router.navigate(['home'])\r\n      },\r\n      error => {\r\n        if(error.error.messages){\r\n          error.error.messages.forEach(e=>{\r\n            if(e.lang_id==this.languageService.select.id){\r\n              alertify.error(e.messageLang);\r\n            }\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.loginForm.controls[control].hasError(error);\r\n  }\r\n  get Password() {\r\n    return this.loginForm.get('Password');\r\n  }\r\n}\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<section id=\"login\">\r\n  <app-title [title]=\"'login' | translate\" ></app-title>\r\n  <div class=\"container-fluid  pl-pr-10 pt-5 pb-5 d-flex justify-content-center\">\r\n    <div class=\"bg-color col-xl-6 xol-lg-6 col-md-9 col-sm-12 col-12 p-sm-0 rounded\">\r\n      <div class=\"p-lg-5 p-md-5 p-sm-3 pb-sm-4 p-2 pb-4\">\r\n        <form [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"submit()\">\r\n          <div class=\"pr-lg-2 pl-lg-2  p-0 pt-2\">\r\n            <mat-form-field class=\"w-100 mt-3\" appearance=\"fill\">\r\n              <mat-label class=\"ml-2\">{{'EmailLogin' | translate}}</mat-label>\r\n              <input type=\"email\" matInput formControlName=\"Email\" placeholder=\"camex.example@example.com\">\r\n              <mat-error  *ngIf=\"errorHandling('Email','email') && !errorHandling('Email','required')\">\r\n                {{'EmailInCorrect' | translate }}\r\n              </mat-error>\r\n              <mat-error  *ngIf=\"errorHandling('Email','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"w-100 mt-3\">\r\n              <mat-label class=\"ml-2\">{{'PasswordLogin' | translate}}</mat-label>\r\n              <input matInput  formControlName=\"Password\" [type]=\"hide ? 'password' : 'text'\">\r\n              <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n              <mat-error  *ngIf=\"errorHandling('Password','required')\" [innerHTML]=\"'Required' | translate \">\r\n              </mat-error>\r\n              <mat-error  *ngIf=\"Password.errors?.minlength \" >\r\n                {{'minLengthPass' | translate }}\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <div class=\"w-100 d-flex  mt-4\">\r\n              <button mat-raised-button class=\"text-uppercase log-button form-buttons w-100\">{{'login' | translate}} </button>\r\n            </div>\r\n            <div class=\"w-100 mt-4 d-flex justify-content-center\">\r\n              <a routerLink=\"/restore\">{{'RestoreLogin' | translate}}</a>\r\n            </div>\r\n            <div class=\"w-100 mt-4 mb-5\" style=\"border-bottom: 1px solid #dadde1;\"></div>\r\n            <div class=\"w-100 d-flex mt-4 justify-content-center\">\r\n              <a routerLink=\"/register\" class=\"w-50\">\r\n                <button mat-raised-button class=\"text-uppercase reg-button form-buttons w-100\" >{{'register' | translate}}</button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalService} from '../../global/global.service';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Product} from '../../../models/Product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  constructor(private http:HttpClient, private  global:GlobalService) { }\n\n  getProducts():Observable<Product[]>{\n    return this.http.get<Product[]>(`${this.global.path}Product`);\n  }\n  getProductsActive():Observable<Product[]>{\n    return this.http.get<Product[]>(`${this.global.path}Product/active`);\n  }\n  createProduct(body){\n    return this.http.post(`${this.global.path}Product`,body);\n  }\n  updateProduct(body){\n    return this.http.put(`${this.global.path}Product/${body.id}`,body);\n  }\n  deleteProduct(id){\n    return this.http.delete(`${this.global.path}Product/${id}`);\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../Core/services/lang/languages.service';\nimport {BalanceService} from '../../../Core/services/balance/balance.service';\ndeclare let alertify:any\n\n\n@Component({\n  selector: 'app-balance-dialog',\n  templateUrl: './balance-dialog.component.html',\n  styleUrls: ['./balance-dialog.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class BalanceDialogComponent implements OnInit {\n\n  createForm:FormGroup\n\n  constructor( public dialogRef: MatDialogRef<BalanceDialogComponent>,\n               private service:BalanceService, private languageService:LanguagesService) {\n  }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n\n      Price: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n    })\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n\n  submit(){\n    const body = new FormData();\n    body.append(\"balance\",this.createForm.controls[\"Price\"].value)\n    this.service.add(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<div id=\"dialog\">\n  <h2 mat-dialog-title>{{'TopUpBalance'|translate}}</h2>\n  <form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n    <mat-dialog-content class=\"mat-typography\">\n      <div class=\"d-flex flex-wrap w-100 mt-4\">\n        <mat-form-field class=\"w-100\" appearance=\"fill\">\n          <mat-label class=\"text-capitalize\">{{'Price'|translate}}</mat-label>\n          <input type=\"number\" matInput placeholder=\"1000 \" formControlName=\"Price\">\n          <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n          </mat-error>\n          <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n            {{'NumberPattern' | translate }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\" id=\"bottom-btns\">\n      <button mat-button mat-dialog-close>{{'Cancel'|translate}}</button>\n      <button mat-raised-button class=\"text-uppercase reg-button\"  [disabled]=\"!createForm.valid\">{{'TopUp'|translate}}</button>\n    </mat-dialog-actions>\n  </form>\n\n\n\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\nimport {TariffService} from '../../../../Core/services/Admin/countries/tariff/tariff.service';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\nimport {PriceService} from '../../../../Core/services/Admin/countries/tariff/price.service';\ndeclare let alertify:any\n@Component({\n  selector: 'app-price-create',\n  templateUrl: './price-create.component.html',\n  styleUrls: ['./price-create.component.scss']\n})\nexport class PriceCreateComponent implements OnInit {\n\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<PriceCreateComponent>,\n    private languageService:LanguagesService,\n    @Inject(MAT_DIALOG_DATA) public data:number,\n    private service:PriceService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      Min: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ]),\n      Max: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/),\n        RxwebValidators.greaterThan({fieldName:'Min'})\n      ]),\n      Price: new FormControl('', [\n        Validators.min(0.01),\n        Validators.max(100),\n        Validators.pattern(/^\\d*\\.?\\d*$/)\n      ])\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n\n  submit(){\n    const body = new FormData();\n    body.append(\"Min\",this.createForm.controls[\"Min\"].value)\n    body.append(\"Max\",this.createForm.controls[\"Max\"].value)\n    body.append(\"Price\",this.createForm.controls[\"Price\"].value)\n    body.append(\"TariffId\",this.data.toString())\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Tarif yarad</b>\n</h1>\n\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Minimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Min\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Min','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Min','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n              <p>Maksimum dəyərə 100 yazsanız səyfədə \"yuxarı\" kimi görünəcək</p>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Maksimum çəki</mat-label>\n                <input type=\"number\" matInput formControlName=\"Max\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Max','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Max','greaterThan')\" >\n                  Maksimum çəki minimum çəkidən cox olmalıdır\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Qiymət</mat-label>\n                <input type=\"number\" matInput formControlName=\"Price\" step=\"0.01\">\n                <mat-error  *ngIf=\"errorHandling('Price','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n                <mat-error  *ngIf=\"errorHandling('Price','pattern') \" >\n                  {{'NumberPattern' | translate }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import { Injectable } from '@angular/core';\r\nimport {GlobalService} from '../../Core/services/global/global.service';\r\nimport {Register} from './register';\r\nimport {catchError} from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n\r\n  path:string;\r\n  pathPostPrivate:string;\r\n  pathPostBusiness:string;\r\n\r\n  constructor(private http:HttpClient,private global:GlobalService) {\r\n    this.path=global.path+\"Auth/register\"\r\n    this.pathPostPrivate=global.path+\"Auth/register-private\"\r\n    this.pathPostBusiness=global.path+\"Auth/register-business\"\r\n  }\r\n  getRegister():Observable<Register>{\r\n    return this.http.get<Register>(this.path)\r\n  }\r\n\r\n  PostRegisterPrivate(body){\r\n    return this.http.post(this.pathPostPrivate,body)\r\n  }\r\n  UpdateBusiness(body){\r\n    return this.http.put(this.global.path+\"User/business\",body)\r\n  }\r\n  UpdatePrivate(body){\r\n    return this.http.put(this.global.path+\"User/private\",body)\r\n  }\r\n  PostRegisterBusiness(body){\r\n    return this.http.post(this.pathPostBusiness,body)\r\n  }\r\n\r\n\r\n}\r\n","import {AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {UserData} from './UserData';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RoleDialogComponent} from '../dialogs/auth/role-dialog/role-dialog.component';\nimport {ResetDialogComponent} from '../dialogs/auth/reset-dialog/reset-dialog.component';\nimport {InfoDialogComponent} from '../dialogs/auth/info-dialog/info-dialog.component';\nimport {InfoBusinessDialogComponent} from '../dialogs/auth/info-business-dialog/info-business-dialog.component';\nimport {UsersService} from '../../Core/services/Admin/users/users.service';\ndeclare let alertify:any;\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class UsersComponent implements OnInit {\n  dataSource: MatTableDataSource<UserData>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  usersData:UserData[];\n  displayedColumns: string[] = ['camexId', 'email', 'phoneNumber','roles','isActived','actions'];\n  constructor(private service:UsersService,private languageService:LanguagesService,public dialog: MatDialog) {\n    this.getUsers();\n  }\n\n  ngOnInit(): void {\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    if(filterValue==''){\n      this.getUsers()\n      return\n    }\n    const body = {\n      \"id\":filterValue\n    }\n    this.service.search(body).subscribe(res=>{\n      this.usersData=res;\n      this.dataSource = new MatTableDataSource(this.usersData);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n\n    })\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getUsers(){\n    this.service.getUsers().subscribe(res=>{\n      this.usersData=res;\n      this.dataSource = new MatTableDataSource(this.usersData);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  ChangeRole(str){\n    const body = {\n      \"str\":str\n    }\n    this.service.ChangeRole(body).subscribe(\n      ()=> {\n        this.getUsers();\n      },\n      error => {\n        error.error.messages.forEach(e=>{\n          if(e.lang_id==this.languageService.select.id){\n            alertify.error(e.messageLang);\n          }\n        })\n      })\n  }\n  openDialogRole(str:string[],id:string): void {\n    const dialogRef = this.dialog.open(RoleDialogComponent, {\n      width: '350px',\n      data: {str:str,id:id}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n     this.getUsers()\n    });\n  }\n\n  openDialogReset(id:string): void {\n    const dialogRef = this.dialog.open(ResetDialogComponent, {\n      width: '350px',\n      data: {id:id}\n    });\n  }\n  openDialogInfo(id:string,roles:string[]): void {\n    roles.forEach(r=>\n    {\n      if(r==\"PrivateCustomer\"){\n        const dialogRef = this.dialog.open(InfoDialogComponent, {\n          width: '70%',\n          data: {id:id}\n        });\n      }\n      else if(r==\"BusinessCustomer\"){\n        const dialogRef = this.dialog.open(InfoBusinessDialogComponent, {\n          width: '70%',\n          data: {id:id}\n        });\n      }\n    })\n  }\n}\n","<app-layout>\n  <div id=\"users\">\n    <app-title-admin [title]=\"'İstifadəçilər'\"></app-title-admin>\n    <div class=\"margin\">\n     <div class=\"content\">\n       <div class=\"table-angular\" >\n         <mat-form-field class=\"filter\">\n           <mat-label>Filter</mat-label>\n           <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n         </mat-form-field>\n         <div class=\"scroll\">\n           <table mat-table [dataSource]=\"dataSource\" matSort>\n             <ng-container matColumnDef=\"camexId\"  sticky>\n               <th mat-header-cell *matHeaderCellDef mat-sort-header> CamexID </th>\n               <td mat-cell *matCellDef=\"let row\"> {{row.camexId}} </td>\n             </ng-container>\n\n             <ng-container matColumnDef=\"email\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n               <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n             </ng-container>\n\n             <ng-container matColumnDef=\"phoneNumber\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header>Mobil Telefon </th>\n               <td mat-cell *matCellDef=\"let row\"> {{row.phoneNumber}} </td>\n             </ng-container>\n\n             <ng-container matColumnDef=\"roles\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header> Rolları </th>\n               <td mat-cell *matCellDef=\"let row\"> {{row.roles.concat()}} </td>\n             </ng-container>\n             <ng-container matColumnDef=\"isActived\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n               <td mat-cell *matCellDef=\"let row\" >\n                 <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activdi</span>\n                 <ng-template #elseblock >\n                   <span class=\"badge badge-danger\">Deactivdi</span>\n                 </ng-template>\n               </td>\n             </ng-container>\n             <ng-container matColumnDef=\"actions\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n               <td mat-cell *matCellDef=\"let row\" class=\"\">\n                 <div class=\"buttons\">\n                   <button  *ngIf=\"!row.isActived; else elseblock\" class=\"mr-2\" mat-raised-button (click)=\"ChangeRole(row.id)\" >Activ et</button>\n                   <ng-template #elseblock >\n                     <button mat-raised-button class=\"mr-2\" (click)=\"ChangeRole(row.id)\" >Deactiv et</button>\n                   </ng-template>\n                   <button mat-raised-button color=\"primary\" class=\"mr-2\"  (click)=\"openDialogRole(row.roles,row.id)\">Rol Dəyiş</button>\n                   <button mat-raised-button color=\"warn\" class=\"mr-2\" (click)=\"openDialogReset(row.id)\">Şifrəni sıfırla</button>\n                   <button mat-icon-button  color=\"accent\" (click)=\"openDialogInfo(row.id,row.roles)\" > <mat-icon style=\"font-size: 26px \">info</mat-icon></button>\n                   <button mat-icon-button [matMenuTriggerFor]=\"menu\"  >\n                     <mat-icon>more_vert</mat-icon>\n                   </button>\n                   <mat-menu #menu=\"matMenu\" xPosition=\"before\" >\n                     <button mat-menu-item [routerLink]=\"'/admin/users/orders/'+row.camexId\" >\n                       <span>Sifarişləri</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/users/statements/'+row.camexId\">\n                       <span>Bəyanları</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/parcels/InAnbar/'+row.camexId\">\n                       <span>Anbarda Olan</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/parcels/InWay/'+row.camexId\">\n                       <span>Yolda Olan</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/parcels/InСustoms/'+row.camexId\">\n                       <span>Gömrükdə olan</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/parcels/InOffice/'+row.camexId\">\n                       <span>Ofisdə olan</span>\n                     </button>\n                     <button mat-menu-item [routerLink]=\"'/admin/parcels/end/'+row.camexId\">\n                       <span>Bitən</span>\n                     </button>\n                   </mat-menu>\n                 </div>\n               </td>\n             </ng-container>\n\n             <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n             <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n             <!-- Row shown when there is no matching data. -->\n             <tr class=\"mat-row\" *matNoDataRow>\n               <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n             </tr>\n           </table>\n         </div>\n         <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n       </div>\n     </div>\n    </div>\n   </div>\n</app-layout>\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {News} from '../../Core/models/News';\nimport {NewsService} from '../../Core/services/Admin/news/news.service';\nimport {UpdateNewsComponent} from '../dialogs/news/update-news/update-news.component';\nimport {CreateNewsComponent} from '../dialogs/news/create-news/create-news.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-news-admin',\n  templateUrl: './news-admin.component.html',\n  styleUrls: ['./news-admin.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class NewsAdminComponent implements OnInit {\n\n  dataSource: MatTableDataSource<News>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  news:News[];\n  displayedColumns: string[] = ['title','createdDate' ,'isActived','actions'];\n  constructor(public service:NewsService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n      this.news=res;\n      this.dataSource = new MatTableDataSource( this.news);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  openDialogEdit(row): void {\n\n    const dialogRefEdit = this.dialog.open(UpdateNewsComponent, {\n      width: '1050px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n  openDialogCreate(): void {\n    const dialogRefCreate = this.dialog.open(CreateNewsComponent, {\n      width: '1050px',\n    });\n    dialogRefCreate.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'Xəbərlər'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">Xəbərlər</span>\n        <button mat-raised-button (click)=\"openDialogCreate()\">Yarad</button>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"title\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Başlıq </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.newsTranslates[2].title}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"createdDate\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Yaranma Tarixi</th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.createdDate | date:'yyyy-MM-dd'}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"isActived\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isActived; else elseblock\" class=\"badge badge-success\">Activedi</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Deactivdi</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogEdit(row)\" > <mat-icon style=\"font-size: 22px \">edit</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {LanguagesService} from '../../../../Core/services/lang/languages.service';\ndeclare let alertify:any\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport {ServiceService} from '../../../../Core/services/Admin/service/service.service';\nimport {NewsService} from '../../../../Core/services/Admin/news/news.service';\n@Component({\n  selector: 'app-service-create',\n  templateUrl: './service-create.component.html',\n  styleUrls: ['./service-create.component.scss']\n})\nexport class ServiceCreateComponent implements OnInit {\n  fileAttr = 'Şəkil seç';\n  fileToUpload:File\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public Editor = ClassicEditor;\n  createForm:FormGroup\n  constructor(\n    public dialogRef: MatDialogRef<ServiceCreateComponent>,\n    private languageService:LanguagesService,\n    private service:ServiceService\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm= new FormGroup({\n      IsActived: new FormControl(false ),\n      TitleRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      TitleAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      DescRussia: new FormControl('', [\n        Validators.required,\n      ]),\n      DescEnglish: new FormControl('', [\n        Validators.required,\n      ]),\n      DescAzerbaijan: new FormControl('', [\n        Validators.required,\n      ]),\n      FileInput: new FormControl('', [\n        Validators.required,\n      ]),\n    })\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.createForm.controls[control].hasError(error);\n  }\n  uploadFileEvt(imgFile: any) {\n    if (imgFile.target.files && imgFile.target.files[0]) {\n      this.fileAttr = '';\n      this.fileAttr = imgFile.target.files[0].name\n\n      this.fileToUpload= <File>imgFile.target.files[0]\n\n      // Reset if duplicate image uploaded again\n      this.fileInput.nativeElement.value = \"\";\n    } else {\n      this.fileAttr = 'Şəkil seç';\n    }\n  }\n  submit(){\n    const body = new FormData();\n    body.append(\"Photo\",this.fileToUpload,this.fileToUpload.name)\n    body.append(\"IsActived\",this.createForm.controls[\"IsActived\"].value)\n    const Translates= [\n      {\n        Title:this.createForm.controls[\"TitleEnglish\"].value.trim(),\n        Description:this.createForm.controls[\"DescEnglish\"].value.trim(),\n        LanguageId:1\n      },\n      {\n        Title:this.createForm.controls[\"TitleRussia\"].value.trim(),\n        Description:this.createForm.controls[\"DescRussia\"].value.trim(),\n        LanguageId:2\n      },\n      {\n        Title:this.createForm.controls[\"TitleAzerbaijan\"].value.trim(),\n        Description:this.createForm.controls[\"DescAzerbaijan\"].value.trim(),\n        LanguageId:3\n      }\n    ]\n    body.append(\"Translates\",JSON.stringify(Translates))\n    this.service.create(body).subscribe(\n      ()=> {\n        this.dialogRef.close();\n      },\n      error => {\n        error.error.messages.forEach(e => {\n          if (e.lang_id == this.languageService.select.id) {\n            alertify.error(e.messageLang);\n          }\n        })\n      }\n    )\n  }\n\n}\n","<h1 class=\"mb-2\" mat-dialog-title>\n  <b>Servis yarad</b>\n</h1>\n\n<form [formGroup]=\"createForm\" novalidate (ngSubmit)=\"submit()\">\n  <div mat-dialog-content >\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pt-4 pb-4  pl-1 pr-1 w-100\">\n        <div class=\"w-100\">\n          <div class=\"d-flex flex-wrap w-100\">\n            <div class=\"col-12\">\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Rus dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleRussia\"  >\n                <mat-error  *ngIf=\"errorHandling('TitleRussia','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">İnglis dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleEnglish\" >\n                <mat-error  *ngIf=\"errorHandling('TitleEnglish','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field class=\"w-100\" appearance=\"fill\">\n                <mat-label class=\"text-capitalize\">Azərbaycan dilində başlıq</mat-label>\n                <input type=\"text\" matInput formControlName=\"TitleAzerbaijan\">\n                <mat-error  *ngIf=\"errorHandling('TitleAzerbaijan','required')\" [innerHTML]=\"'Required' | translate \">\n                </mat-error>\n              </mat-form-field>\n\n              <mat-label class=\"text-capitalize\">Rus dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescRussia\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">İnglis dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescEnglish\"  data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n\n              <mat-label class=\"text-capitalize\">Azərbaycan dilində tesvir</mat-label>\n              <br>\n              <br>\n              <ckeditor [editor]=\"Editor\" formControlName=\"DescAzerbaijan\" data=\"<p>Hello, world!</p>\"></ckeditor>\n              <br>\n              <div class=\"w-100 \" id=\"fileInput\">\n                <mat-form-field>\n                  <mat-label class=\"text-capitalize\">Servisin İconu</mat-label>\n                  <div class=\"d-flex justify-content-between\">\n                    <input matInput [value]=\"fileAttr\" readonly name=\"name\" />\n                    <button mat-raised-button type=\"button\"  (click)=\"fileInput.click()\">\n                      Seç\n                    </button>\n                    <input type=\"file\"  hidden #fileInput formControlName=\"FileInput\"  (change)=\"uploadFileEvt($event)\" name=\"uploadFile\"\n                           accept=\"image/*\" />\n                  </div>\n                  <mat-error  *ngIf=\"errorHandling('FileInput','required')\" [innerHTML]=\"'Required' | translate \">\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-checkbox class=\"mt-2 w-100 text-capitalize\" color=\"primary\" formControlName=\"IsActived\" >\n                Activasiya\n              </mat-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div mat-dialog-actions class=\"w-100 justify-content-end\">\n    <button mat-button mat-dialog-close color=\"warn\">Ləğv Et</button>\n    <button mat-raised-button class=\"text-uppercase reg-button\"  color=\"primary\" [disabled]=\"!createForm.valid\">Yarad</button>\n  </div>\n\n</form>\n\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {LanguagesService} from '../../Core/services/lang/languages.service';\nimport {CountryData} from '../countries-all/CountryData';\nimport {CourierUpdateComponent} from '../dialogs/courier/courier-update/courier-update.component';\nimport {MessageUser} from '../../Core/models/MessageUser';\nimport {MessageService} from '../../Core/services/message/message.service';\nimport {AnswerUserComponent} from '../dialogs/answer-user/answer-user.component';\n\ndeclare let alertify:any\ndeclare let Swal:any\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class MessagesComponent implements OnInit {\n\n  dataSource: MatTableDataSource<MessageUser>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  MessagesUsers:MessageUser[];\n  displayedColumns: string[] = ['fullname','phoneNumber','camexId','isAnswered','actions'];\n  constructor(public service:MessageService,private translate: TranslateService,public dialog: MatDialog,private languageService:LanguagesService) {\n    this.get()\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ngOnInit(): void {\n  }\n  get(){\n    this.service.get().subscribe(res=>{\n      this.MessagesUsers=res;\n      this.dataSource = new MatTableDataSource( this.MessagesUsers);\n      setTimeout(()=>{\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n    })\n  }\n  delete(id:number){\n    Swal.fire({\n      title: 'Əminsiniz?',\n      text: \"Bunu geri qaytara bilməyəcəksiz!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Ləğv et',\n      confirmButtonText: 'Poz!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Swal.fire(\n          'Pozuldu!',\n          'Data pozuldu!',\n          'success'\n        )\n        this.service.delete(id).subscribe(\n          ()=> {\n            this.get()\n          },\n          error => {\n            error.error.messages.forEach(e => {\n              if (e.lang_id == this.languageService.select.id) {\n                alertify.error(e.messageLang);\n              }\n            })\n          }\n        )\n      }\n    })\n\n  }\n  openDialogAnswer(row:CountryData): void {\n\n    const dialogRefEdit = this.dialog.open(AnswerUserComponent, {\n      width: '550px',\n      data:  row\n    });\n    dialogRefEdit.afterClosed().subscribe(() => {\n      this.get()\n    });\n  }\n}\n","<app-layout >\n  <div id=\"shops\" >\n    <app-title-admin [title]=\"'İstifadəçilərin sorğuları'\"></app-title-admin>\n    <div style=\"    padding: 25px 35px;\">\n      <div class=\"top-title d-flex justify-content-between align-items-center\">\n        <span class=\"m-0 pl-3 title\">İstifadəçilərin sorğuları</span>\n      </div>\n    </div>\n\n    <div class=\"margin\">\n      <div class=\"content\">\n        <div class=\"table-angular\" >\n          <mat-form-field class=\"filter\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n          </mat-form-field>\n          <div class=\"scroll\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n              <ng-container matColumnDef=\"fullname\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Ad və Soyad</th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.fullname}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"phoneNumber\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobil nömrə</th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.phoneNumber}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"camexId\"  >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Camex Id </th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.camexId}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"isAnswered\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Statusu </th>\n                <td mat-cell *matCellDef=\"let row\" >\n                  <span *ngIf=\"row.isAnswered; else elseblock\" class=\"badge badge-success\">Cavablanıb</span>\n                  <ng-template #elseblock >\n                    <span class=\"badge badge-danger\">Cavablanmayıb</span>\n                  </ng-template>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Əməliyyatlar </th>\n                <td mat-cell *matCellDef=\"let row\" class=\"\">\n                  <div class=\"buttons\">\n                    <button mat-icon-button  color=\"primary\" (click)=\"openDialogAnswer(row)\" > <mat-icon style=\"font-size: 22px \">message</mat-icon></button>\n                    <button mat-icon-button  color=\"warn\" (click)=\"delete(row.id)\" > <mat-icon style=\"font-size: 22px \">delete_forever</mat-icon></button>\n                  </div>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              <!-- Row shown when there is no matching data. -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\"  colspan=\"12\">Data tapılmadır</td>\n              </tr>\n            </table>\n          </div>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</app-layout>\n","import {Component,  OnInit,  ViewEncapsulation} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {UserService} from '../Core/services/user/user.service';\r\nimport {AppUser} from '../Admin/Models/AppUser';\r\nimport {LangChangeEvent, TranslateService} from '@ngx-translate/core';\r\nimport {LanguagesService} from '../Core/services/lang/languages.service';\r\nimport {PrivateCustomer} from '../Admin/Models/PrivateCustomer';\r\nimport {BusinessCustomer} from '../Admin/Models/BusinessCustomer';\r\nimport {UserNavVM} from '../navbar/models/UserNavVM';\r\nimport {UserVM} from '../Core/models/UserVM';\r\n\r\n@Component({\r\n  selector: 'app-myprofile',\r\n  templateUrl: './myprofile.component.html',\r\n  styleUrls: ['./myprofile.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class MyprofileComponent implements OnInit {\r\n  user:AppUser;\r\n  fullUser:UserVM\r\n  constructor(private location: Location,private service:UserService,private translate: TranslateService, public languageService:LanguagesService) {\r\n    this.get()\r\n  }\r\n  ngOnInit(): void {\r\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n      this.get()\r\n    });\r\n  }\r\n  loaded:boolean=false\r\n  get(){\r\n    this.service.get().subscribe(res=>{\r\n      this.loaded=true\r\n        res.user.receipts.sort((x, y) => +new Date(y.createdDate) - +new Date(x.createdDate));\r\n      this.user=res.user;\r\n      this.fullUser=res;\r\n    })\r\n  }\r\n  onSwitch(str) {\r\n   this.location.replaceState(str);\r\n  }\r\n  statement:boolean=false\r\n  order:boolean=false\r\n  waiting:boolean=false\r\n  inAnbar:boolean=false\r\n  Ended:boolean=false\r\n  settings:boolean=false\r\n  activeStatement(){\r\n    this.statement=true\r\n  }\r\n  activeSettings(){\r\n    this.settings=true\r\n  }\r\n  activeEnded(){\r\n    this.Ended=true\r\n  }\r\n  activeOrder(){\r\n    this.order=true\r\n  }\r\n  activeWaiting(){\r\n    this.waiting=true\r\n  }\r\n  activeInAnbar(){\r\n    this.inAnbar=true\r\n  }\r\n}\r\n\r\n\r\n","<app-navbar>\r\n</app-navbar>\r\n<app-mobile-navbar>\r\n</app-mobile-navbar>\r\n<section id=\"myprofile\">\r\n  <div class=\"container-fluid h-100 pl-pr-10 pt-3\">\r\n    <mat-tab-group *ngIf=\"loaded;else elseblock\" class=\"pt-5\" >\r\n      <mat-tab >\r\n        <ng-template mat-tab-label > <div class=\"item\" (click)=\"onSwitch('/myprofile/control-panel')\">\r\n          <i class=\"fas fa-bars ml-2 mr-3\"></i>\r\n         <span class=\"title-panel\">\r\n          {{'PanelPage'|translate}}\r\n         </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-control-panel [user]=\"user\" (event)=\"get()\"></app-control-panel>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label  ><div class=\"item\" (click)=\"onSwitch('/myprofile/countries')\">\r\n          <i class=\"far fa-globe-europe ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'OutsideAddress'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n       <app-countries [fullUser]=\"fullUser\"></app-countries>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label >\r\n          <div class=\"item\" (click)=\"onSwitch('/myprofile/statements')\" (click)=\"activeStatement()\">\r\n            <i class=\"fas fa-edit ml-2 mr-3\"></i>\r\n            <span class=\"title-panel\">\r\n          {{'Statements'|translate}}\r\n            </span>\r\n          </div>\r\n        </ng-template>\r\n       <app-statements *ngIf=\"statement\"></app-statements>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label><div class=\"item\" (click)=\"onSwitch('/myprofile/orders')\" (click)=\"activeOrder()\">\r\n          <i class=\"far fa-browser ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'Orders'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-orders  *ngIf=\"order\" (event)=\"get()\"></app-orders>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label><div class=\"item\" (click)=\"onSwitch('/myprofile/waiting-invoice')\" (click)=\"activeWaiting()\">\r\n          <i style=\"font-size: 17px;\" class=\"far fa-file-invoice ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'WaitingInvoice'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-waiting-invoice *ngIf=\"waiting\"></app-waiting-invoice>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label><div class=\"item\" (click)=\"onSwitch('/myprofile/waiting-invoice')\" (click)=\"activeInAnbar()\">\r\n          <i class=\"fas fa-inventory ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'Parcels'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-in-anbar  (event)=\"get()\" *ngIf=\"inAnbar\"></app-in-anbar>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label><div class=\"item\" (click)=\"onSwitch('/myprofile/waiting-invoice')\" (click)=\"activeEnded()\">\r\n          <i class=\"far fa-hourglass-end ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'Ended'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-ended   *ngIf=\"Ended\"></app-ended>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label><div class=\"item\" (click)=\"onSwitch('/myprofile/settings')\" (click)=\"activeSettings()\">\r\n          <i class=\"far fa-cog ml-2 mr-3\"></i>\r\n          <span class=\"title-panel\">\r\n          {{'Settings'|translate}}\r\n          </span>\r\n        </div>\r\n        </ng-template>\r\n        <app-user-settings  [user]=\"fullUser\" *ngIf=\"settings\"></app-user-settings>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n    <ng-template #elseblock>\r\n      <div class=\"p-5 d-flex align-items-center justify-content-center\" id=\"spinner\">\r\n        <div class=\"loadingio-spinner-ripple-csnjyibusbm\"><div class=\"ldio-9sidx6p0q8c\">\r\n          <div></div><div></div>\r\n        </div></div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>\r\n<app-footer></app-footer>\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}